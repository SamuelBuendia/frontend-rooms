{"version":3,"sources":["webpack:///src/app/modules/auth/auth.module.ts","webpack:///src/app/modules/auth/registration/registration.component.ts","webpack:///src/app/modules/auth/registration/registration.component.html","webpack:///src/app/modules/auth/login/login.component.ts","webpack:///src/app/modules/auth/login/login.component.html","webpack:///src/app/modules/auth/logout/logout.component.ts","webpack:///src/app/modules/auth/logout/logout.component.html","webpack:///src/app/modules/auth/auth.component.ts","webpack:///src/app/modules/auth/auth.component.html","webpack:///src/app/modules/auth/forgot-password/forgot-password.component.ts","webpack:///src/app/modules/auth/forgot-password/forgot-password.component.html","webpack:///src/app/modules/auth/auth-routing.module.ts"],"names":["AuthModule","declarations","providers","imports","RegistrationComponent","fb","authService","router","unsubscribe","isLoading$","currentUserValue","navigate","initForm","registrationForm","group","fullname","compose","required","minLength","maxLength","email","password","cPassword","agree","validator","MatchPassword","hasError","result","Object","keys","f","forEach","key","value","newUser","setUser","registrationSubscr","registration","pipe","subscribe","user","push","sb","controls","submit","selector","templateUrl","styleUrls","LoginComponent","route","translationService","userService","defaultAuth","username","returnUrl","snapshot","queryParams","toString","loginForm","loginSubscr","login","auth","getUserByToken","userAuth","getByIdPermissions","id","model","functionaries","functionary","positions","position","departments","department","divisions","groups","permissions","language","setLanguage","LogoutComponent","logout","AuthComponent","today","Date","ErrorStates","ForgotPasswordComponent","errorState","NotSubmitted","errorStates","forgotPasswordForm","forgotPasswordSubscr","forgotPassword","NoError","HasError","routes","path","component","children","redirectTo","pathMatch","data","window","location","pathname","AuthRoutingModule","forChild","exports"],"mappings":"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","file":"modules-auth-auth-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { AuthRoutingModule } from './auth-routing.module';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { RegistrationComponent } from './registration/registration.component';\r\nimport { ForgotPasswordComponent } from './forgot-password/forgot-password.component';\r\nimport { LogoutComponent } from './logout/logout.component';\r\nimport { AuthComponent } from './auth.component';\r\nimport { TranslationModule } from '../i18n/translation.module';\r\nimport { ToastService } from '../toast/_services/toast.service';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    LoginComponent,\r\n    RegistrationComponent,\r\n    ForgotPasswordComponent,\r\n    LogoutComponent,\r\n    AuthComponent,\r\n  ],\r\n  providers: [\r\n    ToastService\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    AuthRoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    TranslationModule,\r\n  ]\r\n})\r\nexport class AuthModule {}\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { Subscription, Observable } from 'rxjs';\r\nimport { AuthService } from '../_services/auth.service';\r\nimport { Router } from '@angular/router';\r\nimport { ConfirmPasswordValidator } from './confirm-password.validator';\r\nimport { UserModel } from '../_models/user.model';\r\nimport { first } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-registration',\r\n  templateUrl: './registration.component.html',\r\n  styleUrls: ['./registration.component.scss'],\r\n})\r\nexport class RegistrationComponent implements OnInit, OnDestroy {\r\n  registrationForm: FormGroup;\r\n  hasError: boolean;\r\n  isLoading$: Observable<boolean>;\r\n\r\n  // private fields\r\n  private unsubscribe: Subscription[] = []; // Read more: => https://brianflove.com/2016/12/11/anguar-2-unsubscribe-observables/\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    public authService: AuthService,\r\n    private router: Router\r\n  ) {\r\n    this.isLoading$ = this.authService.isLoading$;\r\n    // redirect to home if already logged in\r\n    if (this.authService.currentUserValue) {\r\n      this.router.navigate(['/']);\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.initForm();\r\n  }\r\n\r\n  // convenience getter for easy access to form fields\r\n  get f() {\r\n    return this.registrationForm.controls;\r\n  }\r\n\r\n  initForm() {\r\n    this.registrationForm = this.fb.group(\r\n      {\r\n        fullname: [\r\n          '',\r\n          Validators.compose([\r\n            Validators.required,\r\n            Validators.minLength(3),\r\n            Validators.maxLength(100),\r\n          ]),\r\n        ],\r\n        email: [\r\n          'qwe@qwe.qwe',\r\n          Validators.compose([\r\n            Validators.required,\r\n            Validators.email,\r\n            Validators.minLength(3),\r\n            Validators.maxLength(320), // https://stackoverflow.com/questions/386294/what-is-the-maximum-length-of-a-valid-email-address\r\n          ]),\r\n        ],\r\n        password: [\r\n          '',\r\n          Validators.compose([\r\n            Validators.required,\r\n            Validators.minLength(3),\r\n            Validators.maxLength(100),\r\n          ]),\r\n        ],\r\n        cPassword: [\r\n          '',\r\n          Validators.compose([\r\n            Validators.required,\r\n            Validators.minLength(3),\r\n            Validators.maxLength(100),\r\n          ]),\r\n        ],\r\n        agree: [false, Validators.compose([Validators.required])],\r\n      },\r\n      {\r\n        validator: ConfirmPasswordValidator.MatchPassword,\r\n      }\r\n    );\r\n  }\r\n\r\n  submit() {\r\n    this.hasError = false;\r\n    const result = {};\r\n    Object.keys(this.f).forEach(key => {\r\n      result[key] = this.f[key].value;\r\n    });\r\n    const newUser = new UserModel();\r\n    newUser.setUser(result);\r\n    const registrationSubscr = this.authService\r\n      .registration(newUser)\r\n      .pipe(first())\r\n      .subscribe((user: UserModel) => {\r\n        if (user) {\r\n          this.router.navigate(['/']);\r\n        } else {\r\n          this.hasError = true;\r\n        }\r\n      });\r\n    this.unsubscribe.push(registrationSubscr);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.unsubscribe.forEach((sb) => sb.unsubscribe());\r\n  }\r\n}\r\n","<!--begin::Signup-->\r\n<div class=\"login-form login-signup\">\r\n  <!--begin::Form-->\r\n  <form\r\n    class=\"form\"\r\n    novalidate=\"novalidate\"\r\n    id=\"kt_login_signup_form\"\r\n    [formGroup]=\"registrationForm\"\r\n    (ngSubmit)=\"submit()\"\r\n  >\r\n    <!--begin::Title-->\r\n    <div class=\"pb-13 pt-lg-0 pt-5\">\r\n      <h3 class=\"font-weight-bolder text-dark font-size-h4 font-size-h1-lg\">\r\n        Sign Up\r\n      </h3>\r\n      <p class=\"text-muted font-weight-bold font-size-h4\">\r\n        Enter your details to create your account\r\n      </p>\r\n    </div>\r\n    <!--end::Title-->\r\n\r\n    <!-- begin::Alert error-->\r\n    <ng-container *ngIf=\"hasError\">\r\n      <div\r\n        class=\"mb-10 alert alert-custom alert-light-danger alert-dismissible\"\r\n      >\r\n        <div class=\"alert-text\">The registration details are incorrect</div>\r\n      </div>\r\n    </ng-container>\r\n    <!-- end::Alert error-->\r\n\r\n    <!--begin::Form group-->\r\n    <div class=\"form-group\">\r\n      <label class=\"font-size-h6 font-weight-bolder text-dark\">Fullname</label>\r\n      <input\r\n        class=\"form-control form-control-solid h-auto py-7 px-6 rounded-lg font-size-h6\"\r\n        type=\"text\"\r\n        name=\"fullname\"\r\n        formControlName=\"fullname\"\r\n        placeholder=\"Fullname\"\r\n        autocomplete=\"off\"\r\n        [ngClass]=\"{\r\n          'is-invalid': registrationForm.controls['fullname'].invalid\r\n        }\"\r\n      />\r\n      <ng-container\r\n        [ngTemplateOutlet]=\"formError\"\r\n        [ngTemplateOutletContext]=\"{\r\n          validation: 'required',\r\n          message: 'Fullname is required',\r\n          control: registrationForm.controls['fullname']\r\n        }\"\r\n      ></ng-container>\r\n      <ng-container\r\n        [ngTemplateOutlet]=\"formError\"\r\n        [ngTemplateOutletContext]=\"{\r\n          validation: 'minlength',\r\n          message: 'Fullname should have at least 3 symbols',\r\n          control: registrationForm.controls['fullname']\r\n        }\"\r\n      ></ng-container>\r\n      <ng-container\r\n        [ngTemplateOutlet]=\"formError\"\r\n        [ngTemplateOutletContext]=\"{\r\n          validation: 'maxLength',\r\n          message: 'Fullname should have maximum 100 symbols',\r\n          control: registrationForm.controls['fullname']\r\n        }\"\r\n      ></ng-container>\r\n    </div>\r\n    <!--end::Form group-->\r\n\r\n    <!--begin::Form group-->\r\n    <div class=\"form-group\">\r\n      <label class=\"font-size-h6 font-weight-bolder text-dark\">Email</label>\r\n      <input\r\n        class=\"form-control form-control-solid h-auto py-7 px-6 rounded-lg font-size-h6\"\r\n        type=\"email\"\r\n        placeholder=\"Email\"\r\n        name=\"email\"\r\n        formControlName=\"email\"\r\n        autocomplete=\"off\"\r\n        [ngClass]=\"{ 'is-invalid': registrationForm.controls['email'].invalid }\"\r\n      />\r\n      <ng-container\r\n        [ngTemplateOutlet]=\"formError\"\r\n        [ngTemplateOutletContext]=\"{\r\n          validation: 'required',\r\n          message: 'Email is required',\r\n          control: registrationForm.controls['email']\r\n        }\"\r\n      ></ng-container>\r\n      <ng-container\r\n        [ngTemplateOutlet]=\"formError\"\r\n        [ngTemplateOutletContext]=\"{\r\n          validation: 'email',\r\n          message: 'Email is invalid',\r\n          control: registrationForm.controls['email']\r\n        }\"\r\n      ></ng-container>\r\n      <ng-container\r\n        [ngTemplateOutlet]=\"formError\"\r\n        [ngTemplateOutletContext]=\"{\r\n          validation: 'minlength',\r\n          message: 'Email should have at least 3 symbols',\r\n          control: registrationForm.controls['email']\r\n        }\"\r\n      ></ng-container>\r\n      <ng-container\r\n        [ngTemplateOutlet]=\"formError\"\r\n        [ngTemplateOutletContext]=\"{\r\n          validation: 'maxLength',\r\n          message: 'Email should have maximum 360 symbols',\r\n          control: registrationForm.controls['email']\r\n        }\"\r\n      ></ng-container>\r\n    </div>\r\n    <!--end::Form group-->\r\n\r\n    <!--begin::Form group-->\r\n    <div class=\"form-group\">\r\n      <label class=\"font-size-h6 font-weight-bolder text-dark pt-5\"\r\n        >Password</label\r\n      >\r\n      <input\r\n        class=\"form-control form-control-solid h-auto py-7 px-6 rounded-lg font-size-h6\"\r\n        type=\"password\"\r\n        placeholder=\"Password\"\r\n        name=\"password\"\r\n        formControlName=\"password\"\r\n        autocomplete=\"off\"\r\n        [ngClass]=\"{\r\n          'is-invalid': registrationForm.controls['password'].invalid\r\n        }\"\r\n      />\r\n      <ng-container\r\n        [ngTemplateOutlet]=\"formError\"\r\n        [ngTemplateOutletContext]=\"{\r\n          validation: 'required',\r\n          message: 'Password is required',\r\n          control: registrationForm.controls['password']\r\n        }\"\r\n      ></ng-container>\r\n      <ng-container\r\n        [ngTemplateOutlet]=\"formError\"\r\n        [ngTemplateOutletContext]=\"{\r\n          validation: 'minlength',\r\n          message: 'Password should have at least 3 symbols',\r\n          control: registrationForm.controls['password']\r\n        }\"\r\n      ></ng-container>\r\n      <ng-container\r\n        [ngTemplateOutlet]=\"formError\"\r\n        [ngTemplateOutletContext]=\"{\r\n          validation: 'maxLength',\r\n          message: 'Password should have maximum 100 symbols',\r\n          control: registrationForm.controls['password']\r\n        }\"\r\n      ></ng-container>\r\n    </div>\r\n    <!--end::Form group-->\r\n\r\n    <!--begin::Form group-->\r\n    <div class=\"form-group\">\r\n      <label class=\"font-size-h6 font-weight-bolder text-dark pt-5\"\r\n        >Confirm Password</label\r\n      >\r\n      <input\r\n        class=\"form-control form-control-solid h-auto py-7 px-6 rounded-lg font-size-h6\"\r\n        type=\"password\"\r\n        placeholder=\"Confirm password\"\r\n        name=\"cPassword\"\r\n        autocomplete=\"off\"\r\n        formControlName=\"cPassword\"\r\n        [ngClass]=\"{\r\n          'is-invalid': registrationForm.controls['cPassword'].invalid\r\n        }\"\r\n      />\r\n      <ng-container\r\n        [ngTemplateOutlet]=\"formError\"\r\n        [ngTemplateOutletContext]=\"{\r\n          validation: 'required',\r\n          message: 'Confirm Password is required',\r\n          control: registrationForm.controls['cPassword']\r\n        }\"\r\n      ></ng-container>\r\n      <ng-container\r\n        [ngTemplateOutlet]=\"formError\"\r\n        [ngTemplateOutletContext]=\"{\r\n          validation: 'minlength',\r\n          message: 'Confirm Password should have at least 3 symbols',\r\n          control: registrationForm.controls['cPassword']\r\n        }\"\r\n      ></ng-container>\r\n      <ng-container\r\n        [ngTemplateOutlet]=\"formError\"\r\n        [ngTemplateOutletContext]=\"{\r\n          validation: 'maxLength',\r\n          message: 'Confirm Password should have maximum 100 symbols',\r\n          control: registrationForm.controls['cPassword']\r\n        }\"\r\n      ></ng-container>\r\n      <ng-container\r\n        *ngIf=\"\r\n          registrationForm.controls['cPassword'].errors &&\r\n          registrationForm.controls['cPassword'].errors.ConfirmPassword\r\n        \"\r\n      >\r\n        <div class=\"fv-plugins-message-container\">\r\n          <div class=\"fv-help-block\">\r\n            'Passsword' and 'Confirm Password' didn't match.\r\n          </div>\r\n        </div>\r\n      </ng-container>\r\n    </div>\r\n    <!--end::Form group-->\r\n\r\n    <!--begin::Form group-->\r\n    <div class=\"form-group\">\r\n      <label class=\"checkbox mb-0\">\r\n        <input type=\"checkbox\" formControlName=\"agree\" name=\"agree\" />&nbsp;I\r\n        Agree the&nbsp;<a\r\n          href=\"https://keenthemes.com/metronic/?page=faq\"\r\n          target=\"_blank\"\r\n          >terms and conditions</a\r\n        >.&nbsp;\r\n        <span></span>\r\n      </label>\r\n    </div>\r\n    <!--end::Form group-->\r\n\r\n    <!--begin::Form group-->\r\n    <div class=\"form-group d-flex flex-wrap pb-lg-0 pb-3\">\r\n      <button\r\n        type=\"submit\"\r\n        id=\"kt_login_signup_submit\"\r\n        [disabled]=\"\r\n          registrationForm.invalid || !registrationForm.controls['agree'].value\r\n        \"\r\n        class=\"btn btn-primary font-weight-bolder font-size-h6 px-8 py-4 my-3 mr-4\"\r\n      >\r\n        Submit\r\n      </button>\r\n      <a\r\n        routerLink=\"/auth/login\"\r\n        type=\"button\"\r\n        id=\"kt_login_signup_cancel\"\r\n        class=\"btn btn-light-primary font-weight-bolder font-size-h6 px-8 py-4 my-3\"\r\n      >\r\n        Cancel\r\n      </a>\r\n\r\n      <ng-container *ngIf=\"isLoading$ | async\">\r\n        <span class=\"spinner spinner-primary ml-5\"></span>\r\n      </ng-container>\r\n    </div>\r\n    <!--end::Form group-->\r\n  </form>\r\n  <!--end::Form-->\r\n</div>\r\n<!--end::Signup-->\r\n\r\n<ng-template\r\n  #formError\r\n  let-control=\"control\"\r\n  let-message=\"message\"\r\n  let-validation=\"validation\"\r\n>\r\n  <ng-container\r\n    *ngIf=\"control.hasError(validation) && (control.dirty || control.touched)\"\r\n  >\r\n    <div class=\"fv-plugins-message-container\">\r\n      <div class=\"fv-help-block\">\r\n        {{ message }}\r\n      </div>\r\n    </div>\r\n  </ng-container>\r\n</ng-template>\r\n","import { Component, OnInit, OnDestroy, ChangeDetectorRef } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Subscription, Observable } from 'rxjs';\r\nimport { first } from 'rxjs/operators';\r\nimport { UserModel } from '../_models/user.model';\r\nimport { AuthService } from '../_services/auth.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { TranslationService } from '../../../modules/i18n/translation.service';\r\nimport { UserService } from 'src/app/pages/user/_services';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss'],\r\n})\r\nexport class LoginComponent implements OnInit, OnDestroy {\r\n  // KeenThemes mock, change it to:\r\n  // defaultAuth = {\r\n  //   username: '',\r\n  //   password: '',\r\n  // };\r\n  defaultAuth: any = {\r\n    username: '@rooms.com',\r\n    password: '',\r\n    };\r\n  loginForm: FormGroup;\r\n  hasError: boolean;\r\n  returnUrl: string;\r\n  isLoading$: Observable<boolean>;\r\n\r\n  // private fields\r\n  private unsubscribe: Subscription[] = []; // Read more: => https://brianflove.com/2016/12/11/anguar-2-unsubscribe-observables/\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    public authService: AuthService,\r\n    private route: ActivatedRoute,\r\n    private translationService: TranslationService,\r\n    private router: Router,\r\n    private userService: UserService,\r\n  ) {\r\n    this.isLoading$ = this.authService.isLoading$;\r\n    // redirect to home if already logged in\r\n    if (this.authService.currentUserValue) {\r\n      this.router.navigate(['/dashboard']);\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.initForm();\r\n    // get return url from route parameters or default to '/'\r\n    this.returnUrl =\r\n        this.route.snapshot.queryParams['returnUrl'.toString()] || '/';\r\n    }\r\n\r\n  // convenience getter for easy access to form fields\r\n  get f() {\r\n    return this.loginForm.controls;\r\n  }\r\n\r\n  initForm() {\r\n    this.loginForm = this.fb.group({\r\n      username: [\r\n        this.defaultAuth.username,\r\n        Validators.compose([\r\n          Validators.required,\r\n          Validators.email,\r\n          Validators.minLength(3),\r\n          Validators.maxLength(320), // https://stackoverflow.com/questions/386294/what-is-the-maximum-length-of-a-valid-username-address\r\n        ]),\r\n      ],\r\n      password: [\r\n        this.defaultAuth.password,\r\n        Validators.compose([\r\n          Validators.required,\r\n          Validators.minLength(3),\r\n          Validators.maxLength(100),\r\n        ]),\r\n      ],\r\n    });\r\n  }\r\n\r\n  submit() {\r\n    this.hasError = false;\r\n    const loginSubscr = this.authService\r\n      .login(this.f.username.value, this.f.password.value)\r\n      .pipe(first())\r\n      .subscribe((auth: any) => {\r\n        this.authService\r\n        .getUserByToken()\r\n        .pipe(first())\r\n        .subscribe((userAuth: any) => {\r\n          if (userAuth){\r\n            this.userService.getByIdPermissions(userAuth.id)\r\n            .pipe(first())\r\n            .subscribe((user: any) => {  \r\n              let model = user;\r\n              if (user.functionaries) {\r\n                model.user.functionary = user.functionaries[0];\r\n                if (user.positions) {\r\n                  model.user.functionary.position = user.positions[0];\r\n                  if (user.departments) {\r\n                    model.user.functionary.position.department = user.departments[0];\r\n                  }\r\n                }\r\n  \r\n                if (user.divisions) {\r\n                  model.user.functionary.divisions = user.divisions;\r\n                }\r\n              }\r\n  \r\n              if (user.groups) {\r\n                model.user.groups = user.groups;\r\n                if (user.permissions) {\r\n                  model.user.groups[0].permissions = user.permissions;\r\n                }\r\n              }\r\n  \r\n              if (model.user.language) {\r\n                this.translationService.setLanguage(model.user.language);\r\n              } else {\r\n                this.translationService.setLanguage('es');\r\n              }\r\n              this.authService.currentUserValue = model.user;\r\n  \r\n              this.router.navigate(['/dashboard']);\r\n            });\r\n          } else {\r\n            this.hasError = true;\r\n          }\r\n\r\n        }); \r\n      });\r\n    this.unsubscribe.push(loginSubscr);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.unsubscribe.forEach((sb) => sb.unsubscribe());\r\n  }\r\n}\r\n","<!--begin::Signin-->\r\n<div class=\"login-form login-signin\">\r\n  <!--begin::Form-->\r\n  <form\r\n    class=\"form\"\r\n    [formGroup]=\"loginForm\"\r\n    novalidate=\"novalidate\"\r\n    id=\"kt_login_signin_form\"\r\n    (ngSubmit)=\"submit()\"\r\n  >\r\n    <!--begin::Title-->\r\n    <div class=\"pb-13 pt-lg-0 pt-5\">\r\n      <h3 class=\"font-weight-bolder text-dark font-size-h4 font-size-h1-lg\">\r\n        {{ 'COMMON.WELCOME_TO' | translate }} Rooms\r\n      </h3>\r\n      <!-- <span class=\"text-muted font-weight-bold font-size-h4\"\r\n        >New Here?\r\n        <a\r\n          routerLink=\"/auth/registration\"\r\n          id=\"kt_login_signup\"\r\n          class=\"text-primary font-weight-bolder\"\r\n          >{{ \"AUTH.GENERAL.SIGNUP_BUTTON\" | translate }}</a\r\n        >\r\n      </span> -->\r\n    </div>\r\n    <!--end::Title-->\r\n\r\n    <!-- begin::Alert info-->\r\n    <!-- <ng-container *ngIf=\"!hasError\">\r\n      <div class=\"mb-10 alert alert-custom alert-light-info alert-dismissible\">\r\n        <div class=\"alert-text\">\r\n          Use account <strong>{{ defaultAuth.username }}</strong> and password\r\n          <strong>{{ defaultAuth.password }}</strong> to continue.\r\n        </div>\r\n      </div>\r\n    </ng-container> -->\r\n    <!-- end::Alert info-->\r\n\r\n    <!-- begin::Alert error-->\r\n    <ng-container *ngIf=\"hasError\">\r\n      <div\r\n        class=\"mb-10 alert alert-custom alert-light-danger alert-dismissible\"\r\n      >\r\n        <div class=\"alert-text\">{{ 'AUTH.VALIDATION.INVALID_LOGIN' | translate }}</div>\r\n      </div>\r\n    </ng-container>\r\n    <!-- end::Alert error-->\r\n\r\n    <!--begin::Form group-->\r\n    <div class=\"form-group\">\r\n      <label class=\"font-size-h6 font-weight-bolder text-dark\">{{ 'AUTH.VALIDATION.USERNAME' | translate }}</label>\r\n      <input\r\n        class=\"form-control form-control-solid h-auto py-7 px-6 rounded-lg\"\r\n        type=\"email\"\r\n        name=\"username\"\r\n        formControlName=\"username\"\r\n        autocomplete=\"off\"\r\n        [ngClass]=\"{ 'is-invalid': loginForm.controls['username'].invalid }\"\r\n      />\r\n      <ng-container\r\n        [ngTemplateOutlet]=\"formError\"\r\n        [ngTemplateOutletContext]=\"{\r\n          validation: 'required',\r\n          message: 'Username is required',\r\n          control: loginForm.controls['username']\r\n        }\"\r\n      ></ng-container>      \r\n      <ng-container\r\n        [ngTemplateOutlet]=\"formError\"\r\n        [ngTemplateOutletContext]=\"{\r\n          validation: 'username',\r\n          message: 'Username is invalid',\r\n          control: loginForm.controls['username']\r\n        }\"\r\n      ></ng-container>\r\n      <ng-container\r\n        [ngTemplateOutlet]=\"formError\"\r\n        [ngTemplateOutletContext]=\"{\r\n          validation: 'minLength',\r\n          message: 'Username should have at least 3 symbols',\r\n          control: loginForm.controls['username']\r\n        }\"\r\n      ></ng-container>\r\n      <ng-container\r\n        [ngTemplateOutlet]=\"formError\"\r\n        [ngTemplateOutletContext]=\"{\r\n          validation: 'maxLength',\r\n          message: 'Username should have maximum 360 symbols',\r\n          control: loginForm.controls['username']\r\n        }\"\r\n      ></ng-container>\r\n    </div>\r\n    <!--end::Form group-->\r\n\r\n    <!--begin::Form group-->\r\n    <div class=\"form-group\">\r\n      <div class=\"d-flex justify-content-between mt-n5\">\r\n        <label class=\"font-size-h6 font-weight-bolder text-dark pt-5\"\r\n        >{{ 'AUTH.VALIDATION.PASSWORD' | translate }}</label\r\n        >\r\n        <!-- <a\r\n          routerLink=\"/auth/forgot-password\"\r\n          class=\"text-primary font-size-h6 font-weight-bolder text-hover-primary pt-5\"\r\n          id=\"kt_login_forgot\"\r\n        >\r\n          Forgot Password ?\r\n        </a> -->\r\n      </div>\r\n\r\n      <input\r\n        class=\"form-control form-control-solid h-auto py-7 px-6 rounded-lg\"\r\n        type=\"password\"\r\n        name=\"password\"\r\n        autocomplete=\"off\"\r\n        formControlName=\"password\"\r\n        [ngClass]=\"{ 'is-invalid': loginForm.controls['password'].invalid }\"\r\n      />\r\n      <ng-container\r\n        [ngTemplateOutlet]=\"formError\"\r\n        [ngTemplateOutletContext]=\"{\r\n          validation: 'required',\r\n          message: 'Password is required',\r\n          control: loginForm.controls['password']\r\n        }\"\r\n      ></ng-container>\r\n      <ng-container\r\n        [ngTemplateOutlet]=\"formError\"\r\n        [ngTemplateOutletContext]=\"{\r\n          validation: 'minlength',\r\n          message: 'Password should have at least 3 symbols',\r\n          control: loginForm.controls['password']\r\n        }\"\r\n      ></ng-container>\r\n      <ng-container\r\n        [ngTemplateOutlet]=\"formError\"\r\n        [ngTemplateOutletContext]=\"{\r\n          validation: 'maxLength',\r\n          message: 'Password should have maximum 100 symbols',\r\n          control: loginForm.controls['password']\r\n        }\"\r\n      ></ng-container>\r\n    </div>\r\n    <!--end::Form group-->\r\n\r\n    <!--begin::Action-->\r\n    <div class=\"pb-lg-0 pb-5\">\r\n      <button\r\n        type=\"submit\"\r\n        id=\"kt_login_signin_submit\"\r\n        class=\"btn btn-primary font-weight-bolder font-size-h6 px-8 py-4 my-3 mr-3\"\r\n        [disabled]=\"loginForm.invalid\"\r\n      >\r\n        {{ 'AUTH.GENERAL.SIGN_IN' | translate }}\r\n      </button>\r\n\r\n      <!-- <button\r\n        type=\"button\"\r\n        class=\"btn btn-light-primary font-weight-bolder px-8 py-4 my-3 font-size-lg\"\r\n      >\r\n        <span class=\"svg-icon svg-icon-md\">\r\n          <img src=\"./assets/media/svg/social-icons/google.svg\" />\r\n        </span>\r\n        Sign in with Google\r\n      </button> -->\r\n\r\n      <ng-container *ngIf=\"isLoading$ | async\">\r\n        <span class=\"spinner spinner-primary ml-5\"></span>\r\n      </ng-container>\r\n    </div>\r\n    <!--end::Action-->\r\n  </form>\r\n  <!--end::Form-->\r\n</div>\r\n<!--end::Signin-->\r\n\r\n<ng-template\r\n  #formError\r\n  let-control=\"control\"\r\n  let-message=\"message\"\r\n  let-validation=\"validation\"\r\n>\r\n  <ng-container\r\n    *ngIf=\"control.hasError(validation) && (control.dirty || control.touched)\"\r\n  >\r\n    <div class=\"fv-plugins-message-container\">\r\n      <div class=\"fv-help-block\">\r\n        {{ message }}\r\n      </div>\r\n    </div>\r\n  </ng-container>\r\n</ng-template>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../_services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-logout',\r\n  templateUrl: './logout.component.html',\r\n  styleUrls: ['./logout.component.scss'],\r\n})\r\nexport class LogoutComponent implements OnInit {\r\n  constructor(private authService: AuthService) {\r\n    this.authService.logout();\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n}\r\n","<p>logout works!</p>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-auth',\r\n  templateUrl: './auth.component.html',\r\n  styleUrls: ['./auth.component.scss']\r\n})\r\nexport class AuthComponent implements OnInit {\r\n\r\n  today: Date = new Date();\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"d-flex flex-column flex-root h-100\" id=\"kt_login_wrapper\">\r\n  <!--begin::Login-->\r\n  <div class=\"login login-1 login-signin-on d-flex flex-column flex-lg-row flex-column-fluid bg-white\" id=\"kt_login\">\r\n    <!--begin::Aside-->\r\n    <div class=\"login-aside d-flex flex-column flex-row-auto\" style=\"background-color: #A6D5FA;\">\r\n      <!--begin::Aside Top-->\r\n      <div class=\"d-flex flex-column-auto flex-column py-lg-10 pt-15\">\r\n        <!--begin::Aside header-->\r\n        <a href=\"#\" class=\"text-center my-5\">\r\n          <img src=\"./assets/media/logos/logo.png\" class=\"max-h-70px\" alt=\"\" />\r\n        </a>\r\n        <!--end::Aside header-->\r\n\r\n        <!--begin::Aside title-->\r\n        <h3 class=\"font-weight-bolder text-center font-size-h4 font-size-h1-lg\" style=\"color: #0c6bb4;\">\r\n          Gestiona tus grupos <br> Académicos\r\n        </h3>\r\n        <!--end::Aside title-->\r\n      </div>\r\n      <!--end::Aside Top-->\r\n\r\n      <!--begin::Aside Bottom-->\r\n      <div class=\"aside-img d-flex flex-row-fluid bgi-no-repeat bgi-position-y-bottom bgi-position-x-center\"\r\n        style=\"background-image: url('./assets/media/svg/illustrations/working.svg'); background-position: top;\"></div>\r\n      <!--end::Aside Bottom-->\r\n    </div>\r\n    <!--begin::Aside-->\r\n\r\n    <!--begin::Content-->\r\n    <div\r\n      class=\"login-content flex-row-fluid d-flex flex-column justify-content-center position-relative overflow-hidden p-7 mx-auto\">\r\n      <!--begin::Content body-->\r\n      <div class=\"d-flex flex-column-fluid flex-center\">\r\n        <router-outlet></router-outlet>\r\n      </div>\r\n      <!--end::Content body-->\r\n\r\n      <!--begin::Content footer-->\r\n      <div class=\"d-flex justify-content-lg-start justify-content-center align-items-end py-7 py-lg-0\">\r\n        <a href=\"#\" class=\"text-primary font-weight-bolder font-size-h5\">{{ 'AUTH.GENERAL.TERMS' | translate }}</a>\r\n        <!-- <a href=\"#\" class=\"text-primary ml-10 font-weight-bolder font-size-h5\">Plans</a> -->\r\n        <!-- <a href=\"#\" class=\"text-primary ml-10 font-weight-bolder font-size-h5\">Contact Us</a> -->\r\n      </div>\r\n      <!--end::Content footer-->\r\n    </div>\r\n    <!--end::Content-->\r\n  </div>\r\n  <!--end::Login-->\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { AuthService } from '../_services/auth.service';\r\nimport { first } from 'rxjs/operators';\r\n\r\nenum ErrorStates {\r\n  NotSubmitted,\r\n  HasError,\r\n  NoError,\r\n}\r\n\r\n@Component({\r\n  selector: 'app-forgot-password',\r\n  templateUrl: './forgot-password.component.html',\r\n  styleUrls: ['./forgot-password.component.scss'],\r\n})\r\nexport class ForgotPasswordComponent implements OnInit {\r\n  forgotPasswordForm: FormGroup;\r\n  errorState: ErrorStates = ErrorStates.NotSubmitted;\r\n  errorStates = ErrorStates;\r\n  isLoading$: Observable<boolean>;\r\n\r\n  // private fields\r\n  private unsubscribe: Subscription[] = []; // Read more: => https://brianflove.com/2016/12/11/anguar-2-unsubscribe-observables/\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private authService: AuthService\r\n  ) {\r\n    this.isLoading$ = this.authService.isLoading$;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.initForm();\r\n  }\r\n\r\n  // convenience getter for easy access to form fields\r\n  get f() {\r\n    return this.forgotPasswordForm.controls;\r\n  }\r\n\r\n  initForm() {\r\n    this.forgotPasswordForm = this.fb.group({\r\n      email: [\r\n        'admin@demo.com',\r\n        Validators.compose([\r\n          Validators.required,\r\n          Validators.email,\r\n          Validators.minLength(3),\r\n          Validators.maxLength(320), // https://stackoverflow.com/questions/386294/what-is-the-maximum-length-of-a-valid-email-address\r\n        ]),\r\n      ],\r\n    });\r\n  }\r\n\r\n  submit() {\r\n    this.errorState = ErrorStates.NotSubmitted;\r\n    const forgotPasswordSubscr = this.authService\r\n      .forgotPassword(this.f.email.value)\r\n      .pipe(first())\r\n      .subscribe((result: boolean) => {\r\n        this.errorState = result ? ErrorStates.NoError : ErrorStates.HasError;\r\n      });\r\n    this.unsubscribe.push(forgotPasswordSubscr);\r\n  }\r\n}\r\n","<div class=\"login-form login-forgot\">\r\n  <!--begin::Form-->\r\n  <form\r\n    class=\"form fv-plugins-bootstrap fv-plugins-framework\"\r\n    novalidate=\"novalidate\"\r\n    [formGroup]=\"forgotPasswordForm\"\r\n    (ngSubmit)=\"submit()\"\r\n    id=\"kt_login_forgot_form\"\r\n    [ngStyle]=\"{\r\n      display: errorState === errorStates.NoError ? 'none' : 'block'\r\n    }\"\r\n  >\r\n    <!--begin::Title-->\r\n    <div class=\"pb-13 pt-lg-0 pt-5\">\r\n      <h3 class=\"font-weight-bolder text-dark font-size-h4 font-size-h1-lg\">\r\n        Forgotten Password ?\r\n      </h3>\r\n      <p class=\"text-muted font-weight-bold font-size-h4\">\r\n        Enter your email to reset your password\r\n      </p>\r\n    </div>\r\n    <!--end::Title-->\r\n\r\n    <!-- begin::Alert error-->\r\n    <ng-container *ngIf=\"errorState === errorStates.HasError\">\r\n      <div\r\n        class=\"mb-10 alert alert-custom alert-light-danger alert-dismissible\"\r\n      >\r\n        <div class=\"alert-text\">The email detail is incorrect</div>\r\n      </div>\r\n    </ng-container>\r\n    <!-- end::Alert error-->\r\n\r\n    <!--begin::Form group-->\r\n    <div class=\"form-group fv-plugins-icon-container has-danger\">\r\n      <input\r\n        class=\"form-control form-control-solid h-auto py-7 px-6 rounded-lg font-size-h6\"\r\n        type=\"email\"\r\n        formControlName=\"email\"\r\n        placeholder=\"Email\"\r\n        name=\"email\"\r\n        autocomplete=\"off\"\r\n        [ngClass]=\"{\r\n          'is-invalid': forgotPasswordForm.controls['email'].invalid\r\n        }\"\r\n      />\r\n\r\n      <ng-container\r\n        [ngTemplateOutlet]=\"formError\"\r\n        [ngTemplateOutletContext]=\"{\r\n          validation: 'required',\r\n          message: 'Email is required',\r\n          control: forgotPasswordForm.controls['email']\r\n        }\"\r\n      ></ng-container>\r\n      <ng-container\r\n        [ngTemplateOutlet]=\"formError\"\r\n        [ngTemplateOutletContext]=\"{\r\n          validation: 'email',\r\n          message: 'Email is invalid',\r\n          control: forgotPasswordForm.controls['email']\r\n        }\"\r\n      ></ng-container>\r\n      <ng-container\r\n        [ngTemplateOutlet]=\"formError\"\r\n        [ngTemplateOutletContext]=\"{\r\n          validation: 'minLength',\r\n          message: 'Email should have at least 3 symbols',\r\n          control: forgotPasswordForm.controls['email']\r\n        }\"\r\n      ></ng-container>\r\n      <ng-container\r\n        [ngTemplateOutlet]=\"formError\"\r\n        [ngTemplateOutletContext]=\"{\r\n          validation: 'maxLength',\r\n          message: 'Email should have maximum 360 symbols',\r\n          control: forgotPasswordForm.controls['email']\r\n        }\"\r\n      ></ng-container>\r\n    </div>\r\n    <!--end::Form group-->\r\n    <!--begin::Form group-->\r\n    <div class=\"form-group d-flex flex-wrap pb-lg-0\">\r\n      <button\r\n        type=\"submit\"\r\n        id=\"kt_login_forgot_submit\"\r\n        class=\"btn btn-primary font-weight-bolder font-size-h6 px-8 py-4 my-3 mr-4\"\r\n      >\r\n        Submit\r\n      </button>\r\n      <a\r\n        routerLink=\"/auth/login\"\r\n        id=\"kt_login_forgot_cancel\"\r\n        class=\"btn btn-light-primary font-weight-bolder font-size-h6 px-8 py-4 my-3\"\r\n      >\r\n        Cancel\r\n      </a>\r\n\r\n      <ng-container *ngIf=\"isLoading$ | async\">\r\n        <span class=\"spinner spinner-primary ml-5\"></span>\r\n      </ng-container>\r\n    </div>\r\n    <!--end::Form group-->\r\n    <div></div>\r\n  </form>\r\n  <!--end::Form-->\r\n\r\n  <ng-container *ngIf=\"errorState === errorStates.NoError\">\r\n    <div\r\n      class=\"card card-custom bgi-no-repeat gutter-b\"\r\n      style=\"\r\n        height: 175px;\r\n        background-color: #4ab58e;\r\n        background-position: calc(100% + 1rem) bottom;\r\n        background-size: 25% auto;\r\n        background-image: url(assets/media/svg/humans/custom-1.svg);\r\n      \"\r\n    >\r\n      <!--begin::Body-->\r\n      <div class=\"card-body d-flex align-items-center\">\r\n        <div class=\"py-2\">\r\n          <h3 class=\"text-white font-weight-bolder mb-3\">Email is correct!</h3>\r\n          <p class=\"text-white font-size-lg\">\r\n            Message with 'recovery' instruction<br />\r\n            has been sent<br />\r\n          </p>\r\n          <a\r\n            routerLink=\"/auth/login\"\r\n            class=\"swal2-confirm btn font-weight-bold btn-light-primary\"\r\n          >\r\n            Ok, got it!\r\n          </a>\r\n        </div>\r\n      </div>\r\n      <!--end::Body-->\r\n    </div>\r\n  </ng-container>\r\n</div>\r\n\r\n<ng-template\r\n  #formError\r\n  let-control=\"control\"\r\n  let-message=\"message\"\r\n  let-validation=\"validation\"\r\n>\r\n  <ng-container\r\n    *ngIf=\"control.hasError(validation) && (control.dirty || control.touched)\"\r\n  >\r\n    <div class=\"fv-plugins-message-container\">\r\n      <div class=\"fv-help-block\">\r\n        {{ message }}\r\n      </div>\r\n    </div>\r\n  </ng-container>\r\n</ng-template>\r\n","import {NgModule} from '@angular/core';\r\nimport {Routes, RouterModule} from '@angular/router';\r\nimport {AuthComponent} from './auth.component';\r\nimport {LoginComponent} from './login/login.component';\r\nimport {RegistrationComponent} from './registration/registration.component';\r\nimport {ForgotPasswordComponent} from './forgot-password/forgot-password.component';\r\nimport {LogoutComponent} from './logout/logout.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: AuthComponent,\r\n    children: [\r\n      {\r\n        path: '',\r\n        redirectTo: 'login',\r\n        pathMatch: 'full'\r\n      },\r\n      {\r\n        path: 'login',\r\n        component: LoginComponent,\r\n        data: {returnUrl: window.location.pathname}\r\n      },\r\n      {\r\n        path: 'registration',\r\n        component: RegistrationComponent\r\n      },\r\n      {\r\n        path: 'forgot-password',\r\n        component: ForgotPasswordComponent\r\n      },\r\n      {\r\n        path: 'logout',\r\n        component: LogoutComponent\r\n      },\r\n      {path: '', redirectTo: 'login', pathMatch: 'full'},\r\n      {path: '**', redirectTo: 'login', pathMatch: 'full'},\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [ RouterModule.forChild(routes) ],\r\n  exports: [ RouterModule ]\r\n})\r\nexport class AuthRoutingModule {}\r\n"]}