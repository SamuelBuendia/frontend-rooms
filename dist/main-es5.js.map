{"version":3,"sources":["webpack:///src/app/pages/evidence/evidences/evidence-edit/evidence-edit.component.ts","webpack:///src/app/pages/evidence/evidences/evidence-edit/evidence-edit.component.html","webpack:///src/app/pages/evidence/_services/evidence.service.ts","webpack:///src/app/modules/auth/_services/auth.service.ts","webpack:///src/app/pages/user/users/user-autocomplete/user-autocomplete.component.ts","webpack:///src/app/pages/user/users/user-autocomplete/user-autocomplete.component.html","webpack:///src/app/modules/i18n/vocabs/fr.ts","webpack:///src/app/pages/content-type/content-types/content-types.component.ts","webpack:///src/app/pages/content-type/content-types/content-types.component.html","webpack:///src/app/pages/group/groups/groups.component.ts","webpack:///src/app/pages/group/groups/groups.component.html","webpack:///src/app/modules/i18n/vocabs/ch.ts","webpack:///src/app/pages/user/users/users.component.ts","webpack:///src/app/pages/user/users/users.component.html","webpack:///src/app/pages/permission/permissions/permissions.component.ts","webpack:///src/app/pages/permission/permissions/permissions.component.html","webpack:///src/app/_metronic/partials/layout/splash-screen/splash-screen.component.ts","webpack:///src/app/_metronic/partials/layout/splash-screen/splash-screen.component.html","webpack:///src/app/pages/room/room.component.ts","webpack:///src/app/pages/room/room.component.html","webpack:///src/app/pages/user/user.component.ts","webpack:///src/app/pages/user/user.component.html","webpack:///src/app/pages/folder/folder.component.ts","webpack:///src/app/pages/folder/folder.component.html","webpack:///src/app/pages/evidence/_models/evidence.model.ts","webpack:///src/app/pages/permission/_models/permission.model.ts","webpack:///src/app/pages/functionary/functionarys/functionarys.component.ts","webpack:///src/app/pages/functionary/functionarys/functionarys.component.html","webpack:///src/app/pages/group/groups/group-multiselect/group-multiselect.component.ts","webpack:///src/app/pages/group/groups/group-multiselect/group-multiselect.component.html","webpack:///src/app/pages/space/_services/index.ts","webpack:///src/app/pages/room/_models/room.model.ts","webpack:///src/app/pages/user/_services/user.service.ts","webpack:///src/app/pages/functionary/functionarys/functionary-edit/functionary-edit.component.ts","webpack:///src/app/pages/functionary/functionarys/functionary-edit/functionary-edit.component.html","webpack:///src/app/pages/group/_services/index.ts","webpack:///src/app/modules/auth/_helpers/auth.interceptor.ts","webpack:///src/environments/environment.ts","webpack:///src/app/pages/room/rooms/room-autocomplete/room-autocomplete.component.ts","webpack:///src/app/pages/room/rooms/room-autocomplete/room-autocomplete.component.html","webpack:///src/app/pages/permission/permissions/permission-autocomplete/permission-autocomplete.component.ts","webpack:///src/app/pages/permission/permissions/permission-autocomplete/permission-autocomplete.component.html","webpack:///src/app/pages/folder/_services/index.ts","webpack:///src/app/_fake/fake-api.service.ts","webpack:///src/app/pages/folder/_models/folder.model.ts","webpack:///src/app/pages/permission/_services/permission.service.ts","webpack:///src/app/pages/functionary/_models/functionary.model.ts","webpack:///src/app/pages/space/_services/space.service.ts","webpack:///src/app/pages/permission/permission.component.ts","webpack:///src/app/pages/permission/permission.component.html","webpack:///src/app/pages/space/_models/space.model.ts","webpack:///src/app/pages/functionary/_services/functionary.service.ts","webpack:///src/app/modules/auth/_models/auth.model.ts","webpack:///src/app/_fake/fake-db/cars.table.ts","webpack:///src/app/modules/auth/_services/auth-http/token-storage.service.ts","webpack:///src/app/pages/room/rooms/rooms.component.ts","webpack:///src/app/pages/room/rooms/rooms.component.html","webpack:///src/app/modules/auth/_services/auth-http/index.ts","webpack:///src/app/_metronic/partials/layout/splash-screen/splash-screen.service.ts","webpack:///src/app/pages/permission/_services/index.ts","webpack:///src/app/pages/user/_models/user.model.ts","webpack:///src/app/pages/space/space.component.ts","webpack:///src/app/pages/space/space.component.html","webpack:///src/app/pages/functionary/functionarys/functionary-multiselect/functionary-multiselect.component.ts","webpack:///src/app/pages/functionary/functionarys/functionary-multiselect/functionary-multiselect.component.html","webpack:///src/app/modules/i18n/vocabs/jp.ts","webpack:///src/app/_metronic/partials/layout/splash-screen/splash-screen.module.ts","webpack:///src/app/pages/evidence/_services/index.ts","webpack:///src/app/modules/auth/registration/confirm-password.validator.ts","webpack:///src/app/_fake/fake-db/users.table.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/pages/space/spaces/spaces.component.ts","webpack:///src/app/pages/space/spaces/spaces.component.html","webpack:///src/app/modules/i18n/vocabs/en.ts","webpack:///src/app/pages/functionary/functionary.component.ts","webpack:///src/app/pages/functionary/functionary.component.html","webpack:///src/app/pages/content-type/content-types/content-type-autocomplete/content-type-autocomplete.component.ts","webpack:///src/app/pages/content-type/content-types/content-type-autocomplete/content-type-autocomplete.component.html","webpack:///src/app/pages/evidence/evidences/evidence-autocomplete/evidence-autocomplete.component.ts","webpack:///src/app/pages/evidence/evidences/evidence-autocomplete/evidence-autocomplete.component.html","webpack:///src/app/pages/group/group.component.ts","webpack:///src/app/pages/group/group.component.html","webpack:///src/app/pages/folder/_services/folder.service.ts","webpack:///src/app/pages/evidence/evidence.component.ts","webpack:///src/app/pages/evidence/evidence.component.html","webpack:///src/app/pages/group/_services/group.service.ts","webpack:///src/app/pages/permission/permissions/permission-multiselect/permission-multiselect.component.ts","webpack:///src/app/pages/permission/permissions/permission-multiselect/permission-multiselect.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/pages/folder/folders/folder-edit/folder-edit.component.ts","webpack:///src/app/pages/folder/folders/folder-edit/folder-edit.component.html","webpack:///src/app/pages/space/spaces/space-edit/space-edit.component.ts","webpack:///src/app/pages/space/spaces/space-edit/space-edit.component.html","webpack:///src/app/pages/group/groups/group-edit/group-edit.component.ts","webpack:///src/app/pages/group/groups/group-edit/group-edit.component.html","webpack:///src/app/pages/content-type/content-types/content-type-select/content-type-select.component.ts","webpack:///src/app/pages/content-type/content-types/content-type-select/content-type-select.component.html","webpack:///src/app/pages/user/_services/index.ts","webpack:///src/app/pages/pages.module.ts","webpack:///src/app/modules/i18n/translation.service.ts","webpack:///src/app/pages/functionary/functionarys/functionary-autocomplete/functionary-autocomplete.component.ts","webpack:///src/app/pages/functionary/functionarys/functionary-autocomplete/functionary-autocomplete.component.html","webpack:///src/app/pages/group/groups/group-autocomplete/group-autocomplete.component.ts","webpack:///src/app/pages/group/groups/group-autocomplete/group-autocomplete.component.html","webpack:///src/app/modules/auth/_services/auth-http/auth-http.service.ts","webpack:///src/app/pages/permission/permissions/permission-edit/permission-edit.component.ts","webpack:///src/app/pages/permission/permissions/permission-edit/permission-edit.component.html","webpack:///src/app/pages/room/rooms/room-edit/room-edit.component.ts","webpack:///src/app/pages/room/rooms/room-edit/room-edit.component.html","webpack:///src/app/pages/space/spaces/space-autocomplete/space-autocomplete.component.ts","webpack:///src/app/pages/space/spaces/space-autocomplete/space-autocomplete.component.html","webpack:///src/app/pages/room/_services/room.service.ts","webpack:///src/app/pages/folder/folders/folder-autocomplete/folder-autocomplete.component.ts","webpack:///src/app/pages/folder/folders/folder-autocomplete/folder-autocomplete.component.html","webpack:///src/app/pages/content-type/content-type.component.ts","webpack:///src/app/pages/content-type/content-type.component.html","webpack:///src/app/pages/group/_models/group.model.ts","webpack:///src/app/pages/functionary/_services/index.ts","webpack:///src/app/pages/room/_services/index.ts","webpack:///src/app/modules/auth/_services/auth.guard.ts","webpack:///src/app/modules/auth/_models/user.model.ts","webpack:///src/app/pages/content-type/_models/content-type.model.ts","webpack:///src/app/modules/i18n/vocabs/de.ts","webpack:///src/app/pages/folder/folders/folders.component.ts","webpack:///src/app/pages/folder/folders/folders.component.html","webpack:///src/app/modules/auth/index.ts","webpack:///src/app/pages/content-type/_services/content-type.service.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/pages/user/users/user-edit/user-edit.component.ts","webpack:///src/app/pages/user/users/user-edit/user-edit.component.html","webpack:///src/app/pages/evidence/evidences/evidences.component.ts","webpack:///src/app/pages/evidence/evidences/evidences.component.html","webpack:///src/app/pages/content-type/_services/index.ts","webpack:///src/app/pages/content-type/content-types/content-type-edit/content-type-edit.component.ts","webpack:///src/app/pages/content-type/content-types/content-type-edit/content-type-edit.component.html","webpack:///src/app/modules/i18n/vocabs/es.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/modules/toast/_services/toast.service.ts"],"names":["EvidenceEditComponent","fb","modelsService","router","route","toastService","authService","folderService","tabs","BASIC_TAB","files","subscriptions","activeTabId","saveAndExit","requesting","groupId","currentUserValue","groups","id","console","log","formGroup","group","observation","evidence_link","qualification","re_expiration_date","evidence_file","active","compose","required","minLength","maxLength","functionary","teacher","folder","controls","undefined","model","previous","parent","params","subscribe","snapshot","url","length","folderId","path","get","sb","paramMap","pipe","Number","getById","error","messageError","Array","isArray","push","Object","entries","forEach","key","value","growl","response","evidence","functionaries","folders","assign","loadForm","setValue","Date","name","GetFolderById","setValidators","markAllAsTouched","valid","formValues","edit","create","formatDate","fileBase64","sbUpdate","patch","navigate","sbCreate","post","reset","tabId","unsubscribe","controlName","control","dirty","touched","invalid","validation","hasError","stringClass","event","file","convertFile","base64","type","window","open","result","reader","FileReader","readAsBinaryString","onload","next","btoa","target","toString","date","d","month","getMonth","day","getDate","year","getFullYear","hours","getHours","minutes","getMinutes","seconds","getSeconds","join","toPromise","then","changeTab","selector","templateUrl","styleUrls","EvidenceService","http","API_URL","apiUrl","_subscriptions","page","per_page","sort","query","filters","_with","URLSearchParams","append","String","element","body","JSON","stringify","AuthService","authHttpService","token","isLoadingSubject","currentUserSubject","currentUser$","asObservable","isLoading$","subscr","getUserByToken","username","password","login","auth","setAuthFromLocalStorage","err","signOut","queryParams","getAuthFromLocalStorage","accessToken","user","createUser","forgotPassword","saveToken","getAuth","permission","has","getValue","elementGroup","permissions","elementPermission","codename","getUser","saveUser","providedIn","EPANDED_TEXTAREA_VALUE_ACCESSOR","provide","useExisting","UserAutocompleteComponent","multi","firstTime","placeholder","fn","onChange","onTouched","isDisabled","disabled","$event","sortField","sortOrder","addFilters","rows","getModels","models","users","totalRecords","meta","total_results","loadLazy","change","providers","locale","lang","data","TRANSLATOR","SELECT","MENU","NEW","ACTIONS","CREATE_POST","PAGES","FEATURES","APPS","DASHBOARD","AUTH","GENERAL","OR","SUBMIT_BUTTON","NO_ACCOUNT","SIGNUP_BUTTON","FORGOT_BUTTON","BACK_BUTTON","PRIVACY","LEGAL","CONTACT","LOGIN","TITLE","BUTTON","FORGOT","DESC","SUCCESS","REGISTER","INPUT","EMAIL","FULLNAME","PASSWORD","CONFIRM_PASSWORD","USERNAME","VALIDATION","INVALID","REQUIRED","MIN_LENGTH","AGREEMENT_REQUIRED","NOT_FOUND","INVALID_LOGIN","REQUIRED_FIELD","MIN_LENGTH_FIELD","MAX_LENGTH_FIELD","INVALID_FIELD","ECOMMERCE","COMMON","SELECTED_RECORDS_COUNT","ALL","SUSPENDED","ACTIVE","FILTER","BY_STATUS","BY_TYPE","BUSINESS","INDIVIDUAL","SEARCH","IN_ALL_FIELDS","CUSTOMERS","CUSTOMERS_LIST","NEW_CUSTOMER","DELETE_CUSTOMER_SIMPLE","DESCRIPTION","WAIT_DESCRIPTION","MESSAGE","DELETE_CUSTOMER_MULTY","UPDATE_STATUS","EDIT","UPDATE_MESSAGE","ADD_MESSAGE","ContentTypesComponent","translate","confirmationService","searchGroup","searchTerm","res","message_confirm_delete","showTableCheckbox","total_page","confirmDialogPosition","selectedModels","first","globalFilter","companyId","setTimeout","content_types","values","param","promise","promiseForm","position","confirm","message","accept","GroupsComponent","status","UsersComponent","PermissionsComponent","content_type","SplashScreenComponent","el","splashScreenService","init","splashScreen","RoomComponent","UserComponent","FolderComponent","EvidenceModel","PermissionModel","FunctionarysComponent","functionary_id_filter","department_id_filter","venue_id_filter","GroupMultiselectComponent","RoomModel","UserService","FunctionaryEditComponent","last_name","identification_number","phone","mobile","address","institutional_email","personal_email","birth_date","profession","AuthInterceptor","injector","req","authReq","getToken","headers","clone","setHeaders","handle","logout","document","location","reload","authInterceptorProviders","useClass","environment","production","appVersion","USERDATA_KEY","isMockEnabled","RoomAutocompleteComponent","rooms","PermissionAutocompleteComponent","FakeAPIService","db","cars","FolderModel","PermissionService","FunctionaryModel","SpaceService","PermissionComponent","SpaceModel","FunctionaryService","AuthModel","refreshToken","expiresIn","CarsTable","cModel","cManufacture","cModelYear","cMileage","cDescription","cColor","cPrice","cCondition","createdDate","cStatus","cVINCode","TOKEN_KEY","USER_KEY","TokenStorageService","localStorage","clear","setItem","authModel","getItem","getRefreshToken","parse","removeItem","RoomsComponent","room_id_filter","spaceId","room","SplashScreenService","animationBuilder","stopped","player","build","opacity","nativeElement","onDone","remove","style","display","play","UserModel","SpaceComponent","FunctionaryMultiselectComponent","SplashScreenModule","declarations","imports","exports","ConfirmPasswordValidator","confirmPassword","setErrors","ConfirmPassword","UsersTable","email","roles","pic","fullname","firstname","lastname","occupation","companyName","language","timeZone","website","emailSettings","emailNotification","sendCopyToPersonalEmail","activityRelatesEmail","youHaveNewNotifications","youAreSentADirectMessage","someoneAddsYouAsAsAConnection","uponNewOrder","newMembershipApproval","memberRegistration","updatesFromKeenthemes","newsAboutKeenthemesProductsAndFeatureUpdates","tipsOnGettingMoreOutOfKeen","thingsYouMissedSindeYouLastLoggedIntoKeen","newsAboutMetronicOnPartnerProductsAndOtherServices","tipsOnMetronicBusinessProducts","communication","sms","addressLine","city","state","postCode","socialNetworks","linkedIn","facebook","twitter","instagram","tokens","Math","random","AppComponent","translationService","loadTranslations","setLanguage","routerSubscription","events","hide","scrollTo","classList","add","changeDetection","Default","SpacesComponent","space_id_filter","spaces","space","FunctionaryComponent","ContentTypeAutocompleteComponent","service_orders","EvidenceAutocompleteComponent","evidences","GroupComponent","FolderService","EvidenceComponent","GroupService","PermissionMultiselectComponent","appInitializer","Promise","resolve","getHighlightLanguages","func","AppModule","useFactory","deps","useValue","languages","forRoot","passThruUnknownUrl","dataEncapsulation","bootstrap","FolderEditComponent","roomService","EVIDENCE_TAB","showEvidenceTab","description","expiration_date","guide_file","roomId","GetRoomById","SpaceEditComponent","ROOMS_TAB","number_space","functionarys","GroupEditComponent","ContentTypeSelectComponent","load","PagesModule","LOCALIZATION_LOCAL_STORAGE_KEY","TranslationService","langIds","addLangs","setDefaultLang","args","locales","setTranslation","use","getDefaultLang","FunctionaryAutocompleteComponent","GroupAutocompleteComponent","API_AUTH_URL","AuthHTTPService","PermissionEditComponent","RoomEditComponent","spaceService","FOLDER_TAB","showFolderTab","number_room","GetSpaceById","SpaceAutocompleteComponent","RoomService","FolderAutocompleteComponent","ContentTypeComponent","GroupModel","AuthGuard","userprofile","avatar","ContentTypeModel","FoldersComponent","folder_id_filter","ContentTypeService","routes","loadChildren","m","AuthModule","ErrorsModule","canActivate","LayoutModule","redirectTo","pathMatch","AppRoutingModule","UserEditComponent","PROFILE","first_name","user_permissions","is_active","is_staff","is_superuser","EvidencesComponent","evidence_id_filter","ContentTypeEditComponent","thismodelsService","app_label","thismodel","SIGN_IN","SIGN_OUT","TERMS","USER","USERS","ID","DATE_JOINED","IS_ACTIVATE","STATUS","FIRST_NAME","LAST_NAME","PERMISSIONS","GROUPS","IS_STAFF","IS_SUPERUSER","FUNCTIONARY","FUNCTIONARYS","NAME","IDENTIFICATION_NUMBER","PHONE","MOBILE","ADDRESS","INSTITUTIONAL_EMAIL","PERSONAL_EMAIL","BIRTH_DATE","PROFESSION","SPACE","SPACES","NUMBER_ROOM","ROOMS","ROOM","FOLDERS","FOLDER","EXPIRATION_DATE","GUIDE_FILE","EVIDENCE","EVIDENCES","OBSERVATION","EVIDENCE_LINK","QUALIFICATION","RE_EXPIRATION_DATE","EVIDENCE_FILE","PERMISSION","CONTENT_TYPE","CODENAME","CONTENT_TYPES","APP_LABEL","MODEL","GROUP","ACTIVES","INACTIVES","FILTERS","IN","NEWS","TOTAL","TRANSFER","DELETE","ACTION","NO_ITEMS_FOUND","BACK","RESET","BASIC_INFO","LIST","CANCEL","SAVE","SAVE_AND_EXIT","SAVE_AND_NEW","EXPORT","CONFIRMATION","VERIFICATION","MESSAGE_CONFIRM_DELETE","MESSAGE_VERIFICATION_VOUCHER","MESSAGE_FACTURE_VOUCHER_AND_PACKINGS","ENTER","PLEASE_ENTER","IS_REQUIRED","WAS_ENTERED_CORRECT","SHOULD_HAVE_LEAST","SHOULD_HAVE_MAXIMUM","SHOWING","SHOW","ASSIGNED_TO_ME","FROM","TO","OF","RECORDS","TODAY","WELCOME_TO","CHOOSE","HI","CREATED_AT","YES","NO","ASIGN","ADMINISTRATION","TESTING","UPLOAD","ADD_ALL","ADD_SELECTED","ADD","bootstrapModule","webpackEmptyAsyncContext","e","Error","code","keys","module","ToastService","growlChange","severity","summary","detail"],"mappings":"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","file":"main-es5.js","sourcesContent":["import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { AbstractControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Observable, of, ReplaySubject, Subscription } from 'rxjs';\r\nimport { catchError, switchMap, tap } from 'rxjs/operators';\r\nimport { ToastService } from 'src/app/modules/toast/_services/toast.service';\r\nimport { AuthService } from 'src/app/modules/auth';\r\nimport { EvidenceModel as Model } from '../../_models/evidence.model';\r\nimport { EvidenceService as ModelsService } from '../../_services/evidence.service';\r\nimport { FolderService } from 'src/app/pages/folder/_services';\r\n\r\n@Component({\r\n  selector: 'app-evidence-edit',\r\n  templateUrl: './evidence-edit.component.html',\r\n  styleUrls: ['./evidence-edit.component.scss']\r\n})\r\nexport class EvidenceEditComponent implements OnInit, OnDestroy {\r\n  public id: number;\r\n  public model: Model;\r\n  public previous: Model;\r\n  public formGroup: FormGroup;\r\n  public requesting: boolean;\r\n\r\n  public tabs = {\r\n    BASIC_TAB: 0,\r\n  };\r\n\r\n  public re_expiration_date: AbstractControl;\r\n  public evidence_file: AbstractControl;\r\n  public active: AbstractControl;\r\n  public functionary: AbstractControl;\r\n  public teacher: AbstractControl;\r\n  public folder: AbstractControl;\r\n  public observation: AbstractControl;\r\n  public evidence_link: AbstractControl;\r\n  public qualification: AbstractControl;\r\n\r\n  public files = [];\r\n  public fileBase64: string;\r\n   \r\n  public activeTabId: number;\r\n  private subscriptions: Subscription[] = [];\r\n\r\n  public saveAndExit;\r\n\r\n  public folderId: number;\r\n  public parent: string;\r\n  public groupId: number;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private modelsService: ModelsService,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private toastService: ToastService,\r\n    public authService: AuthService,\r\n    private folderService: FolderService,\r\n  ) {\r\n    this.activeTabId = this.tabs.BASIC_TAB; // 0 => Basic info | 1 => Profile\r\n    this.saveAndExit = false;\r\n    this.requesting = false;\r\n    this.groupId = this.authService.currentUserValue.groups[0].id;\r\n    console.log(this.groupId)\r\n\r\n    this.formGroup = this.fb.group({\r\n      observation: [''],\r\n      evidence_link: [''],\r\n      qualification: [''],\r\n      re_expiration_date: [''],\r\n      evidence_file: [''],\r\n      active: ['', Validators.compose([Validators.required, Validators.minLength(3), Validators.maxLength(30)])],\r\n      functionary: ['', Validators.compose([Validators.required, Validators.minLength(1), Validators.maxLength(30)])],\r\n      teacher: [''],\r\n      folder: ['', Validators.compose([Validators.required, Validators.minLength(1), Validators.maxLength(30)])],\r\n    });\r\n    this.observation = this.formGroup.controls['observation'];\r\n    this.evidence_link = this.formGroup.controls['evidence_link'];\r\n    this.qualification = this.formGroup.controls['qualification'];\r\n    this.re_expiration_date = this.formGroup.controls['re_expiration_date'];\r\n    this.evidence_file = this.formGroup.controls['evidence_file'];\r\n    this.active = this.formGroup.controls['active'];\r\n    this.functionary = this.formGroup.controls['functionary'];\r\n    this.teacher = this.formGroup.controls['teacher'];\r\n    this.folder = this.formGroup.controls['folder'];\r\n\r\n    this.files = [];\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.id = undefined;\r\n    this.model = undefined;\r\n    this.previous = undefined;\r\n\r\n    this.route.parent.parent.parent.params.subscribe((params) => {\r\n      if (this.route.parent.parent.parent.parent.parent.snapshot.url.length > 0) {\r\n        this.folderId = params.id;\r\n        this.parent = '/' + this.route.parent.parent.parent.parent.parent.snapshot.url[0].path + '/edit/' + this.folderId;\r\n      }\r\n      this.get();\r\n    });\r\n\r\n  }\r\n\r\n  get() {\r\n    this.requesting = true;\r\n    const sb = this.route.paramMap.pipe(\r\n      switchMap(params => {\r\n        // get id from URL\r\n        this.id = Number(params.get('id'));\r\n        if (this.id || this.id > 0) {\r\n          return this.modelsService.getById(this.id);\r\n        }\r\n        return of({ 'evidence': new Model() });\r\n      }),\r\n      catchError((error) => {\r\n        this.requesting = false;\r\n        let messageError = [];\r\n        if (!Array.isArray(error.error)) {\r\n          messageError.push(error.error);\r\n        } else {\r\n          messageError = error.error;\r\n        }\r\n        Object.entries(messageError).forEach(\r\n          ([key, value]) => this.toastService.growl('error', key + ': ' + value)\r\n        );\r\n        return of({ 'evidence': new Model() });\r\n      }),\r\n    ).subscribe((response: any) => {\r\n      this.requesting = false;\r\n      if (response) {\r\n        this.model = response.evidence;\r\n        if (response.functionaries) {\r\n          this.model.functionary = response.functionaries[0];\r\n        }\r\n        // let folders = response['+folders'];\r\n        if (response.folders) {\r\n          this.model.folder = response.folders[0];\r\n        }\r\n        this.previous = Object.assign({}, this.model);\r\n        this.loadForm();\r\n      }\r\n    });\r\n    this.subscriptions.push(sb);\r\n  }\r\n\r\n  loadForm() {\r\n    this.active.setValue(true);\r\n    \r\n    if (this.model.id) {\r\n      this.observation.setValue(this.model.observation);\r\n      this.evidence_link.setValue(this.model.evidence_link);\r\n      this.qualification.setValue(this.model.qualification);\r\n      this.re_expiration_date.setValue(new Date(this.model.re_expiration_date));\r\n\r\n      this.files = [];\r\n      if (this.model.evidence_file) {\r\n        this.files.push({name:this.model.functionary.name, evidence_file:this.model.evidence_file})\r\n      }\r\n\r\n      this.active.setValue(this.model.active);\r\n      if (this.model.functionary) {\r\n        this.functionary.setValue(this.model.functionary);\r\n      }\r\n      if (this.model.teacher) {\r\n        this.teacher.setValue(this.model.teacher);\r\n      }\r\n      if (this.model.folder) {\r\n        this.folder.setValue(this.model.folder);\r\n      }\r\n    } else {\r\n      if (this.folderId) {\r\n        this.GetFolderById(this.folderId);\r\n      }\r\n    }\r\n\r\n    if(this.groupId === 3){\r\n      this.qualification.setValidators(Validators.compose([Validators.required, Validators.minLength(1)]))\r\n    }\r\n\r\n    this.formGroup.markAllAsTouched();\r\n  }\r\n\r\n  reset() {\r\n    if (this.previous) {\r\n      this.model = Object.assign({}, this.previous);\r\n      this.loadForm();\r\n    }\r\n  }\r\n\r\n  save(saveAndExit) {\r\n    this.saveAndExit = saveAndExit;\r\n    this.formGroup.markAllAsTouched();\r\n    if (this.formGroup.valid) {\r\n      const formValues = this.formGroup.value;\r\n      this.model = Object.assign(this.model, formValues);\r\n      if (this.id) {\r\n        this.edit();\r\n      } else {\r\n        this.create();\r\n      }\r\n    }\r\n  }\r\n\r\n  edit() {\r\n    this.requesting = true;\r\n    let model = this.model;\r\n    model.re_expiration_date = this.formatDate(this.re_expiration_date.value);\r\n    model.active = this.model.active;\r\n    if (this.model.functionary) {\r\n      model.functionary = this.model.functionary.id;\r\n    }\r\n    if (this.model.teacher) {\r\n      model.teacher = this.model.teacher.id;\r\n    }\r\n    if (this.model.folder) {\r\n      model.folder = this.model.folder.id;\r\n    }\r\n\r\n    model.evidence_file = this.fileBase64;\r\n\r\n    const sbUpdate = this.modelsService.patch(this.id, model, this.files).pipe(\r\n      tap(() => {\r\n        this.toastService.growl('success', 'success');\r\n        if (this.saveAndExit) {\r\n          if(this.parent){\r\n            this.router.navigate([this.parent + '/evidences']);\r\n          } else {\r\n            this.router.navigate(['/evidences']);\r\n          }\r\n        }\r\n      }),\r\n      catchError((error) => {\r\n        this.requesting = false;\r\n        let messageError = [];\r\n        if (!Array.isArray(error.error)) {\r\n          messageError.push(error.error);\r\n        } else {\r\n          messageError = error.error;\r\n        }\r\n        Object.entries(messageError).forEach(\r\n          ([key, value]) => this.toastService.growl('error', key + ': ' + value)\r\n        );\r\n        return of(this.model);\r\n      })\r\n    ).subscribe(response => {\r\n      this.requesting = false;\r\n      this.model = response.evidence\r\n    });\r\n    this.subscriptions.push(sbUpdate);\r\n  }\r\n\r\n  create() {\r\n    this.requesting = true;\r\n\r\n    let model = this.model;\r\n    model.active = this.active.value;\r\n    model.evidence_file = this.fileBase64;\r\n\r\n    if (this.model.functionary) {\r\n      model.functionary = this.model.functionary.id;\r\n    }\r\n\r\n    if (this.model.teacher) {\r\n      model.teacher = this.model.teacher.id;\r\n    }\r\n\r\n    model.re_expiration_date = undefined;\r\n    if (this.re_expiration_date.value) {\r\n      model.re_expiration_date = this.formatDate(this.re_expiration_date.value);\r\n    }\r\n\r\n    model.folder = this.model.folder.id;\r\n    \r\n    const sbCreate = this.modelsService.post(model).pipe(\r\n      tap(() => {\r\n        this.toastService.growl('success', 'success');\r\n        if (this.saveAndExit) {\r\n          if(this.parent){\r\n            this.router.navigate([this.parent + '/evidences']);\r\n          } else {\r\n            this.router.navigate(['/evidences']);\r\n          }\r\n        } else {\r\n          this.formGroup.reset()\r\n        }\r\n      }),\r\n      catchError((error) => {\r\n        this.requesting = false;\r\n        let messageError = [];\r\n        if (!Array.isArray(error.error)) {\r\n          messageError.push(error.error);\r\n        } else {\r\n          messageError = error.error;\r\n        }\r\n        Object.entries(messageError).forEach(\r\n          ([key, value]) => this.toastService.growl('error', key + ': ' + value)\r\n        );\r\n        return of(this.model);\r\n      })\r\n    ).subscribe(response => {\r\n      this.requesting = false;\r\n      this.model = response.evidence as Model\r\n    });\r\n    this.subscriptions.push(sbCreate);\r\n  }\r\n\r\n  changeTab(tabId: number) {\r\n    this.activeTabId = tabId;\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscriptions.forEach(sb => sb.unsubscribe());\r\n  }\r\n\r\n  // helpers for View\r\n  isControlValid(controlName: string): boolean {\r\n    const control = this.formGroup.controls[controlName];\r\n    return control.valid && (control.dirty || control.touched);\r\n  }\r\n\r\n  isControlInvalid(controlName: string): boolean {\r\n    const control = this.formGroup.controls[controlName];\r\n    return control.invalid && (control.dirty || control.touched);\r\n  }\r\n\r\n  controlHasError(validation: string, controlName: string) {\r\n    const control = this.formGroup.controls[controlName];\r\n    return control.hasError(validation) && (control.dirty || control.touched);\r\n  }\r\n\r\n  isControlTouched(controlName: string): boolean {\r\n    const control = this.formGroup.controls[controlName];\r\n    return control.dirty || control.touched;\r\n  }\r\n\r\n  public getValidClass(valid) {\r\n    let stringClass = 'form-control form-control-lg form-control-solid';\r\n    if (valid) {\r\n      stringClass += ' is-valid';\r\n    } else {\r\n      stringClass += ' is-invalid';\r\n    }\r\n    return stringClass;\r\n  }\r\n\r\n  public onSelect(event) {\r\n    this.files = []\r\n    for(let file of event.files) {\r\n      this.files.push(file);\r\n    }\r\n    this.convertFile(event.files[0]).subscribe(base64 => {\r\n      this.fileBase64 = 'data:' + this.files[0].type + ';base64,' + base64;\r\n    });    \r\n  }\r\n\r\n  public showFile(url) {\r\n    window.open(url, '_blank');\r\n  }    \r\n\r\n  convertFile(file : File) : Observable<string> {\r\n    const result = new ReplaySubject<string>(1);\r\n    const reader = new FileReader();\r\n    reader.readAsBinaryString(file);\r\n    reader.onload = (event) => result.next(btoa(event.target.result.toString()));\r\n    return result;\r\n  }\r\n\r\n  public formatDate(date) {\r\n    const d = new Date(date);\r\n    let month = '' + (d.getMonth() + 1);\r\n    let day = '' + d.getDate();\r\n    const year = d.getFullYear();\r\n    let hours = '' + d.getHours();\r\n    let minutes = '' + d.getMinutes();\r\n    let seconds = '' + d.getSeconds();\r\n\r\n    if (month.length < 2) {\r\n      month = '0' + month;\r\n    }\r\n    if (day.length < 2) {\r\n      day = '0' + day;\r\n    }\r\n\r\n    if (hours.length < 2) {\r\n      hours = '0' + hours;\r\n    }\r\n\r\n    if (minutes.length < 2) {\r\n      minutes = '0' + minutes;\r\n    }\r\n\r\n    if (seconds.length < 2) {\r\n      seconds = '0' + seconds;\r\n    }\r\n\r\n    return [year, month, day].join('-');\r\n  }\r\n\r\n  GetFolderById(id) {\r\n    this.folderService.getById(id).toPromise().then(\r\n      response => {\r\n        this.folder.setValue(response.folder)\r\n      },\r\n      error => {\r\n        console.log('error getting folder');\r\n      }\r\n    );\r\n  }\r\n}\r\n","<div class=\"card card-custom gutter-b\">\r\n  <ng-container *ngIf=\"requesting\">\r\n    <div class=\"progress progress-modal\">\r\n      <div class=\"progress-bar progress-bar-striped progress-bar-animated bg-primary\" role=\"progressbar\"\r\n        style=\"width: 100%\" aria-valuenow=\"100\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\r\n    </div>\r\n  </ng-container>\r\n\r\n  <div class=\"card-header\">\r\n    <div class=\"card-title\">\r\n      <h3 class=\"card-label\">\r\n        <ng-container *ngIf=\"model\">\r\n          {{ (id ? 'COMMON.EDIT' : 'COMMON.NEW') | translate }}\r\n          <span *ngIf=\"model && model.id\">{{ model.id }} - {{ model.re_expiration_date | date: 'MM/dd/yyyy' }} </span>\r\n        </ng-container>\r\n      </h3>\r\n    </div>\r\n    <div class=\"card-toolbar\">\r\n      <a type=\"button\" class=\"btn btn-light\" routerLink=\"/evidences\">\r\n        <i class=\"fa fa-arrow-left\"></i>{{ 'COMMON.BACK' | translate }}\r\n      </a>\r\n      <button class=\"btn btn-secondary ml-2\" (click)=\"reset()\">\r\n        <i class=\"fa fa-redo\"></i>{{ 'COMMON.RESET' | translate }}\r\n      </button>\r\n    </div>\r\n  </div>\r\n  <div class=\"card-body\">\r\n    <ul class=\"nav nav-tabs nav-tabs-line\" role=\"tablist\">\r\n      <li class=\"nav-item cursor-pointer\" (click)=\"changeTab(tabs.BASIC_TAB)\">\r\n        <a class=\"nav-link\" data-toggle=\"tab\" role=\"tab\" [attr.aria-selected]=\"activeTabId === tabs.BASIC_TAB\"\r\n          [class.active]=\"activeTabId === tabs.BASIC_TAB\">\r\n          {{ 'COMMON.BASIC_INFO' | translate }}\r\n        </a>\r\n      </li>\r\n      <!-- <li *ngIf=\"model && model.id\" class=\"nav-item cursor-pointer\" (click)=\"changeTab(tabs.PROFILE)\">\r\n        <a class=\"nav-link\" data-toggle=\"tab\" role=\"button\" [attr.aria-selected]=\"activeTabId === tabs.PROFILE\"\r\n          [class.active]=\"activeTabId === tabs.PROFILE\">Profile</a>\r\n      </li> -->\r\n    </ul>\r\n\r\n    <ng-container *ngIf=\"activeTabId === tabs.BASIC_TAB\">\r\n      <div class=\"mt-5\" *ngIf=\"model\">\r\n        <form action=\"#\" class=\"form form-label-right\" [formGroup]=\"formGroup\">\r\n          <div class=\"form-group row\">\r\n            <div class=\"col-lg-3\">\r\n              <label>{{ 'COMMON.ENTER' | translate }} {{ 'EVIDENCE.FUNCTIONARY' | translate}}</label>\r\n              <app-functionary-autocomplete\r\n              name=\"functionary\" [valid]=\"isControlValid('functionary')\" [touched]=\"isControlTouched('functionary')\" [class.is-invalid]=\"isControlInvalid('functionary')\"\r\n              [class.is-valid]=\"isControlValid('functionary')\" formControlName=\"functionary\" id=\"functionary\" [model]=\"model.functionary\" [disabled]=\"model && model.id\" [addFilters]=\"[{key: 'user.groups', value: 2}]\"></app-functionary-autocomplete>\r\n              <div class=\"feedback\" *ngIf=\"!isControlTouched('functionary')\">{{ 'COMMON.PLEASE_ENTER' | translate }} <b>{{ 'EVIDENCE.FUNCTIONARY' | translate}}</b></div>\r\n              <div class=\"valid-feedback\" *ngIf=\"isControlValid('functionary')\">{{ 'EVIDENCE.FUNCTIONARY' | translate}}  {{ 'COMMON.WAS_ENTERED_CORRECT' | translate }}</div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"controlHasError('required', 'functionary')\">{{ 'EVIDENCE.FUNCTIONARY' | translate}}  {{ 'COMMON.IS_REQUIRED' | translate }}</div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"controlHasError('minlength', 'functionary')\">{{ 'EVIDENCE.FUNCTIONARY' | translate}} {{ 'COMMON.SHOULD_HAVE_LEAST' | translate }} 3</div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"controlHasError('maxLength', 'functionary')\">{{ 'EVIDENCE.FUNCTIONARY' | translate}} {{ 'COMMON.SHOULD_HAVE_MAXIMUM' | translate }} 30</div>\r\n            </div>  \r\n            <div class=\"col-lg-3\">\r\n              <label>{{ 'COMMON.ENTER' | translate }} {{ 'EVIDENCE.FOLDER' | translate}}</label>\r\n              <app-folder-autocomplete\r\n              name=\"folder\" [valid]=\"isControlValid('folder')\" [touched]=\"isControlTouched('folder')\" [class.is-invalid]=\"isControlInvalid('folder')\"\r\n              [class.is-valid]=\"isControlValid('folder')\" formControlName=\"folder\" id=\"folder\" [model]=\"model.folder\" [disabled]=\"model && model.id\"></app-folder-autocomplete>\r\n              <div class=\"feedback\" *ngIf=\"!isControlTouched('folder')\">{{ 'COMMON.PLEASE_ENTER' | translate }} <b>{{ 'EVIDENCE.FOLDER' | translate}}</b></div>\r\n              <div class=\"valid-feedback\" *ngIf=\"isControlValid('folder')\">{{ 'EVIDENCE.FOLDER' | translate}}  {{ 'COMMON.WAS_ENTERED_CORRECT' | translate }}</div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"controlHasError('required', 'folder')\">{{ 'EVIDENCE.FOLDER' | translate}}  {{ 'COMMON.IS_REQUIRED' | translate }}</div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"controlHasError('minlength', 'folder')\">{{ 'EVIDENCE.FOLDER' | translate}} {{ 'COMMON.SHOULD_HAVE_LEAST' | translate }} 3</div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"controlHasError('maxLength', 'folder')\">{{ 'EVIDENCE.FOLDER' | translate}} {{ 'COMMON.SHOULD_HAVE_MAXIMUM' | translate }} 30</div>\r\n            </div>\r\n            <div class=\"col-lg-3 mb-3\">\r\n              <label>{{ 'COMMON.ENTER' | translate }} {{ 'FOLDER.ACTIVE' | translate}}</label>\r\n              <p-toggleButton class=\"form-control form-control-lg form-control-solid\" formControlName=\"active\" onLabel=\"{{ 'COMMON.YES' | translate}}\" offLabel=\"{{ 'COMMON.NO' | translate}}\" disabled=\"disabled\"></p-toggleButton>\r\n              <div class=\"feedback\" *ngIf=\"!isControlTouched('active')\">{{ 'COMMON.PLEASE_ENTER' | translate }} <b>{{ 'FOLDER.ACTIVE' | translate}}</b></div>\r\n              <div class=\"valid-feedback\" *ngIf=\"isControlValid('active')\">{{ 'FOLDER.ACTIVE' | translate}}  {{ 'COMMON.WAS_ENTERED_CORRECT' | translate }}</div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"controlHasError('required', 'active')\">{{ 'FOLDER.ACTIVE' | translate}}  {{ 'COMMON.IS_REQUIRED' | translate }}</div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"controlHasError('minlength', 'active')\">{{ 'FOLDER.ACTIVE' | translate}} {{ 'COMMON.SHOULD_HAVE_LEAST' | translate }} 3</div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"controlHasError('maxLength', 'active')\">{{ 'FOLDER.ACTIVE' | translate}} {{ 'COMMON.SHOULD_HAVE_MAXIMUM' | translate }} 100</div>\r\n            </div>\r\n            <div class=\"col-lg-3 mb-3\">\r\n              <label>{{ 'COMMON.ENTER' | translate }} {{ 'EVIDENCE.RE_EXPIRATION_DATE' | translate}}</label>\r\n              <p-calendar [inputStyleClass]=\"getValidClass(isControlValid('re_expiration_date'))\" name=\"re_expiration_date\" formControlName=\"re_expiration_date\" disabled=\"disabled\"></p-calendar>\r\n              <div class=\"feedback\" *ngIf=\"!isControlTouched('re_expiration_date')\">{{ 'COMMON.PLEASE_ENTER' | translate }} <b>{{ 'EVIDENCE.RE_EXPIRATION_DATE' | translate}}</b></div>\r\n              <div class=\"valid-feedback\" *ngIf=\"isControlValid('re_expiration_date')\">{{ 'EVIDENCE.RE_EXPIRATION_DATE' | translate}}  {{ 'COMMON.WAS_ENTERED_CORRECT' | translate }}</div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"controlHasError('required', 're_expiration_date')\">{{ 'EVIDENCE.RE_EXPIRATION_DATE' | translate}}  {{ 'COMMON.IS_REQUIRED' | translate }}</div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"controlHasError('minlength', 're_expiration_date')\">{{ 'EVIDENCE.RE_EXPIRATION_DATE' | translate}} {{ 'COMMON.SHOULD_HAVE_LEAST' | translate }} 3</div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"controlHasError('maxLength', 're_expiration_date')\">{{ 'EVIDENCE.RE_EXPIRATION_DATE' | translate}} {{ 'COMMON.SHOULD_HAVE_MAXIMUM' | translate }} 100</div>\r\n            </div> \r\n            <div class=\"col-lg-9 mb-3\">\r\n              <label>{{ 'COMMON.ENTER' | translate }} {{ 'EVIDENCE.EVIDENCE_LINK' | translate }}</label>\r\n              <input type=\"text\" class=\"form-control form-control-lg form-control-solid\" autocomplete=\"off\"\r\n                name=\"evidence_link\" [class.is-invalid]=\"isControlInvalid('evidence_link')\"\r\n                [class.is-valid]=\"isControlValid('evidence_link')\" formControlName=\"evidence_link\" />\r\n              <div class=\"feedback\" *ngIf=\"!isControlTouched('evidence_link')\">{{ 'COMMON.PLEASE_ENTER' | translate }} <b>{{ 'EVIDENCE.EVIDENCE_LINK' | translate }}</b></div>\r\n              <div class=\"valid-feedback\" *ngIf=\"isControlValid('evidence_link')\">{{ 'EVIDENCE.EVIDENCE_LINK' | translate }}  {{ 'COMMON.WAS_ENTERED_CORRECT' | translate }}</div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"controlHasError('required', 'evidence_link')\">{{ 'EVIDENCE.EVIDENCE_LINK' | translate }}  {{ 'COMMON.IS_REQUIRED' | translate }}</div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"controlHasError('minlength', 'evidence_link')\">{{ 'EVIDENCE.EVIDENCE_LINK' | translate }} {{ 'COMMON.SHOULD_HAVE_LEAST' | translate }} 3</div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"controlHasError('maxLength', 'evidence_link')\">{{ 'EVIDENCE.EVIDENCE_LINK' | translate }} {{ 'COMMON.SHOULD_HAVE_MAXIMUM' | translate }} 100</div>\r\n            </div>\r\n            <div class=\"col-lg-3 mb-3\">\r\n              <label>{{ 'COMMON.ENTER' | translate }} {{ 'EVIDENCE.QUALIFICATION' | translate }}</label>\r\n              <input type=\"number\" class=\"form-control form-control-lg form-control-solid\" autocomplete=\"off\"\r\n                name=\"qualification\" [class.is-invalid]=\"isControlInvalid('qualification')\"\r\n                [class.is-valid]=\"isControlValid('qualification')\" formControlName=\"qualification\" [readonly]=\"groupId === 2 ? true : false\"/> \r\n              <div class=\"feedback\" *ngIf=\"!isControlTouched('qualification')\">{{ 'COMMON.PLEASE_ENTER' | translate }} <b>{{ 'EVIDENCE.QUALIFICATION' | translate }}</b></div>\r\n              <div class=\"valid-feedback\" *ngIf=\"isControlValid('qualification')\">{{ 'EVIDENCE.QUALIFICATION' | translate }}  {{ 'COMMON.WAS_ENTERED_CORRECT' | translate }}</div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"controlHasError('required', 'qualification')\">{{ 'EVIDENCE.QUALIFICATION' | translate }}  {{ 'COMMON.IS_REQUIRED' | translate }}</div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"controlHasError('minlength', 'qualification')\">{{ 'EVIDENCE.QUALIFICATION' | translate }} {{ 'COMMON.SHOULD_HAVE_LEAST' | translate }} 3</div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"controlHasError('maxLength', 'qualification')\">{{ 'EVIDENCE.QUALIFICATION' | translate }} {{ 'COMMON.SHOULD_HAVE_MAXIMUM' | translate }} 100</div>\r\n            </div>\r\n            <div class=\"col-lg-12\">\r\n              <label>{{ 'COMMON.ENTER' | translate }} {{ 'EVIDENCE.EVIDENCE_FILE' | translate }}</label>\r\n              <p-fileUpload name=\"evidence_file\" (onSelect)=\"onSelect($event)\" multiple=\"false\" maxFileSize=\"1000000\" [showUploadButton]=\"false\"\r\n              chooseLabel=\"{{'COMMON.CHOOSE' | translate}}\" uploadLabel=\"{{'COMMON.UPLOAD' | translate}}\" cancelLabel=\"{{'COMMON.CANCEL' | translate}}\">\r\n                <ng-template pTemplate=\"content\">\r\n                    <ul *ngIf=\"files.length > 0\">\r\n                        <li *ngFor=\"let file of files\">\r\n                          <span style=\"width: -webkit-fill-available; height: 35px;\" class=\"label label-lg label-inline label-light-primary\" (click)=\"showFile(file.evidence_file)\">\r\n                            <div style=\"text-align: left; width: 50%;\">{{file.name}}</div>\r\n                            <div style=\"text-align: right; width: 50%;\">/ size bytes</div>\r\n                          </span>\r\n                        </li>\r\n                    </ul>\r\n                </ng-template>\r\n              </p-fileUpload>\r\n            </div>\r\n            <div class=\"col-lg-12 mt-3\">\r\n              <label>{{ 'COMMON.ENTER' | translate }} {{ 'EVIDENCE.OBSERVATION' | translate }}</label>\r\n              <p-editor formControlName=\"observation\" [style]=\"{'height':'150px'}\" placeholder=\"{{ 'EVIDENCE.OBSERVATION' | translate }}\"></p-editor>\r\n            </div>\r\n          </div>\r\n          <div class=\"float-right\">\r\n            <a class=\"btn btn-default font-weight-bold mr-2\" routerLink=\"{{parent}}/evidences\">{{ 'COMMON.CANCEL' | translate }}</a>\r\n            <button type=\"submit\" class=\"btn btn-primary font-weight-bold mr-2\"\r\n              [disabled]=\"formGroup.invalid\" (click)=\"save(false)\">{{ 'COMMON.SAVE' | translate }}</button>\r\n            <button type=\"submit\" class=\"btn btn-primary font-weight-bold mr-2\"\r\n              [disabled]=\"formGroup.invalid\" (click)=\"save(true)\">{{ 'COMMON.SAVE_AND_EXIT' | translate }}</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </ng-container>\r\n  </div>\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable, of, Subscription } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from '../../../../environments/environment';\r\nimport { catchError, finalize, tap } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class EvidenceService {\r\n    API_URL = `${environment.apiUrl}evidences`;\r\n    private _subscriptions: Subscription[] = [];\r\n\r\n    constructor(public http: HttpClient) { }\r\n\r\n    get subscriptions() {\r\n        return this._subscriptions;\r\n    }\r\n    \r\n    public get (page?: number, per_page?: number, sort?: string, query?: string, filters?: any[], _with?: any[]): Observable<any> {\r\n        let params: URLSearchParams = new URLSearchParams();\r\n\r\n        if (page !== null && page !== undefined) {\r\n            params.append('_page', String(page));\r\n        } else {\r\n            params.append('_page', '1');\r\n        }\r\n\r\n        if (per_page !== null && per_page !== undefined) {\r\n            params.append('_per_page', String(per_page));\r\n        } else {\r\n            params.append('_per_page', '10');\r\n        }\r\n\r\n        if (sort !== null && sort !== undefined) {\r\n            params.append('sort[]', String(sort));\r\n        }\r\n\r\n        if (query !== null && query !== undefined && query !== '') {\r\n            params.append('filter{id}[]', String(query));\r\n        }\r\n\r\n        if (filters !== null && filters !== undefined && filters.length > 0) {\r\n            filters.forEach(element => {\r\n                params.append(element.key, String(element.value));\r\n            });\r\n        }\r\n\r\n        if (_with !== null && _with !== undefined && _with.length > 0) {\r\n            _with.forEach(element => {\r\n                params.append(element.key, String(element.value));\r\n            });\r\n        }\r\n\r\n        return this.http.get(`${this.API_URL}?${params}`);\r\n    }\r\n\r\n    public post(body: Object): Observable<any> {\r\n        return this.http.post(`${this.API_URL}`, JSON.stringify(body));\r\n    }\r\n\r\n    public patch(id: number, body: Object, files?:any[]): Observable<any> {\r\n        return this.http.patch(`${this.API_URL}/${id}`, JSON.stringify(body));\r\n    }\r\n\r\n    public delete(id: number): Observable<any> {\r\n        return this.http.delete(`${this.API_URL}/${id}`);\r\n    }\r\n\r\n    public getById(id: number): Observable<any> {\r\n        return this.http.get(`${this.API_URL}/${id}/?include[]=functionary.*&include[]=folder.*`);\r\n    }\r\n}\r\n","import { Injectable, OnDestroy } from '@angular/core';\r\nimport { Observable, BehaviorSubject, of, Subscription } from 'rxjs';\r\nimport { map, catchError, switchMap, finalize } from 'rxjs/operators';\r\nimport { UserModel } from '../_models/user.model';\r\nimport { AuthModel } from '../_models/auth.model';\r\nimport { AuthHTTPService } from './auth-http';\r\nimport { Router } from '@angular/router';\r\nimport { TokenStorageService } from '../_services/auth-http/token-storage.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AuthService implements OnDestroy {\r\n  // private fields\r\n  private unsubscribe: Subscription[] = []; // Read more: => https://brianflove.com/2016/12/11/anguar-2-unsubscribe-observables/\r\n\r\n  // public fields\r\n  currentUser$: Observable<UserModel>;\r\n  isLoading$: Observable<boolean>;\r\n  currentUserSubject: BehaviorSubject<UserModel>;\r\n  isLoadingSubject: BehaviorSubject<boolean>;\r\n\r\n  get currentUserValue(): UserModel {\r\n    if (!this.currentUserSubject.value && this.token.getUser()) {\r\n      this.currentUserSubject.next(this.token.getUser())\r\n    }\r\n    return this.currentUserSubject.value;\r\n  }\r\n\r\n  set currentUserValue(user: UserModel) {\r\n    this.token.saveUser(user);\r\n    this.currentUserSubject.next(user);\r\n  }\r\n\r\n  constructor(\r\n    private authHttpService: AuthHTTPService,\r\n    private router: Router,\r\n    private token: TokenStorageService,\r\n  ) {\r\n    this.isLoadingSubject = new BehaviorSubject<boolean>(false);\r\n    this.currentUserSubject = new BehaviorSubject<UserModel>(undefined);\r\n    this.currentUser$ = this.currentUserSubject.asObservable();\r\n    this.isLoading$ = this.isLoadingSubject.asObservable();\r\n    const subscr = this.getUserByToken().subscribe();\r\n    this.unsubscribe.push(subscr);\r\n  }\r\n\r\n  // public methods\r\n  login(username: string, password: string): Observable<UserModel> {\r\n    this.isLoadingSubject.next(true);\r\n    return this.authHttpService.login(username, password).pipe(\r\n      map((auth: UserModel) => {\r\n        const result = this.setAuthFromLocalStorage(auth);\r\n        return result;\r\n      }),\r\n      catchError((err) => {\r\n        console.error('err', err);\r\n        return of(undefined);\r\n      }),\r\n      finalize(() => this.isLoadingSubject.next(false))\r\n    );\r\n  }\r\n\r\n  logout() {\r\n    this.token.signOut();\r\n    this.router.navigate(['/auth/login'], {\r\n      queryParams: {},\r\n    });\r\n  }\r\n\r\n  getUserByToken(): Observable<UserModel> {\r\n    const auth = this.getAuthFromLocalStorage();\r\n    if (!auth || !auth.accessToken) {\r\n      return of(undefined);\r\n    }\r\n\r\n    return this.authHttpService.getUserByToken().pipe(\r\n      map((user: UserModel) => {\r\n        return user;\r\n      }),\r\n    );\r\n  }\r\n\r\n  // need create new user then login\r\n  registration(user: UserModel): Observable<any> {\r\n    this.isLoadingSubject.next(true);\r\n    return this.authHttpService.createUser(user).pipe(\r\n      map(() => {\r\n        this.isLoadingSubject.next(false);\r\n      }),\r\n      switchMap(() => this.login(user.username, user.password)),\r\n      catchError((err) => {\r\n        console.error('err', err);\r\n        return of(undefined);\r\n      }),\r\n      finalize(() => this.isLoadingSubject.next(false))\r\n    );\r\n  }\r\n\r\n  forgotPassword(username: string): Observable<boolean> {\r\n    this.isLoadingSubject.next(true);\r\n    return this.authHttpService\r\n      .forgotPassword(username)\r\n      .pipe(finalize(() => this.isLoadingSubject.next(false)));\r\n  }\r\n\r\n  // private methods\r\n  private setAuthFromLocalStorage(auth: AuthModel): boolean {\r\n    // store auth accessToken/refreshToken/epiresIn in local storage to keep user logged in between page refreshes\r\n    if (auth && auth.accessToken) {\r\n      this.token.saveToken(JSON.stringify(auth));\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  private getAuthFromLocalStorage(): AuthModel {\r\n    try {\r\n      return this.token.getAuth();\r\n    } catch (error) {\r\n      console.error(error);\r\n      return undefined;\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.unsubscribe.forEach((sb) => sb.unsubscribe());\r\n  }\r\n\r\n  public hasPermission (permission) {\r\n    let has = false;\r\n    const user = this.currentUserSubject.getValue();\r\n    if (user && user.groups && user.groups.length > 0) {\r\n      user.groups.forEach(elementGroup => {\r\n        elementGroup.permissions.forEach(elementPermission => {\r\n          if (elementPermission.codename === permission) {\r\n            has = true;\r\n          }\r\n        });\r\n      });\r\n    }\r\n    return has;\r\n  }\r\n}\r\n","import { Component, forwardRef, Renderer2, ViewChild, Input, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { UserService as ModelsService } from '../../_services/user.service';\r\nimport { LazyLoadEvent } from 'primeng/api';\r\nimport { ToastService } from 'src/app/modules/toast/_services/toast.service';\r\nimport { AuthService } from 'src/app/modules/auth';\r\nexport const EPANDED_TEXTAREA_VALUE_ACCESSOR: any = {\r\n    provide: NG_VALUE_ACCESSOR,\r\n    useExisting: forwardRef(() => UserAutocompleteComponent),\r\n    multi: true,\r\n};\r\n\r\n@Component({\r\n    selector: 'app-user-autocomplete',\r\n    templateUrl: './user-autocomplete.component.html',\r\n    styleUrls: ['./user-autocomplete.component.scss'],\r\n    providers: [EPANDED_TEXTAREA_VALUE_ACCESSOR],\r\n})\r\nexport class UserAutocompleteComponent implements ControlValueAccessor, OnInit {\r\n    @Input() model: any;\r\n    @Input() valid: boolean;\r\n    @Input() touched: boolean;\r\n    @Input() required: boolean;\r\n    @Input() disabled: boolean;\r\n    @Input() placeholder: string;\r\n    @Input() addFilters: { key: string, value: string }[];\r\n\r\n    public models: any[];\r\n\r\n    public onChange;\r\n    public onTouched;\r\n\r\n    public firstTime: boolean;\r\n    public totalRecords: number;\r\n    public page: number;\r\n    public per_page: number;\r\n    public sort: string;\r\n    public query: string;\r\n    public filters: { key: string, value: string }[];\r\n    public _with: { key: string, value: string }[];\r\n\r\n    public value: any;\r\n\r\n    constructor(\r\n        public modelsService: ModelsService,\r\n        public toastService: ToastService\r\n    ) {\r\n        this.page = 1;\r\n        this.per_page = 100;\r\n        this.firstTime = true;\r\n    }\r\n\r\n    public ngOnInit() {\r\n        if (!this.placeholder) {\r\n            this.placeholder = '';\r\n        }\r\n    }\r\n\r\n    writeValue(value: any) {\r\n        // const div = this.textarea.nativeElement;\r\n        // this.renderer.setProperty(div, 'textContent', value);\r\n        this.value = value;\r\n    }\r\n\r\n    registerOnChange(fn: any) {\r\n        this.onChange = fn;\r\n    }\r\n\r\n    registerOnTouched(fn: any) {\r\n        this.onTouched = fn;\r\n    }\r\n\r\n    setDisabledState(isDisabled: boolean) {\r\n        this.disabled = isDisabled;\r\n    }\r\n\r\n    public change($event) {\r\n        this.onChange(this.value);\r\n        this.onTouched(this.value);\r\n    }\r\n\r\n    public loadLazy(event?) {\r\n        this.filters = [];\r\n        if (event && event.sortField) {\r\n            if (event.sortOrder === -1) {\r\n                this.sort = '-' + event.sortField;\r\n            } else {\r\n                this.sort = event.sortField;\r\n            }\r\n        } else {\r\n            this.sort = '-id';\r\n        }\r\n\r\n        if (this.addFilters) {\r\n            this.addFilters.forEach(element => {\r\n                this.filters.push({ key: 'filter{' + element.key + '}', value: element.value })\r\n            });\r\n        }\r\n\r\n        if (event.query) {\r\n            this.filters.push({ key: 'filter', value: event.query })\r\n        } else {\r\n            this.query = undefined;\r\n        }\r\n\r\n        if (event && event.rows) {\r\n            this.per_page = event.rows;\r\n        }\r\n\r\n\r\n        if (!this.firstTime) {\r\n            this.getModels();\r\n        }\r\n        this.firstTime = false;\r\n    }\r\n\r\n    getModels() {\r\n        this.modelsService.get(this.page, this.per_page, this.sort, this.query, this.filters, this._with).subscribe(\r\n            response => {\r\n                this.models = response.users;\r\n                this.totalRecords = response.meta.total_results;\r\n                // if (this.model) {\r\n                //     if (this.model.id) {\r\n                //         this.model.id = undefined;\r\n                //         this.value = this.models[0];\r\n                //         this.filters = [];\r\n                //     }\r\n                // }\r\n            },\r\n            error => {\r\n                let messageError = [];\r\n                if (!Array.isArray(error.error)) {\r\n                    messageError.push(error.error);\r\n                } else {\r\n                    messageError = error.error;\r\n                }\r\n                Object.entries(messageError).forEach(\r\n                    ([key, value]) => this.toastService.growl('error', key + ': ' + value)\r\n                );\r\n            }\r\n        );\r\n    }\r\n\r\n    public isValid() {\r\n        let stringClass = 'form-control form-control-lg form-control-solid';\r\n        if (this.touched) {\r\n            if (this.valid) {\r\n                stringClass += ' is-valid';\r\n            } else {\r\n                stringClass += ' is-invalid';\r\n            }\r\n        }\r\n        return stringClass;\r\n    }\r\n}\r\n","<div>\r\n    <p-autoComplete [inputStyleClass]=\"isValid()\" [suggestions]=\"models\" (completeMethod)=\"loadLazy($event)\" (change)=\"change($event)\" (paste)=\"change($event)\" (onSelect)=\"change($event)\" [forceSelection]=\"true\" delay=\"0\" [(ngModel)]=\"value\" field=\"username\" placeholder=\"{{placeholder}}\" [disabled]=\"disabled\" [required]=\"required\">\r\n    </p-autoComplete>\r\n</div>","// France\r\nexport const locale = {\r\n  lang: 'fr',\r\n  data: {\r\n    TRANSLATOR: {\r\n      SELECT: 'choisissez votre langue',\r\n    },\r\n    MENU: {\r\n      NEW: 'Nouveau',\r\n      ACTIONS: 'Actes',\r\n      CREATE_POST: 'Créer un nouveau Post',\r\n      PAGES: 'Pages',\r\n      FEATURES: 'Fonctionnalités',\r\n      APPS: 'Applications',\r\n      DASHBOARD: 'Tableau de Bord',\r\n    },\r\n    AUTH: {\r\n      GENERAL: {\r\n        OR: 'Ou',\r\n        SUBMIT_BUTTON: 'Soumettre',\r\n        NO_ACCOUNT: 'Ne pas avoir de compte?',\r\n        SIGNUP_BUTTON: 'Registre',\r\n        FORGOT_BUTTON: 'Mot de passe oublié',\r\n        BACK_BUTTON: 'Back',\r\n        PRIVACY: 'Privacy',\r\n        LEGAL: 'Legal',\r\n        CONTACT: 'Contact',\r\n      },\r\n      LOGIN: {\r\n        TITLE: 'Créer un compte',\r\n        BUTTON: 'Sign In',\r\n      },\r\n      FORGOT: {\r\n        TITLE: 'Forgotten Password?',\r\n        DESC: 'Enter your email to reset your password',\r\n        SUCCESS: 'Your account has been successfully reset.'\r\n      },\r\n      REGISTER: {\r\n        TITLE: 'Sign Up',\r\n        DESC: 'Enter your details to create your account',\r\n        SUCCESS: 'Your account has been successfuly registered.'\r\n      },\r\n      INPUT: {\r\n        EMAIL: 'Email',\r\n        FULLNAME: 'Fullname',\r\n        PASSWORD: 'Mot de passe',\r\n        CONFIRM_PASSWORD: 'Confirm Password',\r\n        USERNAME: 'Nom d\\'utilisateur'\r\n      },\r\n      VALIDATION: {\r\n        INVALID: '{{name}} n\\'est pas valide',\r\n        REQUIRED: '{{name}} est requis',\r\n        MIN_LENGTH: '{{name}} minimum length is {{min}}',\r\n        AGREEMENT_REQUIRED: 'Accepting terms & conditions are required',\r\n        NOT_FOUND: 'The requested {{name}} is not found',\r\n        INVALID_LOGIN: 'The login detail is incorrect',\r\n        REQUIRED_FIELD: 'Required field',\r\n        MIN_LENGTH_FIELD: 'Minimum field length:',\r\n        MAX_LENGTH_FIELD: 'Maximum field length:',\r\n        INVALID_FIELD: 'Field is not valid',\r\n      }\r\n    },\r\n    ECOMMERCE: {\r\n      COMMON: {\r\n        SELECTED_RECORDS_COUNT: 'Nombre d\\'enregistrements sélectionnés: ',\r\n        ALL: 'All',\r\n        SUSPENDED: 'Suspended',\r\n        ACTIVE: 'Active',\r\n        FILTER: 'Filter',\r\n        BY_STATUS: 'by Status',\r\n        BY_TYPE: 'by Type',\r\n        BUSINESS: 'Business',\r\n        INDIVIDUAL: 'Individual',\r\n        SEARCH: 'Search',\r\n        IN_ALL_FIELDS: 'in all fields'\r\n      },\r\n      ECOMMERCE: 'éCommerce',\r\n      CUSTOMERS: {\r\n        CUSTOMERS: 'Les clients',\r\n        CUSTOMERS_LIST: 'Liste des clients',\r\n        NEW_CUSTOMER: 'Nouveau client',\r\n        DELETE_CUSTOMER_SIMPLE: {\r\n          TITLE: 'Suppression du client',\r\n          DESCRIPTION: 'Êtes-vous sûr de supprimer définitivement ce client?',\r\n          WAIT_DESCRIPTION: 'Le client est en train de supprimer ...',\r\n          MESSAGE: 'Le client a été supprimé'\r\n        },\r\n        DELETE_CUSTOMER_MULTY: {\r\n          TITLE: 'Supprimer les clients',\r\n          DESCRIPTION: 'Êtes-vous sûr de supprimer définitivement les clients sélectionnés?',\r\n          WAIT_DESCRIPTION: 'Les clients suppriment ...',\r\n          MESSAGE: 'Les clients sélectionnés ont été supprimés'\r\n        },\r\n        UPDATE_STATUS: {\r\n          TITLE: 'Le statut a été mis à jour pour les clients sélectionnés',\r\n          MESSAGE: 'Le statut des clients sélectionnés a été mis à jour avec succès'\r\n        },\r\n        EDIT: {\r\n          UPDATE_MESSAGE: 'Le client a été mis à jour',\r\n          ADD_MESSAGE: 'Le client a été créé'\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ContentTypeService as ModelService } from '../_services/content-type.service';\r\nimport { ContentTypeModel as Model } from '../_models/content-type.model';\r\nimport { FormGroup, AbstractControl, FormBuilder, Validators, FormControl } from '@angular/forms';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { Observable } from 'rxjs';\r\nimport { LazyLoadEvent } from 'primeng/api';\r\nimport { ConfirmationService } from 'primeng/api';\r\nimport { debounceTime, distinctUntilChanged } from 'rxjs/operators';\r\nimport { ToastService } from 'src/app/modules/toast/_services/toast.service';\r\nimport { AuthService } from 'src/app/modules/auth';\r\n@Component({\r\n    selector: 'app-content-types',\r\n    templateUrl: './content-types.component.html',\r\n    styleUrls: ['./content-types.component.scss']\r\n})\r\nexport class ContentTypesComponent implements OnInit {\r\n\r\n    public promiseForm: Promise<any>;\r\n\r\n    public models: Model[];\r\n    public selectedModels: Model[];\r\n\r\n    public page: number;\r\n    public total_page: number;\r\n    public per_page: number;\r\n    public totalRecords: number;\r\n\r\n    public sort: string;\r\n    public query: string;\r\n    public filters: { key: string, value: string }[];\r\n    public _with: { key: string, value: string }[];\r\n\r\n    public formGroup: FormGroup;\r\n\r\n    searchGroup: FormGroup;\r\n\r\n    public requesting: boolean = false;\r\n\r\n    public confirmDialogPosition: string;\r\n    public message_confirm_delete: string;\r\n\r\n    public showTableCheckbox: boolean;\r\n\r\n    public companyId: number;\r\n    public parent: string;\r\n\r\n    constructor(\r\n        public modelsService: ModelService,\r\n        public translate: TranslateService,\r\n        private confirmationService: ConfirmationService,\r\n        private toastService: ToastService,\r\n        private route: ActivatedRoute,\r\n        public authService: AuthService,\r\n        fb: FormBuilder) {\r\n        this.formGroup = fb.group({\r\n\r\n        });\r\n\r\n        this.searchGroup = fb.group({\r\n            searchTerm: [''],\r\n        });\r\n\r\n        this.translate.get('COMMON.MESSAGE_CONFIRM_DELETE').subscribe((res: string) => {\r\n            this.message_confirm_delete = res;\r\n        });\r\n\r\n        this.showTableCheckbox = false;\r\n        this.parent = '';\r\n\r\n        this.page = 1;\r\n        this.total_page = 0;\r\n        this.per_page = 100\r\n        this.totalRecords = 0;\r\n\r\n        this.requesting = false;\r\n\r\n        this.confirmDialogPosition = 'right';\r\n\r\n        this.models = [];\r\n        this.selectedModels = [];\r\n        this.getModels();\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.requesting = false;\r\n    }\r\n\r\n    public loadLazy(event?: LazyLoadEvent) {\r\n        if (event && event.first) {\r\n            this.page = (event.first / this.per_page) + 1;\r\n        }\r\n\r\n        if (event && event.sortField) {\r\n            if (event.sortOrder === -1) {\r\n                this.sort = '-' + event.sortField;\r\n            } else {\r\n                this.sort = event.sortField;\r\n            }\r\n        } else {\r\n            this.sort = '-id';\r\n        }\r\n\r\n        if (event && event.globalFilter) {\r\n            this.query = event.globalFilter;\r\n        } else {\r\n            this.query = undefined;\r\n        }\r\n\r\n        if (event && event.rows) {\r\n            this.per_page = event.rows;\r\n        }\r\n\r\n        this.filters = [];\r\n        if (this.route.parent.parent.parent.snapshot.url.length > 0) {\r\n            this.route.parent.parent.parent.params.subscribe((params) => {\r\n                if (this.route.parent.parent.parent.parent.parent.snapshot.url.length > 0) {\r\n                    this.companyId = params.id;\r\n                    this.parent = '/' + this.route.parent.parent.parent.parent.parent.snapshot.url[0].path + '/edit/' + this.companyId;\r\n                    this.filters.push({ key: 'filter{company}', value: this.companyId.toString() })\r\n                }\r\n                this.getModels();\r\n            });\r\n        } else {\r\n            this.getModels();\r\n        }   \r\n    }\r\n\r\n    public getModels() {\r\n        this.requesting = true;\r\n        setTimeout(() => {\r\n        this.modelsService.get(this.page, this.per_page, this.sort, this.query, this.filters, this._with).subscribe(\r\n            response => {\r\n                this.requesting = false;\r\n                this.models = response.content_types;\r\n                this.totalRecords = response.meta.total_results;\r\n            },\r\n            error => {\r\n                this.requesting = false;\r\n                let messageError = [];\r\n                if (!Array.isArray(error.error)) {\r\n                    messageError.push(error.error);\r\n                } else {\r\n                    messageError = error.error;\r\n                }\r\n                Object.entries(messageError).forEach(\r\n                    ([key, value]) => this.toastService.growl('error', key + ': ' + value)\r\n                );\r\n            }\r\n        );\r\n        }, 5)\r\n    }\r\n\r\n    public delete(id) {\r\n        this.modelsService.delete(id).toPromise().then(\r\n            response => {\r\n                this.toastService.growl('success', 'Delete');\r\n                this.getModels();\r\n            },\r\n            error => {\r\n                let messageError = [];\r\n                if (!Array.isArray(error.error)) {\r\n                    messageError.push(error.error);\r\n                } else {\r\n                    messageError = error.error;\r\n                }\r\n                Object.entries(messageError).forEach(\r\n                    ([key, value]) => this.toastService.growl('error', key + ': ' + value)\r\n                );\r\n            }\r\n        );\r\n    }\r\n\r\n    public patch(values: Model) {\r\n        const param = {\r\n            // 'activated': values.activated\r\n        };\r\n        if (values) {\r\n            const promise = this.modelsService.patch(values.id, param);\r\n            this.promiseForm = promise.toPromise().then(\r\n                response => {\r\n                    this.toastService.growl('success', 'Patch');\r\n                },\r\n                error => {\r\n                    let messageError = [];\r\n                    if (!Array.isArray(error.error)) {\r\n                        messageError.push(error.error);\r\n                    } else {\r\n                        messageError = error.error;\r\n                    }\r\n                    Object.entries(messageError).forEach(\r\n                        ([key, value]) => this.toastService.growl('error', key + ': ' + value)\r\n                    );\r\n                }\r\n            );\r\n        }\r\n    }\r\n\r\n    confirm(id, position: string) {\r\n        this.confirmDialogPosition = position;\r\n        this.confirmationService.confirm({\r\n            message: this.message_confirm_delete,\r\n            accept: () => {\r\n                this.delete(id);\r\n            }\r\n        });\r\n    }\r\n}\r\n","<div class=\"card card-custom gutter-b\">\r\n  <div class=\"card-header\">\r\n    <div class=\"card-title\">\r\n      <h3 class=\"card-label\">{{ 'COMMON.LIST' | translate }}</h3>{{ 'CONTENT_TYPE.CONTENT_TYPES' | translate }}\r\n    </div>\r\n    <div class=\"card-toolbar\">\r\n      <a type=\"button\" class=\"btn btn-primary\" routerLink=\"{{parent}}/contenttypes/add\">{{ 'COMMON.NEW' | translate }}</a>\r\n    </div>\r\n  </div>\r\n  <div class=\"card-body\">\r\n    <!-- begin: Filtration form -->\r\n    <div class=\"form form-label-right\">\r\n      <div class=\"form-group row\">\r\n        <div class=\"col-lg-6\">\r\n          {{ 'COMMON.FILTER' | translate }}\r\n        </div>\r\n        <div class=\"col-lg-6\" [formGroup]=\"searchGroup\">\r\n          <input type=\"text\" class=\"form-control\" name=\"searchText\" placeholder=\"{{ 'COMMON.SEARCH' | translate }}\" value=\"\" (input)=\"dt.filterGlobal($event.target.value, 'contains')\"\r\n            formControlName=\"searchTerm\" /><small class=\"form-text text-muted\"><b>{{ 'COMMON.SEARCH' | translate }}</b> </small>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <!-- end: Filtration form -->\r\n\r\n    <!-- begin:Table -->\r\n    <p-table #dt [value]=\"models\" [(selection)]=\"selectedModels\" dataKey=\"id\" styleClass=\"p-datatable-striped p-datatable-sm\" [rowHover]=\"true\"\r\n    [rows]=\"per_page\" [showCurrentPageReport]=\"true\" [rowsPerPageOptions]=\"[5,10,25,50,100]\"\r\n    [paginator]=\"true\" currentPageReportTemplate=\"{{ 'COMMON.SHOWING' | translate }} {{ 'COMMON.FROM' | translate }} {first} {{ 'COMMON.TO' | translate }} {last} {{ 'COMMON.OF' | translate }} {totalRecords} {{ 'COMMON.RECORDS' | translate }}\"\r\n    [filterDelay]=\"1000\" [globalFilterFields]=\"['id','username']\" [lazy]=\"true\" (onLazyLoad)=\"loadLazy($event)\"\r\n    [totalRecords]=\"totalRecords\" [showJumpToPageDropdown]=\"false\" [minBufferPx]=\"1\" [showLoader]=\"true\" [loading]=\"requesting\">\r\n      <ng-template pTemplate=\"header\">\r\n        <tr>\r\n          <th style=\"width: 3rem\" *ngIf=\"showTableCheckbox\">\r\n            <p-tableHeaderCheckbox></p-tableHeaderCheckbox>\r\n          </th>\r\n          <th pSortableColumn=\"id\">\r\n            <div class=\"p-d-flex p-jc-between p-ai-center\">\r\n              {{ 'CONTENT_TYPE.ID' | translate }}\r\n            </div>\r\n          </th>\r\n          <th pSortableColumn=\"app_label\">\r\n            <div class=\"p-d-flex p-jc-between p-ai-center\">\r\n              {{ 'CONTENT_TYPE.APP_LABEL' | translate }}\r\n            </div>\r\n          </th>\r\n          <th pSortableColumn=\"model\">\r\n            <div class=\"p-d-flex p-jc-between p-ai-center\">\r\n              {{ 'CONTENT_TYPE.MODEL' | translate }}\r\n            </div>\r\n          </th>\r\n          <th style=\"width: 10rem\">\r\n            <div class=\"p-d-flex p-jc-between p-ai-center\">\r\n              {{ 'COMMON.ACTION' | translate }}\r\n              <!-- <p-sortIcon field=\"date_joined\"></p-sortIcon>\r\n              <p-columnFilter type=\"date_joined\" field=\"date_joined\" display=\"menu\" class=\"p-ml-auto\"></p-columnFilter> -->\r\n            </div>\r\n          </th>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"body\" let-value>\r\n        <tr class=\"p-selectable-row\">\r\n          <td *ngIf=\"showTableCheckbox\">\r\n            <p-tableCheckbox [value]=\"value\"></p-tableCheckbox>\r\n          </td>\r\n          <td>\r\n            {{value.id}}\r\n          </td>\r\n          <td>\r\n            {{value.app_label}}\r\n          </td>\r\n          <td>\r\n            {{value.model}}\r\n          </td>\r\n          <td style=\"text-align: right\">\r\n            <a title=\"{{ 'COMMON.EDIT' | translate }}\" class=\"btn btn-icon btn-light btn-hover-primary btn-sm\" style=\"margin-right: 5px;\"\r\n              routerLink=\"{{parent}}/contenttypes/edit/{{value.id}}\">\r\n              <span [inlineSVG]=\"'./assets/media/svg/icons/Communication/Write.svg'\" cacheSVG=\"true\"\r\n                class=\"svg-icon svg-icon-md svg-icon-primary\">\r\n              </span>\r\n            </a>\r\n            <a title=\"{{ 'COMMON.DELETE' | translate }}\" class=\"btn btn-icon btn-light btn-hover-danger btn-sm\"\r\n              (click)=\"confirm(value.id, 'right')\">\r\n              <span [inlineSVG]=\"'./assets/media/svg/icons/General/Trash.svg'\" cacheSVG=\"true\"\r\n                class=\"svg-icon svg-icon-md svg-icon-danger\">\r\n              </span>\r\n            </a>\r\n          </td>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"emptymessage\">\r\n        <tr>\r\n          <td colspan=\"3\">{{ 'COMMON.NO_ITEMS_FOUND' | translate }}</td>\r\n        </tr>\r\n      </ng-template>\r\n    </p-table>\r\n    <!-- end: Table -->\r\n  </div>\r\n</div>\r\n\r\n<p-confirmDialog header=\"{{ 'COMMON.CONFIRMATION' | translate }}\" icon=\"pi pi-exclamation-triangle\" [position]=\"confirmDialogPosition\"></p-confirmDialog>","import { Component, OnInit } from '@angular/core';\r\nimport { GroupService as ModelService } from '../_services/group.service';\r\nimport { GroupModel as Model } from '../_models/group.model';\r\nimport { FormGroup, AbstractControl, FormBuilder, Validators, FormControl } from '@angular/forms';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { Observable } from 'rxjs';\r\nimport { LazyLoadEvent } from 'primeng/api';\r\nimport { ConfirmationService } from 'primeng/api';\r\nimport { debounceTime, distinctUntilChanged } from 'rxjs/operators';\r\nimport { ToastService } from 'src/app/modules/toast/_services/toast.service';\r\nimport { AuthService } from 'src/app/modules/auth';\r\n@Component({\r\n    selector: 'app-groups',\r\n    templateUrl: './groups.component.html',\r\n    styleUrls: ['./groups.component.scss']\r\n})\r\nexport class GroupsComponent implements OnInit {\r\n\r\n    public promiseForm: Promise<any>;\r\n\r\n    public models: Model[];\r\n    public selectedModels: Model[];\r\n\r\n    public page: number;\r\n    public total_page: number;\r\n    public per_page: number;\r\n    public totalRecords: number;\r\n\r\n    public sort: string;\r\n    public query: string;\r\n    public filters: { key: string, value: string }[];\r\n    public _with: { key: string, value: string }[];\r\n\r\n    // public formGroup: FormGroup;\r\n    // public group_id_filter: AbstractControl;\r\n    // public department_id_filter: AbstractControl;\r\n    // public venue_id_filter: AbstractControl;\r\n\r\n    searchGroup: FormGroup;\r\n\r\n    public requesting: boolean = false;\r\n\r\n    public confirmDialogPosition: string;\r\n    public message_confirm_delete: string;\r\n\r\n    public showTableCheckbox: boolean;\r\n\r\n    constructor(\r\n        public modelsService: ModelService,\r\n        public translate: TranslateService,\r\n        private confirmationService: ConfirmationService,\r\n        private toastService: ToastService,\r\n        public authService: AuthService,\r\n        fb: FormBuilder) {\r\n        // this.formGroup = fb.group({\r\n        //     'group_id_filter': [''],\r\n        //     'department_id_filter': [''],\r\n        //     'venue_id_filter': [''],\r\n        // });\r\n        // this.group_id_filter = this.formGroup.controls['group_id_filter'];\r\n        // this.department_id_filter = this.formGroup.controls['department_id_filter'];\r\n        // this.venue_id_filter = this.formGroup.controls['venue_id_filter'];\r\n\r\n\r\n        this.searchGroup = fb.group({\r\n            searchTerm: [''],\r\n        });\r\n\r\n        this.translate.get('COMMON.MESSAGE_CONFIRM_DELETE').subscribe((res: string) => {\r\n            this.message_confirm_delete = res;\r\n        });\r\n\r\n        this.showTableCheckbox = false;\r\n\r\n        this.page = 1;\r\n        this.total_page = 0;\r\n        this.per_page = 100\r\n        this.totalRecords = 0;\r\n\r\n        this.requesting = false;\r\n\r\n        this.confirmDialogPosition = 'right';\r\n\r\n        this.models = [];\r\n        this.selectedModels = [];\r\n        this.getModels();\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.requesting = false;\r\n    }\r\n\r\n    public loadLazy(event?: LazyLoadEvent) {\r\n        if (event && event.first) {\r\n            this.page = (event.first / this.per_page) + 1;\r\n        }\r\n\r\n        if (event && event.sortField) {\r\n            if (event.sortOrder === -1) {\r\n                this.sort = '-' + event.sortField;\r\n            } else {\r\n                this.sort = event.sortField;\r\n            }\r\n        } else {\r\n            this.sort = '-id';\r\n        }\r\n\r\n        if (event && event.globalFilter) {\r\n            this.query = event.globalFilter;\r\n        } else {\r\n            this.query = undefined;\r\n        }\r\n\r\n        if (event && event.rows) {\r\n            this.per_page = event.rows;\r\n        }\r\n\r\n\r\n        this.getModels();\r\n    }\r\n\r\n    public getModels() {\r\n        this.requesting = true;\r\n        setTimeout(() => {\r\n        this.modelsService.get(this.page, this.per_page, this.sort, this.query, this.filters, this._with).subscribe(\r\n            response => {\r\n                this.requesting = false;\r\n                this.models = response.groups;\r\n                this.totalRecords = response.meta.total_results;\r\n            },\r\n            error => {\r\n                this.requesting = false;\r\n                if (error.status == 404) {\r\n                    this.toastService.growl('error', 'Not Found')\r\n                } else {\r\n                    let messageError = [];\r\n                    if (!Array.isArray(error.error)) {\r\n                        messageError.push(error.error);\r\n                    } else {\r\n                        messageError = error.error;\r\n                    }\r\n                    Object.entries(messageError).forEach(\r\n                        ([key, value]) => this.toastService.growl('error', key + ': ' + value)\r\n                    );\r\n                }\r\n            }\r\n        );\r\n        }, 5)\r\n    }\r\n\r\n    // public showDeleteDialog(user: Model) {\r\n    //     let message;\r\n    //     this.translate.get('Do you want to delete?').subscribe((res: string) => {\r\n    //         message = res;\r\n    //     });\r\n\r\n    //     let header;\r\n    //     this.translate.get('Delete Confirmation').subscribe((res: string) => {\r\n    //         header = res;\r\n    //     });\r\n\r\n    //     this.confirmationService.confirm({\r\n    //         message: message,\r\n    //         header: header,\r\n    //         icon: 'fa fa-trash',\r\n    //         accept: () => {\r\n    //             this.delete(user);\r\n    //         }\r\n    //     });\r\n    // }\r\n\r\n    public delete(id) {\r\n        this.modelsService.delete(id).toPromise().then(\r\n            response => {\r\n                this.toastService.growl('success', 'Delete');\r\n                this.getModels();\r\n            },\r\n            error => {\r\n                if (error.status == 404) {\r\n                    this.toastService.growl('error', 'Not Found')\r\n                } else {\r\n                    let messageError = [];\r\n                    if (!Array.isArray(error.error)) {\r\n                        messageError.push(error.error);\r\n                    } else {\r\n                        messageError = error.error;\r\n                    }\r\n                    Object.entries(messageError).forEach(\r\n                        ([key, value]) => this.toastService.growl('error', key + ': ' + value)\r\n                    );\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n    public patch(values: Model) {\r\n        const param = {\r\n            // 'activated': values.activated\r\n        };\r\n        if (values) {\r\n            const promise = this.modelsService.patch(values.id, param);\r\n            this.promiseForm = promise.toPromise().then(\r\n                response => {\r\n                    this.toastService.growl('success', 'Patch');\r\n                },\r\n                error => {\r\n                    if (error.status == 404) {\r\n                        this.toastService.growl('error', 'Not Found')\r\n                    } else {\r\n                        let messageError = [];\r\n                        if (!Array.isArray(error.error)) {\r\n                            messageError.push(error.error);\r\n                        } else {\r\n                            messageError = error.error;\r\n                        }\r\n                        Object.entries(messageError).forEach(\r\n                            ([key, value]) => this.toastService.growl('error', key + ': ' + value)\r\n                        );\r\n                    }\r\n                }\r\n            );\r\n        }\r\n    }\r\n\r\n    confirm(id, group: string) {\r\n        this.confirmDialogPosition = group;\r\n        this.confirmationService.confirm({\r\n            message: 'Are you sure that you want to delete?',\r\n            accept: () => {\r\n                this.delete(id);\r\n            }\r\n        });\r\n    }\r\n}\r\n","<div class=\"card card-custom gutter-b\">\r\n  <div class=\"card-header\">\r\n    <div class=\"card-title\">\r\n      <h3 class=\"card-label\">{{ 'COMMON.LIST' | translate }}</h3>{{ 'GROUP.GROUPS' | translate }}\r\n    </div>\r\n    <div class=\"card-toolbar\">\r\n      <a type=\"button\" class=\"btn btn-primary\" routerLink=\"/groups/add\">{{ 'COMMON.NEW' | translate }}</a>\r\n    </div>\r\n  </div>\r\n  <div class=\"card-body\">\r\n    <!-- begin: Filtration form -->\r\n    <div class=\"form form-label-right\">\r\n      <div class=\"form-group row\">\r\n        <div class=\"col-lg-6\">\r\n          {{ 'COMMON.FILTER' | translate }}\r\n        </div>\r\n        <div class=\"col-lg-6\" [formGroup]=\"searchGroup\">\r\n          <input type=\"text\" class=\"form-control\" name=\"searchText\" placeholder=\"{{ 'COMMON.SEARCH' | translate }}\" value=\"\" (input)=\"dt.filterGlobal($event.target.value, 'contains')\"\r\n            formControlName=\"searchTerm\" /><small class=\"form-text text-muted\"><b>{{ 'COMMON.SEARCH' | translate }}</b> </small>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <!-- end: Filtration form -->\r\n\r\n    <!-- begin:Table -->\r\n    <p-table #dt [value]=\"models\" [(selection)]=\"selectedModels\" dataKey=\"id\" styleClass=\"p-datatable-striped p-datatable-sm\" [rowHover]=\"true\"\r\n    [rows]=\"per_page\" [showCurrentPageReport]=\"true\" [rowsPerPageOptions]=\"[5,10,25,50,100]\"\r\n    [paginator]=\"true\" currentPageReportTemplate=\"{{ 'COMMON.SHOWING' | translate }} {{ 'COMMON.FROM' | translate }} {first} {{ 'COMMON.TO' | translate }} {last} {{ 'COMMON.OF' | translate }} {totalRecords} {{ 'COMMON.RECORDS' | translate }}\"\r\n    [filterDelay]=\"1000\" [globalFilterFields]=\"['id','username']\" [lazy]=\"true\" (onLazyLoad)=\"loadLazy($event)\"\r\n    [totalRecords]=\"totalRecords\" [showJumpToPageDropdown]=\"false\" [minBufferPx]=\"1\" [showLoader]=\"true\" [loading]=\"requesting\">\r\n      <ng-template pTemplate=\"header\">\r\n        <tr>\r\n          <th style=\"width: 3rem\" *ngIf=\"showTableCheckbox\">\r\n            <p-tableHeaderCheckbox></p-tableHeaderCheckbox>\r\n          </th>\r\n          <th pSortableColumn=\"id\">\r\n            <div class=\"p-d-flex p-jc-between p-ai-center\">\r\n              {{ 'GROUP.ID' | translate }}\r\n            </div>\r\n          </th>\r\n          <th pSortableColumn=\"name\">\r\n            <div class=\"p-d-flex p-jc-between p-ai-center\">\r\n              {{ 'GROUP.NAME' | translate }} \r\n            </div>\r\n          </th>\r\n          <th style=\"width: 10rem\">\r\n            <div class=\"p-d-flex p-jc-between p-ai-center\">\r\n              {{ 'COMMON.ACTION' | translate }}\r\n              <!-- <p-sortIcon field=\"date_joined\"></p-sortIcon>\r\n              <p-columnFilter type=\"date_joined\" field=\"date_joined\" display=\"menu\" class=\"p-ml-auto\"></p-columnFilter> -->\r\n            </div>\r\n          </th>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"body\" let-value>\r\n        <tr class=\"p-selectable-row\">\r\n          <td *ngIf=\"showTableCheckbox\">\r\n            <p-tableCheckbox [value]=\"value\"></p-tableCheckbox>\r\n          </td>\r\n          <td>\r\n            {{value.id}}\r\n          </td>\r\n          <td>\r\n            {{value.name}}\r\n          </td>\r\n          <td style=\"text-align: right\">\r\n            <a title=\"{{ 'COMMON.EDIT' | translate }}\" class=\"btn btn-icon btn-light btn-hover-primary btn-sm\" style=\"margin-right: 5px;\"\r\n              [routerLink]=\"'/groups/edit/' + value.id\"  *ngIf=\"authService.hasPermission('add_group')\">\r\n              <span [inlineSVG]=\"'./assets/media/svg/icons/Communication/Write.svg'\" cacheSVG=\"true\"\r\n                class=\"svg-icon svg-icon-md svg-icon-primary\">\r\n              </span>\r\n            </a>\r\n            <a title=\"{{ 'COMMON.DELETE' | translate }}\" class=\"btn btn-icon btn-light btn-hover-danger btn-sm\"\r\n              (click)=\"confirm(value.id, 'right')\" *ngIf=\"authService.hasPermission('change_group')\">\r\n              <span [inlineSVG]=\"'./assets/media/svg/icons/General/Trash.svg'\" cacheSVG=\"true\"\r\n                class=\"svg-icon svg-icon-md svg-icon-danger\">\r\n              </span>\r\n            </a>\r\n          </td>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"emptymessage\">\r\n        <tr>\r\n          <td colspan=\"3\">{{ 'COMMON.NO_ITEMS_FOUND' | translate }}</td>\r\n        </tr>\r\n      </ng-template>\r\n    </p-table>\r\n    <!-- end: Table -->\r\n  </div>\r\n</div>\r\n\r\n<p-confirmDialog header=\"{{ 'COMMON.CONFIRMATION' | translate }}\" icon=\"pi pi-exclamation-triangle\" [position]=\"confirmDialogPosition\"></p-confirmDialog>","// China\r\nexport const locale = {\r\n  lang: 'ch',\r\n  data: {\r\n    TRANSLATOR: {\r\n      SELECT: '选择你的语言',\r\n    },\r\n    MENU: {\r\n      NEW: '新',\r\n      ACTIONS: '行动',\r\n      CREATE_POST: '创建新帖子',\r\n      PAGES: 'Pages',\r\n      FEATURES: '特征',\r\n      APPS: '应用',\r\n      DASHBOARD: '仪表板',\r\n    },\r\n    AUTH: {\r\n      GENERAL: {\r\n        OR: '要么',\r\n        SUBMIT_BUTTON: '提交',\r\n        NO_ACCOUNT: '没有账号？',\r\n        SIGNUP_BUTTON: '注册',\r\n        FORGOT_BUTTON: '忘记密码',\r\n        BACK_BUTTON: '背部',\r\n        PRIVACY: '隐私',\r\n        LEGAL: '法律',\r\n        CONTACT: '联系',\r\n      },\r\n      LOGIN: {\r\n        TITLE: '创建帐号',\r\n        BUTTON: '签到',\r\n      },\r\n      FORGOT: {\r\n        TITLE: 'Forgotten Password?',\r\n        DESC: 'Enter your email to reset your password',\r\n        SUCCESS: 'Your account has been successfully reset.'\r\n      },\r\n      REGISTER: {\r\n        TITLE: 'Sign Up',\r\n        DESC: 'Enter your details to create your account',\r\n        SUCCESS: 'Your account has been successfuly registered.'\r\n      },\r\n      INPUT: {\r\n        EMAIL: 'Email',\r\n        FULLNAME: 'Fullname',\r\n        PASSWORD: 'Password',\r\n        CONFIRM_PASSWORD: 'Confirm Password',\r\n        USERNAME: '用戶名'\r\n      },\r\n      VALIDATION: {\r\n        INVALID: '{{name}} is not valid',\r\n        REQUIRED: '{{name}} is required',\r\n        MIN_LENGTH: '{{name}} minimum length is {{min}}',\r\n        AGREEMENT_REQUIRED: 'Accepting terms & conditions are required',\r\n        NOT_FOUND: 'The requested {{name}} is not found',\r\n        INVALID_LOGIN: 'The login detail is incorrect',\r\n        REQUIRED_FIELD: 'Required field',\r\n        MIN_LENGTH_FIELD: 'Minimum field length:',\r\n        MAX_LENGTH_FIELD: 'Maximum field length:',\r\n        INVALID_FIELD: 'Field is not valid',\r\n      }\r\n    },\r\n    ECOMMERCE: {\r\n      COMMON: {\r\n        SELECTED_RECORDS_COUNT: 'Selected records count: ',\r\n        ALL: 'All',\r\n        SUSPENDED: 'Suspended',\r\n        ACTIVE: 'Active',\r\n        FILTER: 'Filter',\r\n        BY_STATUS: 'by Status',\r\n        BY_TYPE: 'by Type',\r\n        BUSINESS: 'Business',\r\n        INDIVIDUAL: 'Individual',\r\n        SEARCH: 'Search',\r\n        IN_ALL_FIELDS: 'in all fields'\r\n      },\r\n      ECOMMERCE: 'eCommerce',\r\n      CUSTOMERS: {\r\n        CUSTOMERS: '顾客',\r\n        CUSTOMERS_LIST: '客户名单',\r\n        NEW_CUSTOMER: 'New Customer',\r\n        DELETE_CUSTOMER_SIMPLE: {\r\n          TITLE: 'Customer Delete',\r\n          DESCRIPTION: 'Are you sure to permanently delete this customer?',\r\n          WAIT_DESCRIPTION: 'Customer is deleting...',\r\n          MESSAGE: 'Customer has been deleted'\r\n        },\r\n        DELETE_CUSTOMER_MULTY: {\r\n          TITLE: 'Customers Delete',\r\n          DESCRIPTION: 'Are you sure to permanently delete selected customers?',\r\n          WAIT_DESCRIPTION: 'Customers are deleting...',\r\n          MESSAGE: 'Selected customers have been deleted'\r\n        },\r\n        UPDATE_STATUS: {\r\n          TITLE: 'Status has been updated for selected customers',\r\n          MESSAGE: 'Selected customers status have successfully been updated'\r\n        },\r\n        EDIT: {\r\n          UPDATE_MESSAGE: 'Customer has been updated',\r\n          ADD_MESSAGE: 'Customer has been created'\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { UserService as ModelService } from '../_services/user.service';\r\nimport { UserModel as Model } from '../_models/user.model';\r\nimport { FormGroup, AbstractControl, FormBuilder, Validators, FormControl } from '@angular/forms';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { Observable } from 'rxjs';\r\nimport { LazyLoadEvent } from 'primeng/api';\r\nimport { ConfirmationService } from 'primeng/api';\r\nimport { debounceTime, distinctUntilChanged } from 'rxjs/operators';\r\nimport { ToastService } from 'src/app/modules/toast/_services/toast.service';\r\nimport { AuthService } from 'src/app/modules/auth';\r\n\r\n@Component({\r\n    selector: 'app-users',\r\n    templateUrl: './users.component.html',\r\n    styleUrls: ['./users.component.scss']\r\n})\r\nexport class UsersComponent implements OnInit {\r\n\r\n    public promiseForm: Promise<any>;\r\n\r\n    public models: Model[];\r\n    public selectedModels: Model[];\r\n\r\n    public page: number;\r\n    public total_page: number;\r\n    public per_page: number;\r\n    public totalRecords: number;\r\n\r\n    public sort: string;\r\n    public query: string;\r\n    public filters: { key: string, value: string }[];\r\n    public _with: { key: string, value: string }[];\r\n\r\n    // public formGroup: FormGroup;\r\n    // public employee_id_filter: AbstractControl;\r\n    // public department_id_filter: AbstractControl;\r\n    // public venue_id_filter: AbstractControl;\r\n\r\n    searchGroup: FormGroup;\r\n\r\n    public requesting: boolean = false;\r\n\r\n    public confirmDialogPosition: string;\r\n    public message_confirm_delete: string;\r\n\r\n    public showTableCheckbox: boolean;\r\n\r\n    constructor(\r\n        public modelsService: ModelService,\r\n        public translate: TranslateService,\r\n        private confirmationService: ConfirmationService,\r\n        private toastService: ToastService,\r\n        public authService: AuthService,\r\n        fb: FormBuilder) {\r\n        // this.formGroup = fb.group({\r\n        //     'employee_id_filter': [''],\r\n        //     'department_id_filter': [''],\r\n        //     'venue_id_filter': [''],\r\n        // });\r\n        // this.employee_id_filter = this.formGroup.controls['employee_id_filter'];\r\n        // this.department_id_filter = this.formGroup.controls['department_id_filter'];\r\n        // this.venue_id_filter = this.formGroup.controls['venue_id_filter'];\r\n\r\n        this.searchGroup = fb.group({\r\n            searchTerm: [''],\r\n        });\r\n\r\n        this.translate.get('COMMON.MESSAGE_CONFIRM_DELETE').subscribe((res: string) => {\r\n            this.message_confirm_delete = res;\r\n        });\r\n\r\n        this.showTableCheckbox = false;\r\n\r\n        this.page = 1;\r\n        this.total_page = 0;\r\n        this.per_page = 100\r\n        this.totalRecords = 0;\r\n\r\n        this.requesting = false;\r\n\r\n        this.confirmDialogPosition = 'right';\r\n\r\n        this.models = [];\r\n        this.selectedModels = [];\r\n        // this.getModels();\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.requesting = false;\r\n    }\r\n\r\n    public loadLazy(event?: LazyLoadEvent) {\r\n        if (event && event.first) {\r\n            this.page = (event.first / this.per_page) + 1;\r\n        }\r\n\r\n        if (event && event.sortField) {\r\n            if (event.sortOrder === -1) {\r\n                this.sort = '-' + event.sortField;\r\n            } else {\r\n                this.sort = event.sortField;\r\n            }\r\n        } else {\r\n            this.sort = '-id';\r\n        }\r\n\r\n        if (event && event.globalFilter) {\r\n            this.query = event.globalFilter;\r\n        } else {\r\n            this.query = undefined;\r\n        }\r\n\r\n        if (event && event.rows) {\r\n            this.per_page = event.rows;\r\n        }\r\n\r\n\r\n        this.getModels();\r\n    }\r\n\r\n    public getModels() {\r\n        this.requesting = true;\r\n        setTimeout(() => {\r\n        this.modelsService.get(this.page, this.per_page, this.sort, this.query, this.filters, this._with).toPromise().then(\r\n            response => {\r\n                this.requesting = false;\r\n                this.models = response.users;\r\n                this.totalRecords = response.meta.total_results;\r\n            },\r\n            error => {\r\n                this.requesting = false;\r\n                let messageError = [];\r\n                if (!Array.isArray(error.error)) {\r\n                    messageError.push(error.error);\r\n                } else {\r\n                    messageError = error.error;\r\n                }\r\n                Object.entries(messageError).forEach(\r\n                    ([key, value]) => this.toastService.growl('error', key + ': ' + value)\r\n                );\r\n            }\r\n        );\r\n        }, 5)\r\n    }\r\n\r\n    // public showDeleteDialog(user: Model) {\r\n    //     let message;\r\n    //     this.translate.get('Do you want to delete?').subscribe((res: string) => {\r\n    //         message = res;\r\n    //     });\r\n\r\n    //     let header;\r\n    //     this.translate.get('Delete Confirmation').subscribe((res: string) => {\r\n    //         header = res;\r\n    //     });\r\n\r\n    //     this.confirmationService.confirm({\r\n    //         message: message,\r\n    //         header: header,\r\n    //         icon: 'fa fa-trash',\r\n    //         accept: () => {\r\n    //             this.delete(user);\r\n    //         }\r\n    //     });\r\n    // }\r\n\r\n    public delete(id) {\r\n        this.modelsService.delete(id).toPromise().then(\r\n            response => {\r\n                this.toastService.growl('success', 'Delete');\r\n                this.getModels();\r\n            },\r\n            error => {\r\n                let messageError = [];\r\n                if (!Array.isArray(error.error)) {\r\n                    messageError.push(error.error);\r\n                } else {\r\n                    messageError = error.error;\r\n                }\r\n                Object.entries(messageError).forEach(\r\n                    ([key, value]) => this.toastService.growl('error', key + ': ' + value)\r\n                );\r\n            }\r\n        );\r\n    }\r\n\r\n    public patch(values: Model) {\r\n        const param = {\r\n            // 'activated': values.activated\r\n        };\r\n        if (values) {\r\n            const promise = this.modelsService.patch(values.id, param);\r\n            this.promiseForm = promise.toPromise().then(\r\n                response => {\r\n                    this.toastService.growl('success', 'Patch');\r\n                },\r\n                error => {\r\n                    let messageError = [];\r\n                    if (!Array.isArray(error.error)) {\r\n                        messageError.push(error.error);\r\n                    } else {\r\n                        messageError = error.error;\r\n                    }\r\n                    Object.entries(messageError).forEach(\r\n                        ([key, value]) => this.toastService.growl('error', key + ': ' + value)\r\n                    );\r\n                }\r\n            );\r\n        }\r\n    }\r\n\r\n    confirm(id, position: string) {\r\n        this.confirmDialogPosition = position;\r\n        this.confirmationService.confirm({\r\n            message: this.message_confirm_delete,\r\n            accept: () => {\r\n                this.delete(id);\r\n            }\r\n        });\r\n    }\r\n}\r\n","<div class=\"card card-custom gutter-b\">\r\n  <div class=\"card-header\">\r\n    <div class=\"card-title\">\r\n      <h3 class=\"card-label\">{{ 'COMMON.LIST' | translate }}</h3>{{ 'USER.USERS' | translate }}\r\n    </div>\r\n    <div class=\"card-toolbar\">\r\n      <a type=\"button\" class=\"btn btn-primary\" routerLink=\"/users/add\">{{ 'COMMON.NEW' | translate }}</a>\r\n    </div>\r\n  </div>\r\n  <div class=\"card-body\">\r\n    <!-- begin: Filtration form -->\r\n    <div class=\"form form-label-right\">\r\n      <div class=\"form-group row\">\r\n        <div class=\"col-lg-6\">\r\n          {{ 'COMMON.FILTER' | translate }}\r\n        </div>\r\n        <div class=\"col-lg-6\" [formGroup]=\"searchGroup\">\r\n          <input type=\"text\" class=\"form-control\" name=\"searchText\" placeholder=\"{{ 'COMMON.SEARCH' | translate }}\" value=\"\" (input)=\"dt.filterGlobal($event.target.value, 'contains')\"\r\n            formControlName=\"searchTerm\" /><small class=\"form-text text-muted\"><b>{{ 'COMMON.SEARCH' | translate }}</b> </small>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <!-- end: Filtration form -->\r\n\r\n    <!-- begin:Table -->\r\n    <p-table #dt [value]=\"models\" [(selection)]=\"selectedModels\" dataKey=\"id\" styleClass=\"p-datatable-striped p-datatable-sm\" [rowHover]=\"true\"\r\n    [rows]=\"per_page\" [showCurrentPageReport]=\"true\" [rowsPerPageOptions]=\"[5,10,25,50,100]\"\r\n    [paginator]=\"true\" currentPageReportTemplate=\"{{ 'COMMON.SHOWING' | translate }} {{ 'COMMON.FROM' | translate }} {first} {{ 'COMMON.TO' | translate }} {last} {{ 'COMMON.OF' | translate }} {totalRecords} {{ 'COMMON.RECORDS' | translate }}\"\r\n    [filterDelay]=\"1000\" [globalFilterFields]=\"['id','username']\" [lazy]=\"true\" (onLazyLoad)=\"loadLazy($event)\"\r\n    [totalRecords]=\"totalRecords\" [showJumpToPageDropdown]=\"false\" [minBufferPx]=\"1\" [showLoader]=\"true\" [loading]=\"requesting\">\r\n      <ng-template pTemplate=\"header\">\r\n        <tr>\r\n          <th style=\"width: 3rem\" *ngIf=\"showTableCheckbox\">\r\n            <p-tableHeaderCheckbox></p-tableHeaderCheckbox>\r\n          </th>\r\n          <th pSortableColumn=\"name\">\r\n            <div class=\"p-d-flex p-jc-between p-ai-center\">\r\n              {{ 'USER.ID' | translate }}\r\n              <!-- <p-sortIcon field=\"name\"></p-sortIcon>\r\n              <p-columnFilter type=\"text\" field=\"name\" display=\"menu\" class=\"p-ml-auto\"></p-columnFilter> -->\r\n            </div>\r\n          </th>\r\n          <th pSortableColumn=\"username\">\r\n            <div class=\"p-d-flex p-jc-between p-ai-center\">\r\n              {{ 'USER.USERNAME' | translate }} \r\n              <!-- <p-sortIcon field=\"username\"></p-sortIcon>\r\n              <p-columnFilter field=\"username\" matchMode=\"in\" display=\"menu\" [showMatchModes]=\"false\" [showOperator]=\"false\" [showAddButton]=\"false\" class=\"p-ml-auto\">\r\n                  <ng-template pTemplate=\"header\">\r\n                      <div class=\"p-px-3 p-pt-3 p-pb-0\">\r\n                          <span class=\"p-text-bold\">User Picker</span>\r\n                      </div>\r\n                  </ng-template>\r\n              </p-columnFilter> -->\r\n            </div>\r\n          </th>\r\n          <th pSortableColumn=\"email\">\r\n            <div class=\"p-d-flex p-jc-between p-ai-center\">\r\n              {{ 'USER.EMAIL' | translate }} \r\n              <!-- <p-sortIcon field=\"email\"></p-sortIcon>\r\n              <p-columnFilter field=\"email\" matchMode=\"in\" display=\"menu\" [showMatchModes]=\"false\" [showOperator]=\"false\" [showAddButton]=\"false\" class=\"p-ml-auto\">\r\n                  <ng-template pTemplate=\"header\">\r\n                      <div class=\"p-px-3 p-pt-3 p-pb-0\">\r\n                          <span class=\"p-text-bold\">User Picker</span>\r\n                      </div>\r\n                  </ng-template>\r\n              </p-columnFilter> -->\r\n            </div>\r\n          </th>\r\n          <th pSortableColumn=\"date\">\r\n            <div class=\"p-d-flex p-jc-between p-ai-center\">\r\n              {{ 'USER.DATE_JOINED' | translate }}\r\n              <!-- <p-sortIcon field=\"date_joined\"></p-sortIcon>\r\n              <p-columnFilter type=\"date_joined\" field=\"date_joined\" display=\"menu\" class=\"p-ml-auto\"></p-columnFilter> -->\r\n            </div>\r\n          </th>\r\n          <!-- <th pSortableColumn=\"balance\">\r\n            <div class=\"p-d-flex p-jc-between p-ai-center\">\r\n              Balance\r\n              <p-sortIcon field=\"balance\"></p-sortIcon>\r\n              <p-columnFilter type=\"numeric\" field=\"balance\" display=\"menu\" currency=\"USD\" class=\"p-ml-auto\"></p-columnFilter>\r\n            </div>\r\n          </th> -->\r\n          <th pSortableColumn=\"status\">\r\n            <div class=\"p-d-flex p-jc-between p-ai-center\">\r\n              {{ 'USER.STATUS' | translate }}\r\n              <!-- <p-sortIcon field=\"status\"></p-sortIcon>\r\n              <p-columnFilter field=\"status\" matchMode=\"equals\" display=\"menu\" class=\"p-ml-auto\">\r\n                <ng-template pTemplate=\"filter\" let-value let-filter=\"filterCallback\">\r\n                  <p-dropdown [ngModel]=\"value\" [options]=\"statuses\" (onChange)=\"filter($event.value)\" placeholder=\"Any\">\r\n                    <ng-template let-option pTemplate=\"item\">\r\n                      <span [class]=\"'customer-badge status-' + option.value\">{{option.label}}</span>\r\n                    </ng-template>\r\n                  </p-dropdown>\r\n                </ng-template>\r\n              </p-columnFilter> -->\r\n            </div>\r\n          </th>\r\n          <!-- <th pSortableColumn=\"activity\">\r\n            <div class=\"p-d-flex p-jc-between p-ai-center\">\r\n              Activity\r\n              <p-sortIcon field=\"activity\"></p-sortIcon>\r\n              <p-columnFilter field=\"activity\" matchMode=\"between\" display=\"menu\" [showMatchModes]=\"false\" [showOperator]=\"false\" [showAddButton]=\"false\" class=\"p-ml-auto\">\r\n                <ng-template pTemplate=\"filter\" let-filter=\"filterCallback\">\r\n                  <p-slider [ngModel]=\"activityValues\" [range]=\"true\" (onSlideEnd)=\"filter($event.values)\" styleClass=\"p-m-3\"></p-slider>\r\n                  <div class=\"p-d-flex p-ai-center p-jc-between p-px-2\">\r\n                    <span>{{activityValues[0]}}</span>\r\n                    <span>{{activityValues[1]}}</span>\r\n                  </div>\r\n                </ng-template>\r\n              </p-columnFilter>\r\n            </div>\r\n          </th> -->\r\n          <th style=\"width: 10rem\">\r\n            <div class=\"p-d-flex p-jc-between p-ai-center\">\r\n              {{ 'COMMON.ACTION' | translate }}\r\n              <!-- <p-sortIcon field=\"date_joined\"></p-sortIcon>\r\n              <p-columnFilter type=\"date_joined\" field=\"date_joined\" display=\"menu\" class=\"p-ml-auto\"></p-columnFilter> -->\r\n            </div>\r\n          </th>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"body\" let-value>\r\n        <tr class=\"p-selectable-row\">\r\n          <td *ngIf=\"showTableCheckbox\">\r\n            <p-tableCheckbox [value]=\"value\"></p-tableCheckbox>\r\n          </td>\r\n          <td>\r\n            {{value.id}}\r\n          </td>\r\n          <td>\r\n            <img [alt]=\"'avatar'\" src=\"{{value.userprofile ? value.userprofile.avatar : './assets/media/svg/avatars/001-boy.svg'}}\" width=\"32\" style=\"vertical-align: middle\" />\r\n            <span class=\"image-text\">{{value.username}}</span>\r\n          </td>\r\n          <td>\r\n            <span class=\"image-text\">{{value.email}}</span>\r\n          </td>\r\n          <td>\r\n              {{value.date_joined | date: 'MM/dd/yyyy'}}\r\n          </td>\r\n          <!-- <td>\r\n              {{value.balance | currency:'USD':'symbol'}}\r\n          </td> -->\r\n          <td>\r\n              <span [class]=\"'value-badge status-' + value.is_active\">{{value.is_active}}</span>\r\n          </td>\r\n          <!-- <td>\r\n            <span class=\"p-column-title\">Activity</span>\r\n            <p-progressBar [value]=\"value.activity\" [showValue]=\"false\"></p-progressBar>\r\n          </td> -->\r\n          <td style=\"text-align: right\">\r\n            <a title=\"{{ 'COMMON.EDIT' | translate }}\" class=\"btn btn-icon btn-light btn-hover-primary btn-sm\" style=\"margin-right: 5px;\"\r\n              [routerLink]=\"'/users/edit/' + value.id\" *ngIf=\"authService.hasPermission('add_user')\">\r\n              <span [inlineSVG]=\"'./assets/media/svg/icons/Communication/Write.svg'\" cacheSVG=\"true\"\r\n                class=\"svg-icon svg-icon-md svg-icon-primary\">\r\n              </span>\r\n            </a>\r\n            <a title=\"{{ 'COMMON.DELETE' | translate }}\" class=\"btn btn-icon btn-light btn-hover-danger btn-sm\"\r\n              (click)=\"confirm(value.id, 'right')\" *ngIf=\"authService.hasPermission('change_user')\">\r\n              <span [inlineSVG]=\"'./assets/media/svg/icons/General/Trash.svg'\" cacheSVG=\"true\"\r\n                class=\"svg-icon svg-icon-md svg-icon-danger\">\r\n              </span>\r\n            </a>\r\n          </td>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"emptymessage\">\r\n        <tr>\r\n          <td colspan=\"7\">{{ 'COMMON.NO_ITEMS_FOUND' | translate }}</td>\r\n        </tr>\r\n      </ng-template>\r\n    </p-table>\r\n    <!-- end: Table -->\r\n  </div>\r\n</div>\r\n\r\n<p-confirmDialog header=\"{{ 'COMMON.CONFIRMATION' | translate }}\" icon=\"pi pi-exclamation-triangle\" [position]=\"confirmDialogPosition\"></p-confirmDialog>","import { Component, OnInit } from '@angular/core';\r\nimport { PermissionService as ModelService } from '../_services/permission.service';\r\nimport { PermissionModel as Model } from '../_models/permission.model';\r\nimport { FormGroup, AbstractControl, FormBuilder, Validators, FormControl } from '@angular/forms';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { Observable } from 'rxjs';\r\nimport { LazyLoadEvent } from 'primeng/api';\r\nimport { ConfirmationService } from 'primeng/api';\r\nimport { debounceTime, distinctUntilChanged } from 'rxjs/operators';\r\nimport { ToastService } from 'src/app/modules/toast/_services/toast.service';\r\nimport { AuthService } from 'src/app/modules/auth';\r\n@Component({\r\n    selector: 'app-permissions',\r\n    templateUrl: './permissions.component.html',\r\n    styleUrls: ['./permissions.component.scss']\r\n})\r\nexport class PermissionsComponent implements OnInit {\r\n\r\n    public promiseForm: Promise<any>;\r\n\r\n    public models: Model[];\r\n    public selectedModels: Model[];\r\n\r\n    public page: number;\r\n    public total_page: number;\r\n    public per_page: number;\r\n    public totalRecords: number;\r\n\r\n    public sort: string;\r\n    public query: string;\r\n    public filters: { key: string, value: string }[];\r\n    public _with: { key: string, value: string }[];\r\n\r\n    searchGroup: FormGroup;\r\n\r\n    public requesting: boolean = false;\r\n\r\n    public confirmDialogPosition: string;\r\n    public message_confirm_delete: string;\r\n\r\n    public showTableCheckbox: boolean;\r\n\r\n    constructor(\r\n        public modelsService: ModelService,\r\n        public translate: TranslateService,\r\n        private confirmationService: ConfirmationService,\r\n        private toastService: ToastService,\r\n        public authService: AuthService,\r\n        fb: FormBuilder) {\r\n\r\n        this.searchGroup = fb.group({\r\n            searchTerm: [''],\r\n        });\r\n\r\n        this.translate.get('COMMON.MESSAGE_CONFIRM_DELETE').subscribe((res: string) => {\r\n            this.message_confirm_delete = res;\r\n        });\r\n\r\n        this.showTableCheckbox = false;\r\n\r\n        this.page = 1;\r\n        this.total_page = 0;\r\n        this.per_page = 100\r\n        this.totalRecords = 0;\r\n\r\n        this.requesting = false;\r\n\r\n        this.confirmDialogPosition = 'right';\r\n\r\n        this.models = [];\r\n        this.selectedModels = [];\r\n        this.getModels();\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.requesting = false;\r\n\r\n        this._with = [];\r\n        this._with.push({key: 'include[]', value: 'content_type.*'})\r\n    }\r\n\r\n    public loadLazy(event?: LazyLoadEvent) {\r\n        if (event && event.first) {\r\n            this.page = (event.first / this.per_page) + 1;\r\n        }\r\n\r\n        if (event && event.sortField) {\r\n            if (event.sortOrder === -1) {\r\n                this.sort = '-' + event.sortField;\r\n            } else {\r\n                this.sort = event.sortField;\r\n            }\r\n        } else {\r\n            this.sort = '-id';\r\n        }\r\n\r\n        if (event && event.globalFilter) {\r\n            this.query = event.globalFilter;\r\n        } else {\r\n            this.query = undefined;\r\n        }\r\n\r\n        if (event && event.rows) {\r\n            this.per_page = event.rows;\r\n        }\r\n\r\n\r\n        this.getModels();\r\n    }\r\n\r\n    public getModels() {\r\n        this.requesting = true;\r\n        setTimeout(() => {\r\n        this.modelsService.get(this.page, this.per_page, this.sort, this.query, this.filters, this._with).subscribe(\r\n            response => {\r\n                this.requesting = false;\r\n                this.models = [];\r\n                response.permissions.forEach(element => {\r\n                    this.models.push(element);\r\n                });\r\n                if(response.content_types){\r\n                    response.content_types.forEach(content_type => {\r\n                        this.models.forEach(element => {\r\n                            if (element.content_type === content_type.id) {\r\n                                element.content_type = content_type;\r\n                            }\r\n                        });\r\n                    });\r\n                }\r\n                this.totalRecords = response.meta.total_results;\r\n            },\r\n            error => {\r\n                this.requesting = false;\r\n                if (error.status == 404) {\r\n                    this.toastService.growl('error', 'Not Found')\r\n                } else {\r\n                    let messageError = [];\r\n                    if (!Array.isArray(error.error)) {\r\n                        messageError.push(error.error);\r\n                    } else {\r\n                        messageError = error.error;\r\n                    }\r\n                    Object.entries(messageError).forEach(\r\n                        ([key, value]) => this.toastService.growl('error', key + ': ' + value)\r\n                    );\r\n                }\r\n            }\r\n        );\r\n        }, 5)\r\n    }\r\n\r\n    public delete(id) {\r\n        this.modelsService.delete(id).toPromise().then(\r\n            response => {\r\n                this.toastService.growl('success', 'Delete');\r\n                this.getModels();\r\n            },\r\n            error => {\r\n                if (error.status == 404) {\r\n                    this.toastService.growl('error', 'Not Found')\r\n                } else {\r\n                    let messageError = [];\r\n                    if (!Array.isArray(error.error)) {\r\n                        messageError.push(error.error);\r\n                    } else {\r\n                        messageError = error.error;\r\n                    }\r\n                    Object.entries(messageError).forEach(\r\n                        ([key, value]) => this.toastService.growl('error', key + ': ' + value)\r\n                    );\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n    public patch(values: Model) {\r\n        const param = {\r\n            // 'activated': values.activated\r\n        };\r\n        if (values) {\r\n            const promise = this.modelsService.patch(values.id, param);\r\n            this.promiseForm = promise.toPromise().then(\r\n                response => {\r\n                    this.toastService.growl('success', 'Patch');\r\n                },\r\n                error => {\r\n                    if (error.status == 404) {\r\n                        this.toastService.growl('error', 'Not Found')\r\n                    } else {\r\n                        let messageError = [];\r\n                        if (!Array.isArray(error.error)) {\r\n                            messageError.push(error.error);\r\n                        } else {\r\n                            messageError = error.error;\r\n                        }\r\n                        Object.entries(messageError).forEach(\r\n                            ([key, value]) => this.toastService.growl('error', key + ': ' + value)\r\n                        );\r\n                    }\r\n                }\r\n            );\r\n        }\r\n    }\r\n\r\n    confirm(id, permission: string) {\r\n        this.confirmDialogPosition = permission;\r\n        this.confirmationService.confirm({\r\n            message: 'Are you sure that you want to delete?',\r\n            accept: () => {\r\n                this.delete(id);\r\n            }\r\n        });\r\n    }\r\n}\r\n","<div class=\"card card-custom gutter-b\">\r\n  <div class=\"card-header\">\r\n    <div class=\"card-title\">\r\n      <h3 class=\"card-label\">{{ 'COMMON.LIST' | translate }}</h3>{{ 'PERMISSION.PERMISSIONS' | translate }}\r\n    </div>\r\n    <div class=\"card-toolbar\">\r\n      <a type=\"button\" class=\"btn btn-primary\" routerLink=\"/permissions/add\">{{ 'COMMON.NEW' | translate }}</a>\r\n    </div>\r\n  </div>\r\n  <div class=\"card-body\">\r\n    <!-- begin: Filtration form -->\r\n    <div class=\"form form-label-right\">\r\n      <div class=\"form-group row\">\r\n        <div class=\"col-lg-6\">\r\n          {{ 'COMMON.FILTER' | translate }}\r\n        </div>\r\n        <div class=\"col-lg-6\" [formGroup]=\"searchGroup\">\r\n          <input type=\"text\" class=\"form-control\" name=\"searchText\" placeholder=\"{{ 'COMMON.SEARCH' | translate }}\" value=\"\" (input)=\"dt.filterGlobal($event.target.value, 'contains')\"\r\n            formControlName=\"searchTerm\" /><small class=\"form-text text-muted\"><b>{{ 'COMMON.SEARCH' | translate }}</b> </small>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <!-- end: Filtration form -->\r\n\r\n    <!-- begin:Table -->\r\n    <p-table #dt [value]=\"models\" [(selection)]=\"selectedModels\" dataKey=\"id\" styleClass=\"p-datatable-striped p-datatable-sm\" [rowHover]=\"true\"\r\n    [rows]=\"per_page\" [showCurrentPageReport]=\"true\" [rowsPerPageOptions]=\"[5,10,25,50,100]\"\r\n    [paginator]=\"true\" currentPageReportTemplate=\"{{ 'COMMON.SHOWING' | translate }} {{ 'COMMON.FROM' | translate }} {first} {{ 'COMMON.TO' | translate }} {last} {{ 'COMMON.OF' | translate }} {totalRecords} {{ 'COMMON.RECORDS' | translate }}\"\r\n    [filterDelay]=\"1000\" [globalFilterFields]=\"['id','username']\" [lazy]=\"true\" (onLazyLoad)=\"loadLazy($event)\"\r\n    [totalRecords]=\"totalRecords\" [showJumpToPageDropdown]=\"false\" [minBufferPx]=\"1\" [showLoader]=\"true\" [loading]=\"requesting\">\r\n      <ng-template pTemplate=\"header\">\r\n        <tr>\r\n          <th style=\"width: 3rem\" *ngIf=\"showTableCheckbox\">\r\n            <p-tableHeaderCheckbox></p-tableHeaderCheckbox>\r\n          </th>\r\n          <th pSortableColumn=\"id\">\r\n            <div class=\"p-d-flex p-jc-between p-ai-center\">\r\n              {{ 'PERMISSION.ID' | translate }}\r\n            </div>\r\n          </th>\r\n          <th pSortableColumn=\"name\">\r\n            <div class=\"p-d-flex p-jc-between p-ai-center\">\r\n              {{ 'PERMISSION.NAME' | translate }} \r\n            </div>\r\n          </th>\r\n          <th pSortableColumn=\"content_type\">\r\n            <div class=\"p-d-flex p-jc-between p-ai-center\">\r\n              {{ 'PERMISSION.CONTENT_TYPE' | translate }}\r\n            </div>\r\n          </th>\r\n          <th pSortableColumn=\"codename\">\r\n            <div class=\"p-d-flex p-jc-between p-ai-center\">\r\n              {{ 'PERMISSION.CODENAME' | translate }}\r\n            </div>\r\n          </th>\r\n          <th style=\"width: 10rem\">\r\n            <div class=\"p-d-flex p-jc-between p-ai-center\">\r\n              {{ 'COMMON.ACTION' | translate }}\r\n              <!-- <p-sortIcon field=\"date_joined\"></p-sortIcon>\r\n              <p-columnFilter type=\"date_joined\" field=\"date_joined\" display=\"menu\" class=\"p-ml-auto\"></p-columnFilter> -->\r\n            </div>\r\n          </th>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"body\" let-value>\r\n        <tr class=\"p-selectable-row\">\r\n          <td *ngIf=\"showTableCheckbox\">\r\n            <p-tableCheckbox [value]=\"value\"></p-tableCheckbox>\r\n          </td>\r\n          <td>\r\n            {{value.id}}\r\n          </td>\r\n          <td>\r\n            {{value.name}}\r\n          </td>\r\n          <td>\r\n            {{value.content_type?.model}}\r\n          </td>\r\n          <td>\r\n            {{value.codename}}\r\n          </td>\r\n          <td style=\"text-align: right\">\r\n            <a title=\"{{ 'COMMON.EDIT' | translate }}\" class=\"btn btn-icon btn-light btn-hover-primary btn-sm\" style=\"margin-right: 5px;\"\r\n              [routerLink]=\"'/permissions/edit/' + value.id\"  *ngIf=\"authService.hasPermission('add_permission')\">\r\n              <span [inlineSVG]=\"'./assets/media/svg/icons/Communication/Write.svg'\" cacheSVG=\"true\"\r\n                class=\"svg-icon svg-icon-md svg-icon-primary\">\r\n              </span>\r\n            </a>\r\n            <a title=\"{{ 'COMMON.DELETE' | translate }}\" class=\"btn btn-icon btn-light btn-hover-danger btn-sm\"\r\n              (click)=\"confirm(value.id, 'right')\" *ngIf=\"authService.hasPermission('change_permission')\">\r\n              <span [inlineSVG]=\"'./assets/media/svg/icons/General/Trash.svg'\" cacheSVG=\"true\"\r\n                class=\"svg-icon svg-icon-md svg-icon-danger\">\r\n              </span>\r\n            </a>\r\n          </td>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"emptymessage\">\r\n        <tr>\r\n          <td colspan=\"6\">{{ 'COMMON.NO_ITEMS_FOUND' | translate }}</td>\r\n        </tr>\r\n      </ng-template>\r\n    </p-table>\r\n    <!-- end: Table -->\r\n  </div>\r\n</div>\r\n\r\n<p-confirmDialog header=\"{{ 'COMMON.CONFIRMATION' | translate }}\" icon=\"pi pi-exclamation-triangle\" [position]=\"confirmDialogPosition\"></p-confirmDialog>","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\r\nimport { SplashScreenService } from './splash-screen.service';\r\n\r\n@Component({\r\n  selector: 'app-splash-screen',\r\n  templateUrl: './splash-screen.component.html',\r\n  styleUrls: ['./splash-screen.component.scss'],\r\n})\r\nexport class SplashScreenComponent implements OnInit {\r\n  @ViewChild('splashScreen', { static: true }) splashScreen: ElementRef;\r\n\r\n  constructor(\r\n    private el: ElementRef,\r\n    private splashScreenService: SplashScreenService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.splashScreenService.init(this.splashScreen);\r\n  }\r\n}\r\n","<!-- splash screen -->\r\n<div #splashScreen id=\"splash-screen\">\r\n  <img src=\"./assets/media/logos/logo-dark.png\" alt=\"Logo\" />\r\n  <svg class=\"splash-spinner\" viewBox=\"0 0 50 50\">\r\n    <circle\r\n      class=\"path\"\r\n      cx=\"25\"\r\n      cy=\"25\"\r\n      r=\"20\"\r\n      fill=\"none\"\r\n      stroke-width=\"5\"\r\n    ></circle>\r\n  </svg>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-room',\r\n  templateUrl: './room.component.html',\r\n})\r\nexport class RoomComponent implements OnInit {\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n}\r\n","<router-outlet></router-outlet>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-user',\r\n  templateUrl: './user.component.html',\r\n})\r\nexport class UserComponent implements OnInit {\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n}\r\n","<router-outlet></router-outlet>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-folder',\r\n  templateUrl: './folder.component.html',\r\n})\r\nexport class FolderComponent implements OnInit {\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n}\r\n","<router-outlet></router-outlet>\r\n","import { UserModel } from \"../../user/_models/user.model\";\r\n\r\nexport class EvidenceModel {\r\n  id: number;\r\n  re_expiration_date: string;\r\n  active: string;\r\n  qualification: string;\r\n  observation: string;\r\n  evidence_link: string;\r\n  evidence_file: string;\r\n  folder: any;\r\n  functionary: any;\r\n  teacher: any;\r\n}\r\n","import { UserModel } from \"../../user/_models/user.model\";\r\n\r\nexport class PermissionModel {\r\n  id: number;\r\n  name: string;\r\n  codename: string;\r\n  content_type: any;\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FunctionaryService as ModelService } from '../_services/functionary.service';\r\nimport { FunctionaryModel as Model } from '../_models/functionary.model';\r\nimport { FormGroup, AbstractControl, FormBuilder, Validators, FormControl } from '@angular/forms';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { Observable } from 'rxjs';\r\nimport { LazyLoadEvent } from 'primeng/api';\r\nimport { ConfirmationService } from 'primeng/api';\r\nimport { debounceTime, distinctUntilChanged } from 'rxjs/operators';\r\nimport { ToastService } from 'src/app/modules/toast/_services/toast.service';\r\nimport { AuthService } from 'src/app/modules/auth';\r\n@Component({\r\n    selector: 'app-functionarys',\r\n    templateUrl: './functionarys.component.html',\r\n    styleUrls: ['./functionarys.component.scss']\r\n})\r\nexport class FunctionarysComponent implements OnInit {\r\n\r\n    public promiseForm: Promise<any>;\r\n\r\n    public models: Model[];\r\n    public selectedModels: Model[];\r\n\r\n    public page: number;\r\n    public total_page: number;\r\n    public per_page: number;\r\n    public totalRecords: number;\r\n\r\n    public sort: string;\r\n    public query: string;\r\n    public filters: { key: string, value: string }[];\r\n    public _with: { key: string, value: string }[];\r\n\r\n    public formGroup: FormGroup;\r\n    public functionary_id_filter: AbstractControl;\r\n    public department_id_filter: AbstractControl;\r\n    public venue_id_filter: AbstractControl;\r\n\r\n    searchGroup: FormGroup;\r\n\r\n    public requesting: boolean;\r\n\r\n    public confirmDialogPosition: string;\r\n    public message_confirm_delete: string;\r\n\r\n    public showTableCheckbox: boolean;\r\n\r\n    constructor(\r\n        public modelsService: ModelService,\r\n        public translate: TranslateService,\r\n        private confirmationService: ConfirmationService,\r\n        private toastService: ToastService,\r\n        public authService: AuthService,\r\n        fb: FormBuilder) {\r\n        this.formGroup = fb.group({\r\n            'functionary_id_filter': [''],\r\n            'department_id_filter': [''],\r\n            'venue_id_filter': [''],\r\n        });\r\n        this.functionary_id_filter = this.formGroup.controls['functionary_id_filter'];\r\n        this.department_id_filter = this.formGroup.controls['department_id_filter'];\r\n        this.venue_id_filter = this.formGroup.controls['venue_id_filter'];\r\n\r\n        this.searchGroup = fb.group({\r\n            searchTerm: [''],\r\n        });\r\n\r\n        this.translate.get('COMMON.MESSAGE_CONFIRM_DELETE').subscribe((res: string) => {\r\n            this.message_confirm_delete = res;\r\n        });\r\n\r\n        this.showTableCheckbox = false;\r\n\r\n        this.page = 1;\r\n        this.total_page = 0;\r\n        this.per_page = 100\r\n        this.totalRecords = 0;\r\n\r\n        this.requesting = false;\r\n\r\n        this.confirmDialogPosition = 'right';\r\n\r\n        this.models = [];\r\n        this.selectedModels = [];\r\n        // this.getModels();\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.requesting = false;\r\n    }\r\n\r\n    public loadLazy(event: LazyLoadEvent) {\r\n        this.page = (event.first / this.per_page) + 1;\r\n        if (event.sortField) {\r\n            if (event.sortOrder === -1) {\r\n                this.sort = '-' + event.sortField;\r\n            } else {\r\n                this.sort = event.sortField;\r\n            }\r\n        } else {\r\n            this.sort = '-id';\r\n        }\r\n\r\n        if (event.globalFilter) {\r\n            this.query = event.globalFilter;\r\n        } else {\r\n            this.query = undefined;\r\n        }\r\n\r\n        if (event.rows) {\r\n            this.per_page = event.rows;\r\n        }\r\n\r\n\r\n        this.getModels();\r\n    }\r\n\r\n    public getModels() {\r\n        this.requesting = true;\r\n        this.modelsService.get(this.page, this.per_page, this.sort, this.query, this.filters, this._with).toPromise().then(\r\n            response => {\r\n                this.requesting = false;\r\n                this.models = response.functionaries;\r\n                this.totalRecords = response.meta.total_results;\r\n            },\r\n            error => {\r\n                this.requesting = false;\r\n                if (error.status == 404) {\r\n                    this.toastService.growl('error', 'Not Found')\r\n                } else {\r\n                    let messageError = [];\r\n                    if (!Array.isArray(error.error)) {\r\n                        messageError.push(error.error);\r\n                    } else {\r\n                        messageError = error.error;\r\n                    }\r\n                    Object.entries(messageError).forEach(\r\n                        ([key, value]) => this.toastService.growl('error', key + ': ' + value)\r\n                    );\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n    // public showDeleteDialog(user: Model) {\r\n    //     let message;\r\n    //     this.translate.get('Do you want to delete?').subscribe((res: string) => {\r\n    //         message = res;\r\n    //     });\r\n\r\n    //     let header;\r\n    //     this.translate.get('Delete Confirmation').subscribe((res: string) => {\r\n    //         header = res;\r\n    //     });\r\n\r\n    //     this.confirmationService.confirm({\r\n    //         message: message,\r\n    //         header: header,\r\n    //         icon: 'fa fa-trash',\r\n    //         accept: () => {\r\n    //             this.delete(user);\r\n    //         }\r\n    //     });\r\n    // }\r\n\r\n    public delete(id) {\r\n        this.modelsService.delete(id).toPromise().then(\r\n            response => {\r\n                this.toastService.growl('success', 'Delete');\r\n                this.getModels();\r\n            },\r\n            error => {\r\n                if (error.status == 404) {\r\n                    this.toastService.growl('error', 'Not Found')\r\n                } else {\r\n                    let messageError = [];\r\n                    if (!Array.isArray(error.error)) {\r\n                        messageError.push(error.error);\r\n                    } else {\r\n                        messageError = error.error;\r\n                    }\r\n                    Object.entries(messageError).forEach(\r\n                        ([key, value]) => this.toastService.growl('error', key + ': ' + value)\r\n                    );\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n    public patch(values: Model) {\r\n        const param = {\r\n            // 'activated': values.activated\r\n        };\r\n        if (values) {\r\n            const promise = this.modelsService.patch(values.id, param);\r\n            this.promiseForm = promise.toPromise().then(\r\n                response => {\r\n                    this.toastService.growl('success', 'Patch');\r\n                },\r\n                error => {\r\n                    if (error.status == 404) {\r\n                        this.toastService.growl('error', 'Not Found')\r\n                    } else {\r\n                        let messageError = [];\r\n                        if (!Array.isArray(error.error)) {\r\n                            messageError.push(error.error);\r\n                        } else {\r\n                            messageError = error.error;\r\n                        }\r\n                        Object.entries(messageError).forEach(\r\n                            ([key, value]) => this.toastService.growl('error', key + ': ' + value)\r\n                        );\r\n                    }\r\n                }\r\n            );\r\n        }\r\n    }\r\n\r\n    confirm(id, functionary: string) {\r\n        this.confirmDialogPosition = functionary;\r\n        this.confirmationService.confirm({\r\n            message: 'Are you sure that you want to delete?',\r\n            accept: () => {\r\n                this.delete(id);\r\n            }\r\n        });\r\n    }\r\n}\r\n","<div class=\"card card-custom gutter-b\">\r\n  <div class=\"card-header\">\r\n    <div class=\"card-title\">\r\n      <h3 class=\"card-label\">{{ 'COMMON.LIST' | translate }}</h3>\r\n    </div>\r\n    <div class=\"card-toolbar\">\r\n      <a type=\"button\" class=\"btn btn-primary\" routerLink=\"/functionarys/add\">{{ 'COMMON.NEW' | translate }}</a>\r\n    </div>\r\n  </div>\r\n  <div class=\"card-body\">\r\n    <!-- begin: Filtration form -->\r\n    <div class=\"form form-label-right\">\r\n      <div class=\"form-group row\">\r\n        <div class=\"col-lg-6\">\r\n          {{ 'COMMON.FILTER' | translate }}\r\n        </div>\r\n        <div class=\"col-lg-6\" [formGroup]=\"searchGroup\">\r\n          <input type=\"text\" class=\"form-control\" name=\"searchText\" placeholder=\"{{ 'COMMON.SEARCH' | translate }}\" value=\"\" (input)=\"dt.filterGlobal($event.target.value, 'contains')\"\r\n            formControlName=\"searchTerm\" /><small class=\"form-text text-muted\"><b>{{ 'COMMON.SEARCH' | translate }}</b> {{ 'COMMON.IN' | translate }} id</small>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <!-- end: Filtration form -->\r\n\r\n    <!-- begin:Table -->\r\n    <p-table #dt [value]=\"models\" [(selection)]=\"selectedModels\" dataKey=\"id\" styleClass=\"p-datatable-striped p-datatable-sm\" [rowHover]=\"true\"\r\n    [rows]=\"per_page\" [showCurrentPageReport]=\"true\" [rowsPerPageOptions]=\"[5,10,25,50,100]\"\r\n    [paginator]=\"true\" currentPageReportTemplate=\"{{ 'COMMON.SHOWING' | translate }} {{ 'COMMON.FROM' | translate }} {first} {{ 'COMMON.TO' | translate }} {last} {{ 'COMMON.OF' | translate }} {totalRecords} {{ 'COMMON.RECORDS' | translate }}\"\r\n    [filterDelay]=\"1000\" [globalFilterFields]=\"['id','username']\" [lazy]=\"true\" (onLazyLoad)=\"loadLazy($event)\"\r\n    [totalRecords]=\"totalRecords\" [showJumpToPageDropdown]=\"false\" [minBufferPx]=\"1\" [showLoader]=\"true\" [loading]=\"requesting\">\r\n      <ng-template pTemplate=\"header\">\r\n        <tr>\r\n          <th style=\"width: 3rem\" *ngIf=\"showTableCheckbox\">\r\n            <p-tableHeaderCheckbox></p-tableHeaderCheckbox>\r\n          </th>\r\n          <th pSortableColumn=\"id\">\r\n            <div class=\"p-d-flex p-jc-between p-ai-center\">\r\n              {{ 'FUNCTIONARY.ID' | translate }}\r\n            </div>\r\n          </th>\r\n          <th pSortableColumn=\"name\">\r\n            <div class=\"p-d-flex p-jc-between p-ai-center\">\r\n              {{ 'FUNCTIONARY.NAME' | translate }} \r\n            </div>\r\n          </th>\r\n          <th pSortableColumn=\"profession\">\r\n            <div class=\"p-d-flex p-jc-between p-ai-center\">\r\n              {{ 'FUNCTIONARY.PROFESSION' | translate }}\r\n            </div>\r\n          </th>\r\n          <th pSortableColumn=\"created_at\">\r\n            <div class=\"p-d-flex p-jc-between p-ai-center\">\r\n              {{ 'COMMON.CREATED_AT' | translate }}\r\n              <!-- <p-sortIcon field=\"date_joined\"></p-sortIcon>\r\n              <p-columnFilter type=\"date_joined\" field=\"date_joined\" display=\"menu\" class=\"p-ml-auto\"></p-columnFilter> -->\r\n            </div>\r\n          </th>\r\n          <th style=\"width: 10rem\">\r\n            <div class=\"p-d-flex p-jc-between p-ai-center\">\r\n              {{ 'COMMON.ACTION' | translate }}\r\n              <!-- <p-sortIcon field=\"date_joined\"></p-sortIcon>\r\n              <p-columnFilter type=\"date_joined\" field=\"date_joined\" display=\"menu\" class=\"p-ml-auto\"></p-columnFilter> -->\r\n            </div>\r\n          </th>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"body\" let-value>\r\n        <tr class=\"p-selectable-row\">\r\n          <td *ngIf=\"showTableCheckbox\">\r\n            <p-tableCheckbox [value]=\"value\"></p-tableCheckbox>\r\n          </td>\r\n          <td>\r\n            {{value.id}}\r\n          </td>\r\n          <td>\r\n            {{value.name}}\r\n          </td>\r\n          <td>\r\n            {{value.profession}}\r\n          </td>\r\n          <td>\r\n            {{value.created_at | date: 'MM/dd/yyyy'}}\r\n          </td>\r\n          <td style=\"text-align: right\">\r\n            <a title=\"{{ 'COMMON.EDIT' | translate }}\" class=\"btn btn-icon btn-light btn-hover-primary btn-sm\" style=\"margin-right: 5px;\"\r\n              [routerLink]=\"'/functionarys/edit/' + value.id\"  *ngIf=\"authService.hasPermission('add_functionary')\">\r\n              <span [inlineSVG]=\"'./assets/media/svg/icons/Communication/Write.svg'\" cacheSVG=\"true\"\r\n                class=\"svg-icon svg-icon-md svg-icon-primary\">\r\n              </span>\r\n            </a>\r\n            <a title=\"{{ 'COMMON.DELETE' | translate }}\" class=\"btn btn-icon btn-light btn-hover-danger btn-sm\"\r\n              (click)=\"confirm(value.id, 'right')\" *ngIf=\"authService.hasPermission('change_functionary')\">\r\n              <span [inlineSVG]=\"'./assets/media/svg/icons/General/Trash.svg'\" cacheSVG=\"true\"\r\n                class=\"svg-icon svg-icon-md svg-icon-danger\">\r\n              </span>\r\n            </a>\r\n          </td>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"emptymessage\">\r\n        <tr>\r\n          <td colspan=\"6\" class=\"text-center\">{{ 'COMMON.NO_ITEMS_FOUND' | translate }}</td>\r\n        </tr>\r\n      </ng-template>\r\n    </p-table>\r\n    <!-- end: Table -->\r\n  </div>\r\n</div>\r\n\r\n<p-confirmDialog header=\"{{ 'COMMON.CONFIRMATION' | translate }}\" icon=\"pi pi-exclamation-triangle\" [position]=\"confirmDialogPosition\"></p-confirmDialog>","import { Component, forwardRef, Renderer2, ViewChild, Input, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { GroupService as ModelsService } from '../../_services/group.service';\r\nimport { LazyLoadEvent } from 'primeng/api';\r\nimport { ToastService } from 'src/app/modules/toast/_services/toast.service';\r\nimport { AuthService } from 'src/app/modules/auth';\r\nexport const EPANDED_TEXTAREA_VALUE_ACCESSOR: any = {\r\n    provide: NG_VALUE_ACCESSOR,\r\n    useExisting: forwardRef(() => GroupMultiselectComponent),\r\n    multi: true,\r\n};\r\n\r\n@Component({\r\n    selector: 'app-group-multiselect',\r\n    templateUrl: './group-multiselect.component.html',\r\n    styleUrls: ['./group-multiselect.component.scss'],\r\n    providers: [EPANDED_TEXTAREA_VALUE_ACCESSOR],\r\n})\r\nexport class GroupMultiselectComponent implements ControlValueAccessor, OnInit {\r\n    @Input() model: any;\r\n    @Input() valid: boolean;\r\n    @Input() touched: boolean;\r\n    @Input() required: boolean;\r\n    @Input() disabled: boolean;\r\n    @Input() placeholder: string;\r\n    @Input() addFilters: { key: string, value: string }[];\r\n\r\n    public models: any[];\r\n\r\n    public onChange;\r\n    public onTouched;\r\n\r\n    public firstTime: boolean;\r\n    public totalRecords: number;\r\n    public page: number;\r\n    public per_page: number;\r\n    public sort: string;\r\n    public query: string;\r\n    public filters: { key: string, value: string }[];\r\n    public _with: { key: string, value: string }[];\r\n\r\n    public value: any;\r\n\r\n    constructor(\r\n        public modelsService: ModelsService,\r\n        public toastService: ToastService\r\n    ) {\r\n        this.page = 1;\r\n        this.per_page = 100;\r\n        this.firstTime = true;\r\n    }\r\n\r\n    public ngOnInit() {\r\n        if (!this.placeholder) {\r\n            this.placeholder = '';\r\n        }\r\n        this.getModels();\r\n    }\r\n\r\n    writeValue(value: any) {\r\n        // const div = this.textarea.nativeElement;\r\n        // this.renderer.setProperty(div, 'textContent', value);\r\n        this.value = value;\r\n    }\r\n\r\n    registerOnChange(fn: any) {\r\n        this.onChange = fn;\r\n    }\r\n\r\n    registerOnTouched(fn: any) {\r\n        this.onTouched = fn;\r\n    }\r\n\r\n    setDisabledState(isDisabled: boolean) {\r\n        this.disabled = isDisabled;\r\n    }\r\n\r\n    public change($event) {\r\n        this.getModels();\r\n        this.onChange(this.value);\r\n        this.onTouched(this.value);\r\n    }\r\n\r\n    public loadLazy(event?: LazyLoadEvent) {\r\n        if (event && event.sortField) {\r\n            if (event.sortOrder === -1) {\r\n                this.sort = '-' + event.sortField;\r\n            } else {\r\n                this.sort = event.sortField;\r\n            }\r\n        } else {\r\n            this.sort = '-id';\r\n        }\r\n\r\n        if (this.addFilters) {\r\n            this.addFilters.forEach(element => {\r\n                this.filters.push({ key: 'filter{' + element.key + '}', value: element.value })\r\n            });\r\n        }\r\n\r\n        if (event && event.globalFilter) {\r\n            this.query = event.globalFilter;\r\n        } else {\r\n            this.query = undefined;\r\n        }\r\n\r\n        if (event && event.rows) {\r\n            this.per_page = event.rows;\r\n        }\r\n\r\n\r\n        // if (!this.firstTime) {\r\n        this.getModels();\r\n        // }\r\n        this.firstTime = false;\r\n    }\r\n\r\n    getModels() {\r\n        this.modelsService.get(this.page, this.per_page, this.sort, this.query, this.filters, this._with).subscribe(\r\n            response => {\r\n                this.models = response.groups;\r\n                this.totalRecords = response.meta.total_results;\r\n                // if (this.model) {\r\n                //     if (this.model.id) {\r\n                //         this.model.id = undefined;\r\n                //         this.value = this.models[0];\r\n                //         this.filters = [];\r\n                //     }\r\n                // }\r\n            },\r\n            error => {\r\n                let messageError = [];\r\n                if (!Array.isArray(error.error)) {\r\n                    messageError.push(error.error);\r\n                } else {\r\n                    messageError = error.error;\r\n                }\r\n                Object.entries(messageError).forEach(\r\n                    ([key, value]) => this.toastService.growl('error', key + ': ' + value)\r\n                );\r\n            }\r\n        );\r\n    }\r\n\r\n    public isValid() {\r\n        let stringClass = 'form-control form-control-lg form-control-solid';\r\n        if (this.touched) {\r\n            if (this.valid) {\r\n                stringClass += ' is-valid';\r\n            } else {\r\n                stringClass += ' is-invalid';\r\n            }\r\n        }\r\n        return stringClass;\r\n    }\r\n}\r\n","<div>\r\n    <p-multiSelect [styleClass]=\"isValid()\" [options]=\"models\" optionLabel=\"name\" defaultLabel=\"Select Groups\" (completeMethod)=\"loadLazy($event)\" (onChange)=\"change($event)\" (paste)=\"change($event)\" (onSelect)=\"change($event)\" [(ngModel)]=\"value\" field=\"name\" placeholder=\"{{placeholder}}\" [disabled]=\"disabled\" [required]=\"required\">\r\n    </p-multiSelect>\r\n</div>","export { SpaceService } from './space.service';","import { UserModel } from \"../../user/_models/user.model\";\r\n\r\nexport class RoomModel {\r\n  id: number;\r\n  name: string;\r\n  number_room: string;\r\n  description: string;\r\n  active: string;\r\n  functionary: any;\r\n  space: any;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable, of, Subscription } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from '../../../../environments/environment';\r\nimport { catchError, finalize, tap } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class UserService {\r\n    API_URL = `${environment.apiUrl}users`;\r\n    private _subscriptions: Subscription[] = [];\r\n\r\n    constructor(public http: HttpClient) { }\r\n\r\n    get subscriptions() {\r\n        return this._subscriptions;\r\n    }\r\n    \r\n    public get (page?: number, per_page?: number, sort?: string, query?: string, filters?: any[], _with?: any[]): Observable<any> {\r\n        let params: URLSearchParams = new URLSearchParams();\r\n\r\n        if (page !== null && page !== undefined) {\r\n            params.append('_page', String(page));\r\n        } else {\r\n            params.append('_page', '1');\r\n        }\r\n\r\n        if (per_page !== null && per_page !== undefined) {\r\n            params.append('_per_page', String(per_page));\r\n        } else {\r\n            params.append('_per_page', '10');\r\n        }\r\n\r\n        if (sort !== null && sort !== undefined) {\r\n            params.append('sort[]', String(sort));\r\n        }\r\n\r\n        if (query !== null && query !== undefined && query !== '') {\r\n            params.append('filter', String(query));\r\n        }\r\n\r\n        if (filters !== null && filters !== undefined && filters.length > 0) {\r\n            filters.forEach(element => {\r\n                params.append(element.key, String(element.value));\r\n            });\r\n        }\r\n\r\n        if (_with !== null && _with !== undefined && _with.length > 0) {\r\n            _with.forEach(element => {\r\n                params.append(element.key, String(element.value));\r\n            });\r\n        }\r\n\r\n        return this.http.get(`${this.API_URL}?${params}&include[]=userprofile.*`);\r\n    }\r\n\r\n    public post(body: Object): Observable<any> {\r\n        return this.http.post(`${this.API_URL}`, JSON.stringify(body));\r\n    }\r\n\r\n    public patch(id: number, body: Object): Observable<any> {\r\n        return this.http.patch(`${this.API_URL}/${id}`, JSON.stringify(body));\r\n    }\r\n\r\n    public delete(id: number): Observable<any> {\r\n        return this.http.delete(`${this.API_URL}/${id}`);\r\n    }\r\n\r\n    public getById(id: number): Observable<any> {\r\n        return this.http.get(`${this.API_URL}/${id}/?include[]=userprofile.*&include[]=groups.*&include[]=user_permissions.*&include[]=functionary.*`);\r\n    }\r\n\r\n    public getByIdPermissions(id: number): Observable<any> {\r\n        return this.http.get(`${this.API_URL}/${id}/?include[]=userprofile.*&include[]=groups.permissions.*&include[]=user_permissions.*&include[]=functionary.*`);\r\n    }\r\n}\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { AbstractControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Observable, of, Subscription } from 'rxjs';\r\nimport { catchError, switchMap, tap } from 'rxjs/operators';\r\nimport { ToastService } from 'src/app/modules/toast/_services/toast.service';\r\nimport { AuthService } from 'src/app/modules/auth';\r\nimport { FunctionaryModel as Model } from '../../_models/functionary.model';\r\nimport { FunctionaryService as ModelsService } from '../../_services/functionary.service';\r\n\r\n@Component({\r\n  selector: 'app-functionary-edit',\r\n  templateUrl: './functionary-edit.component.html',\r\n  styleUrls: ['./functionary-edit.component.scss']\r\n})\r\nexport class FunctionaryEditComponent implements OnInit, OnDestroy {\r\n  public id: number;\r\n  public model: Model;\r\n  public previous: Model;\r\n  public formGroup: FormGroup;\r\n  public requesting: boolean;\r\n\r\n  public tabs = {\r\n    BASIC_TAB: 0,\r\n  };\r\n\r\n  public name: AbstractControl;\r\n  public last_name: AbstractControl;\r\n  public identification_number: AbstractControl;\r\n  public phone: AbstractControl;\r\n  public mobile: AbstractControl;\r\n  public address: AbstractControl;\r\n  public institutional_email: AbstractControl;\r\n  public personal_email: AbstractControl;\r\n  public birth_date: AbstractControl;\r\n  public profession: AbstractControl;\r\n  public active: AbstractControl;\r\n  public user: AbstractControl;\r\n\r\n  public activeTabId: number;\r\n  private subscriptions: Subscription[] = [];\r\n\r\n  public saveAndExit;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private modelsService: ModelsService,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private toastService: ToastService\r\n  ) {\r\n    this.activeTabId = this.tabs.BASIC_TAB; // 0 => Basic info | 1 => Profile\r\n    this.saveAndExit = false;\r\n    this.requesting = false;\r\n\r\n    this.formGroup = this.fb.group({\r\n      name: ['', Validators.compose([Validators.required, Validators.minLength(3), Validators.maxLength(30)])],\r\n      last_name: ['', Validators.compose([Validators.required, Validators.minLength(3), Validators.maxLength(30)])],\r\n      identification_number: ['', Validators.compose([Validators.required, Validators.minLength(3), Validators.maxLength(30)])],\r\n      phone: ['', Validators.compose([Validators.required, Validators.minLength(3), Validators.maxLength(30)])],\r\n      mobile: ['', Validators.compose([Validators.required, Validators.minLength(3), Validators.maxLength(30)])],\r\n      address: ['', Validators.compose([Validators.required, Validators.minLength(3), Validators.maxLength(30)])],\r\n      institutional_email: ['', Validators.compose([Validators.required, Validators.minLength(3), Validators.maxLength(30)])],\r\n      personal_email: ['', Validators.compose([Validators.required, Validators.minLength(3), Validators.maxLength(30)])],\r\n      birth_date: ['', Validators.compose([Validators.required, Validators.minLength(3), Validators.maxLength(30)])],\r\n      profession: ['', Validators.compose([Validators.required, Validators.minLength(3), Validators.maxLength(30)])],\r\n      active: ['', Validators.compose([Validators.required, Validators.minLength(3), Validators.maxLength(30)])],\r\n      user: ['', Validators.compose([Validators.required, Validators.minLength(1), Validators.maxLength(30)])],\r\n    });\r\n    this.name = this.formGroup.controls['name'];\r\n    this.last_name = this.formGroup.controls['last_name'];\r\n    this.identification_number = this.formGroup.controls['identification_number'];\r\n    this.phone = this.formGroup.controls['phone'];\r\n    this.mobile = this.formGroup.controls['mobile'];\r\n    this.address = this.formGroup.controls['address'];\r\n    this.institutional_email = this.formGroup.controls['institutional_email'];\r\n    this.personal_email = this.formGroup.controls['personal_email'];\r\n    this.birth_date = this.formGroup.controls['birth_date'];\r\n    this.profession = this.formGroup.controls['profession'];\r\n    this.active = this.formGroup.controls['active'];\r\n    this.user = this.formGroup.controls['user'];\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.id = undefined;\r\n    this.model = undefined;\r\n    this.previous = undefined;\r\n    this.get();\r\n  }\r\n\r\n  get() {\r\n    this.requesting = true;\r\n    const sb = this.route.paramMap.pipe(\r\n      switchMap(params => {\r\n        // get id from URL\r\n        this.id = Number(params.get('id'));\r\n        if (this.id || this.id > 0) {\r\n          return this.modelsService.getById(this.id);\r\n        }\r\n        return of({ 'functionary': new Model() });\r\n      }),\r\n      catchError((error) => {\r\n        this.requesting = false;\r\n        let messageError = [];\r\n        if (!Array.isArray(error.error)) {\r\n          messageError.push(error.error);\r\n        } else {\r\n          messageError = error.error;\r\n        }\r\n        Object.entries(messageError).forEach(\r\n          ([key, value]) => this.toastService.growl('error', key + ': ' + value)\r\n        );\r\n        return of({ 'functionary': new Model() });\r\n      }),\r\n    ).subscribe((response: any) => {\r\n      this.requesting = false;\r\n      if (response) {\r\n        this.model = response.functionary;\r\n        if (response.users) {\r\n          this.model.user = response.users[0];\r\n        }\r\n        this.previous = Object.assign({}, this.model);\r\n        this.loadForm();\r\n      }\r\n    });\r\n    this.subscriptions.push(sb);\r\n  }\r\n\r\n  loadForm() {\r\n    if (this.model.id) {\r\n      this.name.setValue(this.model.name);\r\n      this.last_name.setValue(this.model.last_name);\r\n      this.identification_number.setValue(this.model.identification_number);\r\n      this.phone.setValue(this.model.phone);\r\n      this.mobile.setValue(this.model.mobile);\r\n      this.address.setValue(this.model.address);\r\n      this.institutional_email.setValue(this.model.institutional_email);\r\n      this.personal_email.setValue(this.model.personal_email);\r\n      this.birth_date.setValue(new Date(this.model.birth_date));\r\n      this.profession.setValue(this.model.profession);\r\n      this.active.setValue(this.model.active);\r\n      if (this.model.user) {\r\n        this.user.setValue(this.model.user);\r\n      }\r\n    }\r\n    this.formGroup.markAllAsTouched();\r\n  }\r\n\r\n  reset() {\r\n    if (this.previous) {\r\n      this.model = Object.assign({}, this.previous);\r\n      this.loadForm();\r\n    }\r\n  }\r\n\r\n  save(saveAndExit) {\r\n    this.saveAndExit = saveAndExit;\r\n    this.formGroup.markAllAsTouched();\r\n    if (this.formGroup.valid) {\r\n      const formValues = this.formGroup.value;\r\n      this.model = Object.assign(this.model, formValues);\r\n      if (this.id) {\r\n        this.edit();\r\n      } else {\r\n        this.create();\r\n      }\r\n    }\r\n  }\r\n\r\n  edit() {\r\n    this.requesting = true;\r\n    let model = this.model;\r\n    model.birth_date = this.formatDate(this.birth_date.value);\r\n    model.active = this.model.active;\r\n    if (this.model.user) {\r\n      model.user = this.model.user.id;\r\n    }\r\n\r\n    const sbUpdate = this.modelsService.patch(this.id, model).pipe(\r\n      tap(() => {\r\n        this.toastService.growl('success', 'success');\r\n        if (this.saveAndExit) {\r\n          this.router.navigate(['/functionarys']);\r\n        }\r\n      }),\r\n      catchError((error) => {\r\n        this.requesting = false;\r\n        let messageError = [];\r\n        if (!Array.isArray(error.error)) {\r\n          messageError.push(error.error);\r\n        } else {\r\n          messageError = error.error;\r\n        }\r\n        Object.entries(messageError).forEach(\r\n          ([key, value]) => this.toastService.growl('error', key + ': ' + value)\r\n        );\r\n        return of(this.model);\r\n      })\r\n    ).subscribe(response => {\r\n      this.requesting = false;\r\n      this.model = response.functionary\r\n    });\r\n    this.subscriptions.push(sbUpdate);\r\n  }\r\n\r\n  create() {\r\n    this.requesting = true;\r\n\r\n    let model = this.model;\r\n    model.active = this.active.value;\r\n\r\n    model.birth_date = undefined;\r\n    if (this.birth_date.value) {\r\n      model.birth_date = this.formatDate(this.birth_date.value);\r\n    }\r\n\r\n    if (this.model.user) {\r\n      model.user = this.model.user.id;\r\n    }\r\n\r\n    const sbCreate = this.modelsService.post(model).pipe(\r\n      tap(() => {\r\n        this.toastService.growl('success', 'success');\r\n        if (this.saveAndExit) {\r\n          this.router.navigate(['/functionarys']);\r\n        } else {\r\n          this.formGroup.reset()\r\n        }\r\n      }),\r\n      catchError((error) => {\r\n        this.requesting = false;\r\n        let messageError = [];\r\n        if (!Array.isArray(error.error)) {\r\n          messageError.push(error.error);\r\n        } else {\r\n          messageError = error.error;\r\n        }\r\n        Object.entries(messageError).forEach(\r\n          ([key, value]) => this.toastService.growl('error', key + ': ' + value)\r\n        );\r\n        return of(this.model);\r\n      })\r\n    ).subscribe(response => {\r\n      this.requesting = false;\r\n      this.model = response.functionary as Model\r\n    });\r\n    this.subscriptions.push(sbCreate);\r\n  }\r\n\r\n  changeTab(tabId: number) {\r\n    this.activeTabId = tabId;\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscriptions.forEach(sb => sb.unsubscribe());\r\n  }\r\n\r\n  // helpers for View\r\n  isControlValid(controlName: string): boolean {\r\n    const control = this.formGroup.controls[controlName];\r\n    return control.valid && (control.dirty || control.touched);\r\n  }\r\n\r\n  isControlInvalid(controlName: string): boolean {\r\n    const control = this.formGroup.controls[controlName];\r\n    return control.invalid && (control.dirty || control.touched);\r\n  }\r\n\r\n  controlHasError(validation: string, controlName: string) {\r\n    const control = this.formGroup.controls[controlName];\r\n    return control.hasError(validation) && (control.dirty || control.touched);\r\n  }\r\n\r\n  isControlTouched(controlName: string): boolean {\r\n    const control = this.formGroup.controls[controlName];\r\n    return control.dirty || control.touched;\r\n  }\r\n\r\n  public getValidClass(valid) {\r\n    let stringClass = 'form-control form-control-lg form-control-solid';\r\n    if (valid) {\r\n      stringClass += ' is-valid';\r\n    } else {\r\n      stringClass += ' is-invalid';\r\n    }\r\n    return stringClass;\r\n  }\r\n\r\n  public formatDate(date) {\r\n    const d = new Date(date);\r\n    let month = '' + (d.getMonth() + 1);\r\n    let day = '' + d.getDate();\r\n    const year = d.getFullYear();\r\n    let hours = '' + d.getHours();\r\n    let minutes = '' + d.getMinutes();\r\n    let seconds = '' + d.getSeconds();\r\n\r\n    if (month.length < 2) {\r\n      month = '0' + month;\r\n    }\r\n    if (day.length < 2) {\r\n      day = '0' + day;\r\n    }\r\n\r\n    if (hours.length < 2) {\r\n      hours = '0' + hours;\r\n    }\r\n\r\n    if (minutes.length < 2) {\r\n      minutes = '0' + minutes;\r\n    }\r\n\r\n    if (seconds.length < 2) {\r\n      seconds = '0' + seconds;\r\n    }\r\n\r\n    return [year, month, day].join('-');\r\n  }\r\n}\r\n","<div class=\"card card-custom gutter-b\">\r\n  <ng-container *ngIf=\"requesting\">\r\n    <div class=\"progress progress-modal\">\r\n      <div class=\"progress-bar progress-bar-striped progress-bar-animated bg-primary\" role=\"progressbar\"\r\n        style=\"width: 100%\" aria-valuenow=\"100\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\r\n    </div>\r\n  </ng-container>\r\n\r\n  <div class=\"card-header\">\r\n    <div class=\"card-title\">\r\n      <h3 class=\"card-label\">\r\n        <ng-container *ngIf=\"model\">\r\n          {{ (id ? 'COMMON.EDIT' : 'COMMON.NEW') | translate }}\r\n          <span *ngIf=\"model && model.id\">{{ model.id }} - {{ model.name }} </span>\r\n        </ng-container>\r\n      </h3>\r\n    </div>\r\n    <div class=\"card-toolbar\">\r\n      <a type=\"button\" class=\"btn btn-light\" routerLink=\"/functionarys\">\r\n        <i class=\"fa fa-arrow-left\"></i>{{ 'COMMON.BACK' | translate }}\r\n      </a>\r\n      <button class=\"btn btn-secondary ml-2\" (click)=\"reset()\">\r\n        <i class=\"fa fa-redo\"></i>{{ 'COMMON.RESET' | translate }}\r\n      </button>\r\n    </div>\r\n  </div>\r\n  <div class=\"card-body\">\r\n    <ul class=\"nav nav-tabs nav-tabs-line\" role=\"tablist\">\r\n      <li class=\"nav-item cursor-pointer\" (click)=\"changeTab(tabs.BASIC_TAB)\">\r\n        <a class=\"nav-link\" data-toggle=\"tab\" role=\"tab\" [attr.aria-selected]=\"activeTabId === tabs.BASIC_TAB\"\r\n          [class.active]=\"activeTabId === tabs.BASIC_TAB\">\r\n          {{ 'COMMON.BASIC_INFO' | translate }}\r\n        </a>\r\n      </li>\r\n      <!-- <li *ngIf=\"model && model.id\" class=\"nav-item cursor-pointer\" (click)=\"changeTab(tabs.PROFILE)\">\r\n        <a class=\"nav-link\" data-toggle=\"tab\" role=\"button\" [attr.aria-selected]=\"activeTabId === tabs.PROFILE\"\r\n          [class.active]=\"activeTabId === tabs.PROFILE\">Profile</a>\r\n      </li> -->\r\n    </ul>\r\n\r\n    <ng-container *ngIf=\"activeTabId === tabs.BASIC_TAB\">\r\n      <div class=\"mt-5\" *ngIf=\"model\">\r\n        <form action=\"#\" class=\"form form-label-right\" [formGroup]=\"formGroup\">\r\n          <div class=\"form-group row\">\r\n            <div class=\"col-lg-4 mb-3\">\r\n              <label>{{ 'COMMON.ENTER' | translate }} {{ 'FUNCTIONARY.NAME' | translate }}</label>\r\n              <input type=\"text\" class=\"form-control form-control-lg form-control-solid\" autocomplete=\"off\"\r\n                name=\"name\" [class.is-invalid]=\"isControlInvalid('name')\"\r\n                [class.is-valid]=\"isControlValid('name')\" formControlName=\"name\" />\r\n              <div class=\"feedback\" *ngIf=\"!isControlTouched('name')\">{{ 'COMMON.PLEASE_ENTER' | translate }} <b>{{ 'FUNCTIONARY.NAME' | translate }}</b></div>\r\n              <div class=\"valid-feedback\" *ngIf=\"isControlValid('name')\">{{ 'FUNCTIONARY.NAME' | translate }}  {{ 'COMMON.WAS_ENTERED_CORRECT' | translate }}</div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"controlHasError('required', 'name')\">{{ 'FUNCTIONARY.NAME' | translate }}  {{ 'COMMON.IS_REQUIRED' | translate }}</div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"controlHasError('minlength', 'name')\">{{ 'FUNCTIONARY.NAME' | translate }} {{ 'COMMON.SHOULD_HAVE_LEAST' | translate }} 3</div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"controlHasError('maxLength', 'name')\">{{ 'FUNCTIONARY.NAME' | translate }} {{ 'COMMON.SHOULD_HAVE_MAXIMUM' | translate }} 100</div>\r\n            </div>\r\n            <div class=\"col-lg-4 mb-3\">\r\n              <label>{{ 'COMMON.ENTER' | translate }} {{ 'FUNCTIONARY.LAST_NAME' | translate }}</label>\r\n              <input type=\"text\" class=\"form-control form-control-lg form-control-solid\" autocomplete=\"off\"\r\n                name=\"last_name\" [class.is-invalid]=\"isControlInvalid('last_name')\"\r\n                [class.is-valid]=\"isControlValid('last_name')\" formControlName=\"last_name\" />\r\n              <div class=\"feedback\" *ngIf=\"!isControlTouched('last_name')\">{{ 'COMMON.PLEASE_ENTER' | translate }} <b>{{ 'FUNCTIONARY.LAST_NAME' | translate }}</b></div>\r\n              <div class=\"valid-feedback\" *ngIf=\"isControlValid('last_name')\">{{ 'FUNCTIONARY.LAST_NAME' | translate }}  {{ 'COMMON.WAS_ENTERED_CORRECT' | translate }}</div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"controlHasError('required', 'last_name')\">{{ 'FUNCTIONARY.LAST_NAME' | translate }}  {{ 'COMMON.IS_REQUIRED' | translate }}</div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"controlHasError('minlength', 'last_name')\">{{ 'FUNCTIONARY.LAST_NAME' | translate }} {{ 'COMMON.SHOULD_HAVE_LEAST' | translate }} 3</div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"controlHasError('maxLength', 'last_name')\">{{ 'FUNCTIONARY.LAST_NAME' | translate }} {{ 'COMMON.SHOULD_HAVE_MAXIMUM' | translate }} 100</div>\r\n            </div>\r\n            <div class=\"col-lg-4 mb-3\">\r\n              <label>{{ 'COMMON.ENTER' | translate }} {{ 'FUNCTIONARY.IDENTIFICATION_NUMBER' | translate }}</label>\r\n              <input type=\"number\" class=\"form-control form-control-lg form-control-solid\" autocomplete=\"off\"\r\n                name=\"identification_number\" [class.is-invalid]=\"isControlInvalid('identification_number')\"\r\n                [class.is-valid]=\"isControlValid('identification_number')\" formControlName=\"identification_number\" />\r\n              <div class=\"feedback\" *ngIf=\"!isControlTouched('identification_number')\">{{ 'COMMON.PLEASE_ENTER' | translate }} <b>{{ 'FUNCTIONARY.IDENTIFICATION_NUMBER' | translate }}</b></div>\r\n              <div class=\"valid-feedback\" *ngIf=\"isControlValid('identification_number')\">{{ 'FUNCTIONARY.IDENTIFICATION_NUMBER' | translate }}  {{ 'COMMON.WAS_ENTERED_CORRECT' | translate }}</div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"controlHasError('required', 'identification_number')\">{{ 'FUNCTIONARY.IDENTIFICATION_NUMBER' | translate }}  {{ 'COMMON.IS_REQUIRED' | translate }}</div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"controlHasError('minlength', 'identification_number')\">{{ 'FUNCTIONARY.IDENTIFICATION_NUMBER' | translate }} {{ 'COMMON.SHOULD_HAVE_LEAST' | translate }} 3</div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"controlHasError('maxLength', 'identification_number')\">{{ 'FUNCTIONARY.IDENTIFICATION_NUMBER' | translate }} {{ 'COMMON.SHOULD_HAVE_MAXIMUM' | translate }} 100</div>\r\n            </div>\r\n            <div class=\"col-lg-4 mb-3\">\r\n              <label>{{ 'COMMON.ENTER' | translate }} {{ 'FUNCTIONARY.PHONE' | translate }}</label>\r\n              <input type=\"number\" class=\"form-control form-control-lg form-control-solid\" autocomplete=\"off\"\r\n                name=\"phone\" [class.is-invalid]=\"isControlInvalid('phone')\"\r\n                [class.is-valid]=\"isControlValid('phone')\" formControlName=\"phone\" />\r\n              <div class=\"feedback\" *ngIf=\"!isControlTouched('phone')\">{{ 'COMMON.PLEASE_ENTER' | translate }} <b>{{ 'FUNCTIONARY.PHONE' | translate }}</b></div>\r\n              <div class=\"valid-feedback\" *ngIf=\"isControlValid('phone')\">{{ 'FUNCTIONARY.PHONE' | translate }}  {{ 'COMMON.WAS_ENTERED_CORRECT' | translate }}</div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"controlHasError('required', 'phone')\">{{ 'FUNCTIONARY.PHONE' | translate }}  {{ 'COMMON.IS_REQUIRED' | translate }}</div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"controlHasError('minlength', 'phone')\">{{ 'FUNCTIONARY.PHONE' | translate }} {{ 'COMMON.SHOULD_HAVE_LEAST' | translate }} 3</div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"controlHasError('maxLength', 'phone')\">{{ 'FUNCTIONARY.PHONE' | translate }} {{ 'COMMON.SHOULD_HAVE_MAXIMUM' | translate }} 100</div>\r\n            </div>\r\n            <div class=\"col-lg-4 mb-3\">\r\n              <label>{{ 'COMMON.ENTER' | translate }} {{ 'FUNCTIONARY.MOBILE' | translate }}</label>\r\n              <input type=\"number\" class=\"form-control form-control-lg form-control-solid\" autocomplete=\"off\"\r\n                name=\"mobile\" [class.is-invalid]=\"isControlInvalid('mobile')\"\r\n                [class.is-valid]=\"isControlValid('mobile')\" formControlName=\"mobile\" />\r\n              <div class=\"feedback\" *ngIf=\"!isControlTouched('mobile')\">{{ 'COMMON.PLEASE_ENTER' | translate }} <b>{{ 'FUNCTIONARY.MOBILE' | translate }}</b></div>\r\n              <div class=\"valid-feedback\" *ngIf=\"isControlValid('mobile')\">{{ 'FUNCTIONARY.MOBILE' | translate }}  {{ 'COMMON.WAS_ENTERED_CORRECT' | translate }}</div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"controlHasError('required', 'mobile')\">{{ 'FUNCTIONARY.MOBILE' | translate }}  {{ 'COMMON.IS_REQUIRED' | translate }}</div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"controlHasError('minlength', 'mobile')\">{{ 'FUNCTIONARY.MOBILE' | translate }} {{ 'COMMON.SHOULD_HAVE_LEAST' | translate }} 3</div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"controlHasError('maxLength', 'mobile')\">{{ 'FUNCTIONARY.MOBILE' | translate }} {{ 'COMMON.SHOULD_HAVE_MAXIMUM' | translate }} 100</div>\r\n            </div>\r\n            <div class=\"col-lg-4 mb-3\">\r\n              <label>{{ 'COMMON.ENTER' | translate }} {{ 'FUNCTIONARY.ADDRESS' | translate }}</label>\r\n              <input type=\"text\" class=\"form-control form-control-lg form-control-solid\" autocomplete=\"off\"\r\n                name=\"address\" [class.is-invalid]=\"isControlInvalid('address')\"\r\n                [class.is-valid]=\"isControlValid('address')\" formControlName=\"address\" />\r\n              <div class=\"feedback\" *ngIf=\"!isControlTouched('address')\">{{ 'COMMON.PLEASE_ENTER' | translate }} <b>{{ 'FUNCTIONARY.ADDRESS' | translate }}</b></div>\r\n              <div class=\"valid-feedback\" *ngIf=\"isControlValid('address')\">{{ 'FUNCTIONARY.ADDRESS' | translate }}  {{ 'COMMON.WAS_ENTERED_CORRECT' | translate }}</div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"controlHasError('required', 'address')\">{{ 'FUNCTIONARY.ADDRESS' | translate }}  {{ 'COMMON.IS_REQUIRED' | translate }}</div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"controlHasError('minlength', 'address')\">{{ 'FUNCTIONARY.ADDRESS' | translate }} {{ 'COMMON.SHOULD_HAVE_LEAST' | translate }} 3</div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"controlHasError('maxLength', 'address')\">{{ 'FUNCTIONARY.ADDRESS' | translate }} {{ 'COMMON.SHOULD_HAVE_MAXIMUM' | translate }} 100</div>\r\n            </div>\r\n            <div class=\"col-lg-4 mb-3\">\r\n              <label>{{ 'COMMON.ENTER' | translate }} {{ 'FUNCTIONARY.INSTITUTIONAL_EMAIL' | translate }}</label>\r\n              <input type=\"email\" class=\"form-control form-control-lg form-control-solid\" autocomplete=\"off\"\r\n                name=\"institutional_email\" [class.is-invalid]=\"isControlInvalid('institutional_email')\"\r\n                [class.is-valid]=\"isControlValid('institutional_email')\" formControlName=\"institutional_email\" />\r\n              <div class=\"feedback\" *ngIf=\"!isControlTouched('institutional_email')\">{{ 'COMMON.PLEASE_ENTER' | translate }} <b>{{ 'FUNCTIONARY.INSTITUTIONAL_EMAIL' | translate }}</b></div>\r\n              <div class=\"valid-feedback\" *ngIf=\"isControlValid('institutional_email')\">{{ 'FUNCTIONARY.INSTITUTIONAL_EMAIL' | translate }}  {{ 'COMMON.WAS_ENTERED_CORRECT' | translate }}</div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"controlHasError('required', 'institutional_email')\">{{ 'FUNCTIONARY.INSTITUTIONAL_EMAIL' | translate }}  {{ 'COMMON.IS_REQUIRED' | translate }}</div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"controlHasError('minlength', 'institutional_email')\">{{ 'FUNCTIONARY.INSTITUTIONAL_EMAIL' | translate }} {{ 'COMMON.SHOULD_HAVE_LEAST' | translate }} 3</div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"controlHasError('maxLength', 'institutional_email')\">{{ 'FUNCTIONARY.INSTITUTIONAL_EMAIL' | translate }} {{ 'COMMON.SHOULD_HAVE_MAXIMUM' | translate }} 100</div>\r\n            </div>\r\n            <div class=\"col-lg-4 mb-3\">\r\n              <label>{{ 'COMMON.ENTER' | translate }} {{ 'FUNCTIONARY.PERSONAL_EMAIL' | translate }}</label>\r\n              <input type=\"email\" class=\"form-control form-control-lg form-control-solid\" autocomplete=\"off\"\r\n                name=\"personal_email\" [class.is-invalid]=\"isControlInvalid('personal_email')\"\r\n                [class.is-valid]=\"isControlValid('personal_email')\" formControlName=\"personal_email\" />\r\n              <div class=\"feedback\" *ngIf=\"!isControlTouched('personal_email')\">{{ 'COMMON.PLEASE_ENTER' | translate }} <b>{{ 'FUNCTIONARY.PERSONAL_EMAIL' | translate }}</b></div>\r\n              <div class=\"valid-feedback\" *ngIf=\"isControlValid('personal_email')\">{{ 'FUNCTIONARY.PERSONAL_EMAIL' | translate }}  {{ 'COMMON.WAS_ENTERED_CORRECT' | translate }}</div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"controlHasError('required', 'personal_email')\">{{ 'FUNCTIONARY.PERSONAL_EMAIL' | translate }}  {{ 'COMMON.IS_REQUIRED' | translate }}</div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"controlHasError('minlength', 'personal_email')\">{{ 'FUNCTIONARY.PERSONAL_EMAIL' | translate }} {{ 'COMMON.SHOULD_HAVE_LEAST' | translate }} 3</div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"controlHasError('maxLength', 'personal_email')\">{{ 'FUNCTIONARY.PERSONAL_EMAIL' | translate }} {{ 'COMMON.SHOULD_HAVE_MAXIMUM' | translate }} 100</div>\r\n            </div>\r\n            <div class=\"col-lg-4 mb-3\">\r\n              <label>{{ 'COMMON.ENTER' | translate }} {{ 'FUNCTIONARY.BIRTH_DATE' | translate}}</label>\r\n              <p-calendar [inputStyleClass]=\"getValidClass(isControlValid('birth_date'))\" name=\"birth_date\" formControlName=\"birth_date\"></p-calendar>\r\n              <div class=\"feedback\" *ngIf=\"!isControlTouched('birth_date')\">{{ 'COMMON.PLEASE_ENTER' | translate }} <b>{{ 'FUNCTIONARY.BIRTH_DATE' | translate}}</b></div>\r\n              <div class=\"valid-feedback\" *ngIf=\"isControlValid('birth_date')\">{{ 'FUNCTIONARY.BIRTH_DATE' | translate}}  {{ 'COMMON.WAS_ENTERED_CORRECT' | translate }}</div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"controlHasError('required', 'birth_date')\">{{ 'FUNCTIONARY.BIRTH_DATE' | translate}}  {{ 'COMMON.IS_REQUIRED' | translate }}</div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"controlHasError('minlength', 'birth_date')\">{{ 'FUNCTIONARY.BIRTH_DATE' | translate}} {{ 'COMMON.SHOULD_HAVE_LEAST' | translate }} 3</div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"controlHasError('maxLength', 'birth_date')\">{{ 'FUNCTIONARY.BIRTH_DATE' | translate}} {{ 'COMMON.SHOULD_HAVE_MAXIMUM' | translate }} 100</div>\r\n            </div>   \r\n            <div class=\"col-lg-4 mb-3\">\r\n              <label>{{ 'COMMON.ENTER' | translate }} {{ 'FUNCTIONARY.PROFESSION' | translate }}</label>\r\n              <input type=\"text\" class=\"form-control form-control-lg form-control-solid\" autocomplete=\"off\"\r\n                name=\"profession\" [class.is-invalid]=\"isControlInvalid('profession')\"\r\n                [class.is-valid]=\"isControlValid('profession')\" formControlName=\"profession\" />\r\n              <div class=\"feedback\" *ngIf=\"!isControlTouched('profession')\">{{ 'COMMON.PLEASE_ENTER' | translate }} <b>{{ 'FUNCTIONARY.PROFESSION' | translate }}</b></div>\r\n              <div class=\"valid-feedback\" *ngIf=\"isControlValid('profession')\">{{ 'FUNCTIONARY.PROFESSION' | translate }}  {{ 'COMMON.WAS_ENTERED_CORRECT' | translate }}</div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"controlHasError('required', 'profession')\">{{ 'FUNCTIONARY.PROFESSION' | translate }}  {{ 'COMMON.IS_REQUIRED' | translate }}</div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"controlHasError('minlength', 'profession')\">{{ 'FUNCTIONARY.PROFESSION' | translate }} {{ 'COMMON.SHOULD_HAVE_LEAST' | translate }} 3</div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"controlHasError('maxLength', 'profession')\">{{ 'FUNCTIONARY.PROFESSION' | translate }} {{ 'COMMON.SHOULD_HAVE_MAXIMUM' | translate }} 100</div>\r\n            </div>\r\n            <div class=\"col-lg-4 mb-3\">\r\n              <label>{{ 'COMMON.ENTER' | translate }} {{ 'FUNCTIONARY.ACTIVE' | translate}}</label>\r\n              <p-toggleButton class=\"form-control form-control-lg form-control-solid\" formControlName=\"active\" onLabel=\"{{ 'COMMON.YES' | translate}}\" offLabel=\"{{ 'COMMON.NO' | translate}}\"></p-toggleButton>\r\n              <div class=\"feedback\" *ngIf=\"!isControlTouched('active')\">{{ 'COMMON.PLEASE_ENTER' | translate }} <b>{{ 'FUNCTIONARY.ACTIVE' | translate}}</b></div>\r\n              <div class=\"valid-feedback\" *ngIf=\"isControlValid('active')\">{{ 'FUNCTIONARY.ACTIVE' | translate}}  {{ 'COMMON.WAS_ENTERED_CORRECT' | translate }}</div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"controlHasError('required', 'active')\">{{ 'FUNCTIONARY.ACTIVE' | translate}}  {{ 'COMMON.IS_REQUIRED' | translate }}</div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"controlHasError('minlength', 'active')\">{{ 'FUNCTIONARY.ACTIVE' | translate}} {{ 'COMMON.SHOULD_HAVE_LEAST' | translate }} 3</div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"controlHasError('maxLength', 'active')\">{{ 'FUNCTIONARY.ACTIVE' | translate}} {{ 'COMMON.SHOULD_HAVE_MAXIMUM' | translate }} 100</div>\r\n            </div>\r\n            <div class=\"col-lg-4 mb-3\">\r\n              <label>{{ 'COMMON.ENTER' | translate }} {{ 'FUNCTIONARY.USER' | translate }}</label>\r\n              <app-user-autocomplete\r\n              placeholder=\"{{ 'FUNCTIONARY.USER' | translate }}\" name=\"user\" [valid]=\"isControlValid('user')\" [touched]=\"isControlTouched('user')\" [class.is-invalid]=\"isControlInvalid('user')\"\r\n              [class.is-valid]=\"isControlValid('user')\" formControlName=\"user\" id=\"user\" [model]=\"model.user\"></app-user-autocomplete>\r\n              <div class=\"feedback\" *ngIf=\"!isControlTouched('user')\">{{ 'COMMON.PLEASE_ENTER' | translate }} <b>{{ 'FUNCTIONARY.USER' | translate }}</b></div>\r\n              <div class=\"valid-feedback\" *ngIf=\"isControlValid('user')\">{{ 'FUNCTIONARY.USER' | translate }}  {{ 'COMMON.WAS_ENTERED_CORRECT' | translate }}</div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"controlHasError('required', 'user')\">{{ 'FUNCTIONARY.USER' | translate }}  {{ 'COMMON.IS_REQUIRED' | translate }}</div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"controlHasError('minlength', 'user')\">{{ 'FUNCTIONARY.USER' | translate }} {{ 'COMMON.SHOULD_HAVE_LEAST' | translate }} 3</div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"controlHasError('maxLength', 'user')\">{{ 'FUNCTIONARY.USER' | translate }} {{ 'COMMON.SHOULD_HAVE_MAXIMUM' | translate }} 30</div>\r\n            </div>\r\n          </div>\r\n          <div class=\"float-right\">\r\n            <a class=\"btn btn-default font-weight-bold mr-2\" routerLink=\"/functionarys\">{{ 'COMMON.CANCEL' | translate }}</a>\r\n            <button type=\"submit\" class=\"btn btn-primary font-weight-bold mr-2\"\r\n              [disabled]=\"formGroup.invalid\" (click)=\"save(false)\">{{ 'COMMON.SAVE' | translate }}</button>\r\n            <button type=\"submit\" class=\"btn btn-primary font-weight-bold mr-2\"\r\n              [disabled]=\"formGroup.invalid\" (click)=\"save(true)\">{{ 'COMMON.SAVE_AND_EXIT' | translate }}</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </ng-container>\r\n  </div>\r\n</div>","export { GroupService } from './group.service';","import { AuthService } from './../_services/auth.service';\r\nimport { HTTP_INTERCEPTORS, HttpEvent, HttpResponse, HttpErrorResponse } from '@angular/common/http';\r\nimport { Injectable, Injector } from '@angular/core';\r\nimport { HttpInterceptor, HttpHandler, HttpRequest } from '@angular/common/http';\r\n\r\nimport { TokenStorageService } from '../_services/auth-http/token-storage.service';\r\nimport { Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\n\r\nimport { Router } from '@angular/router';\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n  constructor(\r\n    private token: TokenStorageService,\r\n    private router: Router,\r\n    private injector: Injector\r\n  ) { }\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    let authReq = req;\r\n    const token = this.token.getToken();\r\n    if (token != null) {\r\n      if (!req.headers.has('Content-Type')) {\r\n        authReq = req.clone({setHeaders: {'Authorization': `Bearer ${token}`,'Content-Type': 'application/json'}});\r\n      } else {\r\n        authReq = req.clone({setHeaders: {'Authorization': `Bearer ${token}`}});\r\n      }\r\n    } else {\r\n      if (!req.headers.has('Content-Type')) {\r\n        authReq = req.clone({setHeaders: {'Content-Type': 'application/json'}});\r\n      }\r\n    }\r\n\r\n    return next.handle(authReq).pipe(tap(\r\n      (event: HttpEvent<any>) => {\r\n        if (event instanceof HttpResponse) {\r\n          // do stuff with response if you want\r\n        }\r\n      }, (err: any) => {\r\n        if (err instanceof HttpErrorResponse) {\r\n          if (err.status === 401) {\r\n            // redirect to the login route\r\n            this.logout();\r\n            this.router.navigate(['login']);\r\n          }\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  logout() {\r\n    const authService = this.injector.get(AuthService);\r\n    authService.logout();\r\n    document.location.reload();\r\n  }\r\n}\r\n\r\nexport const authInterceptorProviders = [\r\n  { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true }\r\n];","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  appVersion: 'v713demo1',\r\n  USERDATA_KEY: 'authf649fc9a5f55',\r\n  isMockEnabled: false,\r\n  // apiUrl: 'http://127.0.0.1:8000/api/v1/',\r\n  apiUrl: 'https://backend-rooms-project.herokuapp.com/api/v1/'\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Component, forwardRef, Renderer2, ViewChild, Input, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { RoomService as ModelsService } from '../../_services/room.service';\r\nimport { LazyLoadEvent } from 'primeng/api';\r\nimport { ToastService } from 'src/app/modules/toast/_services/toast.service';\r\nimport { AuthService } from 'src/app/modules/auth';\r\nexport const EPANDED_TEXTAREA_VALUE_ACCESSOR: any = {\r\n    provide: NG_VALUE_ACCESSOR,\r\n    useExisting: forwardRef(() => RoomAutocompleteComponent),\r\n    multi: true,\r\n};\r\n\r\n@Component({\r\n    selector: 'app-room-autocomplete',\r\n    templateUrl: './room-autocomplete.component.html',\r\n    styleUrls: ['./room-autocomplete.component.scss'],\r\n    providers: [EPANDED_TEXTAREA_VALUE_ACCESSOR],\r\n})\r\nexport class RoomAutocompleteComponent implements ControlValueAccessor, OnInit {\r\n    @Input() model: any;\r\n    @Input() valid: boolean;\r\n    @Input() touched: boolean;\r\n    @Input() required: boolean;\r\n    @Input() disabled: boolean;\r\n    @Input() placeholder: string;\r\n    @Input() addFilters: { key: string, value: string }[];\r\n\r\n    public models: any[];\r\n\r\n    public onChange;\r\n    public onTouched;\r\n\r\n    public firstTime: boolean;\r\n    public totalRecords: number;\r\n    public page: number;\r\n    public per_page: number;\r\n    public sort: string;\r\n    public query: string;\r\n    public filters: { key: string, value: string }[];\r\n    public _with: { key: string, value: string }[];\r\n\r\n    public value: any;\r\n\r\n    constructor(\r\n        public modelsService: ModelsService,\r\n        public toastService: ToastService\r\n    ) {\r\n        this.page = 1;\r\n        this.per_page = 100;\r\n        this.firstTime = true;\r\n    }\r\n\r\n    public ngOnInit() {\r\n        if (!this.placeholder) {\r\n            this.placeholder = '';\r\n        }\r\n    }\r\n\r\n    writeValue(value: any) {\r\n        // const div = this.textarea.nativeElement;\r\n        // this.renderer.setProperty(div, 'textContent', value);\r\n        this.value = value;\r\n    }\r\n\r\n    registerOnChange(fn: any) {\r\n        this.onChange = fn;\r\n    }\r\n\r\n    registerOnTouched(fn: any) {\r\n        this.onTouched = fn;\r\n    }\r\n\r\n    setDisabledState(isDisabled: boolean) {\r\n        this.disabled = isDisabled;\r\n    }\r\n\r\n    public change($event) {\r\n        this.onChange(this.value);\r\n        this.onTouched(this.value);\r\n    }\r\n\r\n    public loadLazy(event) {\r\n        this.filters = [];\r\n        if (event.sortField) {\r\n            if (event.sortOrder === -1) {\r\n                this.sort = '-' + event.sortField;\r\n            } else {\r\n                this.sort = event.sortField;\r\n            }\r\n        } else {\r\n            this.sort = '-id';\r\n        }\r\n\r\n        if (this.addFilters) {\r\n            this.addFilters.forEach(element => {\r\n                this.filters.push({ key: 'filter{' + element.key + '}', value: element.value })\r\n            });\r\n        }\r\n\r\n        if (event.query) {\r\n            this.filters.push({ key: 'filter{number_room.icontains}', value: event.query })\r\n        } else {\r\n            this.query = undefined;\r\n        }\r\n\r\n        if (event.rows) {\r\n            this.per_page = event.rows;\r\n        }\r\n\r\n\r\n        if (!this.firstTime) {\r\n            this.getModels();\r\n        }\r\n        this.firstTime = false;\r\n    }\r\n\r\n    getModels() {\r\n        this.modelsService.get(this.page, this.per_page, this.sort, this.query, this.filters, this._with).toPromise().then(\r\n            response => {\r\n                this.models = response.rooms;\r\n                this.totalRecords = response.meta.total_results;\r\n                // if (this.model) {\r\n                //     if (this.model.id) {\r\n                //         this.model.id = undefined;\r\n                //         this.value = this.models[0];\r\n                //         this.filters = [];\r\n                //     }\r\n                // }\r\n            },\r\n            error => {\r\n                let messageError = [];\r\n                if (!Array.isArray(error.error)) {\r\n                    messageError.push(error.error);\r\n                } else {\r\n                    messageError = error.error;\r\n                }\r\n                Object.entries(messageError).forEach(\r\n                    ([key, value]) => this.toastService.growl('error', key + ': ' + value)\r\n                );\r\n            }\r\n        );\r\n    }\r\n\r\n    public isValid() {\r\n        let stringClass = 'form-control form-control-lg form-control-solid';\r\n        if (this.touched) {\r\n            if (this.valid) {\r\n                stringClass += ' is-valid';\r\n            } else {\r\n                stringClass += ' is-invalid';\r\n            }\r\n        }\r\n        return stringClass;\r\n    }\r\n}\r\n","<div>\r\n    <p-autoComplete [inputStyleClass]=\"isValid()\" [suggestions]=\"models\" (completeMethod)=\"loadLazy($event)\" (change)=\"change($event)\" (paste)=\"change($event)\" (onSelect)=\"change($event)\" [forceSelection]=\"true\" delay=\"0\" [(ngModel)]=\"value\" field=\"number_room\" placeholder=\"{{placeholder}}\" [disabled]=\"disabled\" [required]=\"required\">\r\n    </p-autoComplete>\r\n</div>","import { Component, forwardRef, Renderer2, ViewChild, Input, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { PermissionService as ModelsService } from '../../_services/permission.service';\r\nimport { LazyLoadEvent } from 'primeng/api';\r\nimport { ToastService } from 'src/app/modules/toast/_services/toast.service';\r\nimport { AuthService } from 'src/app/modules/auth';\r\nexport const EPANDED_TEXTAREA_VALUE_ACCESSOR: any = {\r\n    provide: NG_VALUE_ACCESSOR,\r\n    useExisting: forwardRef(() => PermissionAutocompleteComponent),\r\n    multi: true,\r\n};\r\n\r\n@Component({\r\n    selector: 'app-permission-autocomplete',\r\n    templateUrl: './permission-autocomplete.component.html',\r\n    styleUrls: ['./permission-autocomplete.component.scss'],\r\n    providers: [EPANDED_TEXTAREA_VALUE_ACCESSOR],\r\n})\r\nexport class PermissionAutocompleteComponent implements ControlValueAccessor, OnInit {\r\n    @Input() model: any;\r\n    @Input() valid: boolean;\r\n    @Input() touched: boolean;\r\n    @Input() required: boolean;\r\n    @Input() disabled: boolean;\r\n    @Input() placeholder: string;\r\n    @Input() addFilters: { key: string, value: string }[];\r\n\r\n    public models: any[];\r\n\r\n    public onChange;\r\n    public onTouched;\r\n\r\n    public firstTime: boolean;\r\n    public totalRecords: number;\r\n    public page: number;\r\n    public per_page: number;\r\n    public sort: string;\r\n    public query: string;\r\n    public filters: { key: string, value: string }[];\r\n    public _with: { key: string, value: string }[];\r\n\r\n    public value: any;\r\n\r\n    constructor(\r\n        public modelsService: ModelsService,\r\n        public toastService: ToastService\r\n    ) {\r\n        this.page = 1;\r\n        this.per_page = 100;\r\n        this.firstTime = true;\r\n    }\r\n\r\n    public ngOnInit() {\r\n        if (!this.placeholder) {\r\n            this.placeholder = '';\r\n        }\r\n    }\r\n\r\n    writeValue(value: any) {\r\n        // const div = this.textarea.nativeElement;\r\n        // this.renderer.setProperty(div, 'textContent', value);\r\n        this.value = value;\r\n    }\r\n\r\n    registerOnChange(fn: any) {\r\n        this.onChange = fn;\r\n    }\r\n\r\n    registerOnTouched(fn: any) {\r\n        this.onTouched = fn;\r\n    }\r\n\r\n    setDisabledState(isDisabled: boolean) {\r\n        this.disabled = isDisabled;\r\n    }\r\n\r\n    public change($event) {\r\n        this.onChange(this.value);\r\n        this.onTouched(this.value);\r\n    }\r\n\r\n    public loadLazy(event?) {\r\n        this.filters = [];\r\n        if (event && event.sortField) {\r\n            if (event.sortOrder === -1) {\r\n                this.sort = '-' + event.sortField;\r\n            } else {\r\n                this.sort = event.sortField;\r\n            }\r\n        } else {\r\n            this.sort = '-id';\r\n        }\r\n\r\n        if (this.addFilters) {\r\n            this.addFilters.forEach(element => {\r\n                this.filters.push({ key: 'filter{' + element.key + '}', value: element.value })\r\n            });\r\n        }\r\n\r\n        if (event.query) {\r\n            this.filters.push({ key: 'filter{name.icontains}', value: event.query })\r\n        } else {\r\n            this.query = undefined;\r\n        }\r\n\r\n        if (event && event.rows) {\r\n            this.per_page = event.rows;\r\n        }\r\n\r\n\r\n        if (!this.firstTime) {\r\n            this.getModels();\r\n        }\r\n        this.firstTime = false;\r\n    }\r\n\r\n    getModels() {\r\n        this.modelsService.get(this.page, this.per_page, this.sort, this.query, this.filters, this._with).subscribe(\r\n            response => {\r\n                this.models = response.permissions;\r\n                this.totalRecords = response.meta.total_results;\r\n                // if (this.model) {\r\n                //     if (this.model.id) {\r\n                //         this.model.id = undefined;\r\n                //         this.value = this.models[0];\r\n                //         this.filters = [];\r\n                //     }\r\n                // }\r\n            },\r\n            error => {\r\n                let messageError = [];\r\n                if (!Array.isArray(error.error)) {\r\n                    messageError.push(error.error);\r\n                } else {\r\n                    messageError = error.error;\r\n                }\r\n                Object.entries(messageError).forEach(\r\n                    ([key, value]) => this.toastService.growl('error', key + ': ' + value)\r\n                );\r\n            }\r\n        );\r\n    }\r\n\r\n    public isValid() {\r\n        let stringClass = 'form-control form-control-lg form-control-solid';\r\n        if (this.touched) {\r\n            if (this.valid) {\r\n                stringClass += ' is-valid';\r\n            } else {\r\n                stringClass += ' is-invalid';\r\n            }\r\n        }\r\n        return stringClass;\r\n    }\r\n}\r\n","<div>\r\n    <p-autoComplete [inputStyleClass]=\"isValid()\" [suggestions]=\"models\" (completeMethod)=\"loadLazy($event)\" (change)=\"change($event)\" (paste)=\"change($event)\" (onSelect)=\"change($event)\" [forceSelection]=\"true\" delay=\"0\" [(ngModel)]=\"value\" field=\"name\" placeholder=\"{{placeholder}}\" [disabled]=\"disabled\" [required]=\"required\">\r\n    </p-autoComplete>\r\n</div>","export { FolderService } from './folder.service';","import { Injectable } from '@angular/core';\r\nimport { InMemoryDbService } from 'angular-in-memory-web-api';\r\nimport { Observable } from 'rxjs';\r\nimport { UsersTable } from './fake-db/users.table';\r\nimport { CarsTable } from './fake-db/cars.table';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class FakeAPIService implements InMemoryDbService {\r\n  constructor() { }\r\n\r\n  /**\r\n   * Create Fake DB and API\r\n   */\r\n  createDb(): {} | Observable<{}> {\r\n    // tslint:disable-next-line:class-name\r\n    const db = {\r\n      // auth module\r\n      users: UsersTable.users,\r\n\r\n      // data-table\r\n      cars: CarsTable.cars,\r\n    };\r\n    return db;\r\n  }\r\n}\r\n","import { UserModel } from \"../../user/_models/user.model\";\r\n\r\nexport class FolderModel {\r\n  id: number;\r\n  name: string;\r\n  description: string;\r\n  expiration_date: string;\r\n  guide_file: any;\r\n  active: string;\r\n  functionary: any;\r\n  room: any;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable, of, Subscription } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from '../../../../environments/environment';\r\nimport { catchError, finalize, tap } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class PermissionService {\r\n    API_URL = `${environment.apiUrl}permissions`;\r\n    private _subscriptions: Subscription[] = [];\r\n\r\n    constructor(public http: HttpClient) { }\r\n\r\n    get subscriptions() {\r\n        return this._subscriptions;\r\n    }\r\n    \r\n    public get (page?: number, per_page?: number, sort?: string, query?: string, filters?: any[], _with?: any[]): Observable<any> {\r\n        let params: URLSearchParams = new URLSearchParams();\r\n\r\n        if (page !== null && page !== undefined) {\r\n            params.append('_page', String(page));\r\n        } else {\r\n            params.append('_page', '1');\r\n        }\r\n\r\n        if (per_page !== null && per_page !== undefined) {\r\n            params.append('_per_page', String(per_page));\r\n        } else {\r\n            params.append('_per_page', '10');\r\n        }\r\n\r\n        if (sort !== null && sort !== undefined) {\r\n            params.append('sort[]', String(sort));\r\n        }\r\n\r\n        if (query !== null && query !== undefined && query !== '') {\r\n            params.append('filter', String(query));\r\n        }\r\n\r\n        if (filters !== null && filters !== undefined && filters.length > 0) {\r\n            filters.forEach(element => {\r\n                params.append(element.key, String(element.value));\r\n            });\r\n        }\r\n\r\n        if (_with !== null && _with !== undefined && _with.length > 0) {\r\n            _with.forEach(element => {\r\n                params.append(element.key, String(element.value));\r\n            });\r\n        }\r\n\r\n        return this.http.get(`${this.API_URL}?${params}`);\r\n    }\r\n\r\n    public post(body: Object): Observable<any> {\r\n        return this.http.post(`${this.API_URL}`, JSON.stringify(body));\r\n    }\r\n\r\n    public patch(id: number, body: Object): Observable<any> {\r\n        return this.http.patch(`${this.API_URL}/${id}`, JSON.stringify(body));\r\n    }\r\n\r\n    public delete(id: number): Observable<any> {\r\n        return this.http.delete(`${this.API_URL}/${id}`);\r\n    }\r\n\r\n    public getById(id: number): Observable<any> {\r\n        return this.http.get(`${this.API_URL}/${id}/?include[]=content_type.*`);\r\n    }\r\n}\r\n","import { UserModel } from \"../../user/_models/user.model\";\r\n\r\nexport class FunctionaryModel {\r\n  id: number;\r\n  name: number;\r\n  last_name: string;\r\n  identification_number: string;\r\n  phone: string;\r\n  mobile: string;\r\n  address: string;\r\n  institutional_email: string;\r\n  personal_email: string;\r\n  birth_date: string;\r\n  profession: string;\r\n  active: string;\r\n  user: any;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable, of, Subscription } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from '../../../../environments/environment';\r\nimport { catchError, finalize, tap } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class SpaceService {\r\n    API_URL = `${environment.apiUrl}spaces`;\r\n    private _subscriptions: Subscription[] = [];\r\n\r\n    constructor(public http: HttpClient) { }\r\n\r\n    get subscriptions() {\r\n        return this._subscriptions;\r\n    }\r\n    \r\n    public get (page?: number, per_page?: number, sort?: string, query?: string, filters?: any[], _with?: any[]): Observable<any> {\r\n        let params: URLSearchParams = new URLSearchParams();\r\n\r\n        if (page !== null && page !== undefined) {\r\n            params.append('_page', String(page));\r\n        } else {\r\n            params.append('_page', '1');\r\n        }\r\n\r\n        if (per_page !== null && per_page !== undefined) {\r\n            params.append('_per_page', String(per_page));\r\n        } else {\r\n            params.append('_per_page', '10');\r\n        }\r\n\r\n        if (sort !== null && sort !== undefined) {\r\n            params.append('sort[]', String(sort));\r\n        }\r\n\r\n        if (query !== null && query !== undefined && query !== '') {\r\n            params.append('filter{id}[]', String(query));\r\n        }\r\n\r\n        if (filters !== null && filters !== undefined && filters.length > 0) {\r\n            filters.forEach(element => {\r\n                params.append(element.key, String(element.value));\r\n            });\r\n        }\r\n\r\n        if (_with !== null && _with !== undefined && _with.length > 0) {\r\n            _with.forEach(element => {\r\n                params.append(element.key, String(element.value));\r\n            });\r\n        }\r\n\r\n        return this.http.get(`${this.API_URL}?${params}&include[]=functionarys.*`);\r\n    }\r\n\r\n    public post(body: Object): Observable<any> {\r\n        return this.http.post(`${this.API_URL}`, JSON.stringify(body));\r\n    }\r\n\r\n    public patch(id: number, body: Object): Observable<any> {\r\n        return this.http.patch(`${this.API_URL}/${id}`, JSON.stringify(body));\r\n    }\r\n\r\n    public delete(id: number): Observable<any> {\r\n        return this.http.delete(`${this.API_URL}/${id}`);\r\n    }\r\n\r\n    public getById(id: number): Observable<any> {\r\n        return this.http.get(`${this.API_URL}/${id}/?include[]=functionary.*&include[]=functionarys.*&include[]=functionarys.user.*`);\r\n    }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-permission',\r\n  templateUrl: './permission.component.html',\r\n})\r\nexport class PermissionComponent implements OnInit {\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n}\r\n","<router-outlet></router-outlet>\r\n","import { UserModel } from \"../../user/_models/user.model\";\r\n\r\nexport class SpaceModel {\r\n  id: number;\r\n  name: string;\r\n  number_space: string;\r\n  description: string;\r\n  active: string;\r\n  functionary: any;\r\n  functionarys: any[];\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable, of, Subscription } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from '../../../../environments/environment';\r\nimport { catchError, finalize, tap } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class FunctionaryService {\r\n    API_URL = `${environment.apiUrl}functionarys`;\r\n    private _subscriptions: Subscription[] = [];\r\n\r\n    constructor(public http: HttpClient) { }\r\n\r\n    get subscriptions() {\r\n        return this._subscriptions;\r\n    }\r\n    \r\n    public get (page?: number, per_page?: number, sort?: string, query?: string, filters?: any[], _with?: any[]): Observable<any> {\r\n        let params: URLSearchParams = new URLSearchParams();\r\n\r\n        if (page !== null && page !== undefined) {\r\n            params.append('_page', String(page));\r\n        } else {\r\n            params.append('_page', '1');\r\n        }\r\n\r\n        if (per_page !== null && per_page !== undefined) {\r\n            params.append('_per_page', String(per_page));\r\n        } else {\r\n            params.append('_per_page', '10');\r\n        }\r\n\r\n        if (sort !== null && sort !== undefined) {\r\n            params.append('sort[]', String(sort));\r\n        }\r\n\r\n        if (query !== null && query !== undefined && query !== '') {\r\n            params.append('filter{id}[]', String(query));\r\n        }\r\n\r\n        if (filters !== null && filters !== undefined && filters.length > 0) {\r\n            filters.forEach(element => {\r\n                params.append(element.key, String(element.value));\r\n            });\r\n        }\r\n\r\n        if (_with !== null && _with !== undefined && _with.length > 0) {\r\n            _with.forEach(element => {\r\n                params.append(element.key, String(element.value));\r\n            });\r\n        }\r\n\r\n        return this.http.get(`${this.API_URL}?${params}&include[]=user.*`);\r\n    }\r\n\r\n    public post(body: Object): Observable<any> {\r\n        return this.http.post(`${this.API_URL}`, JSON.stringify(body));\r\n    }\r\n\r\n    public patch(id: number, body: Object): Observable<any> {\r\n        return this.http.patch(`${this.API_URL}/${id}`, JSON.stringify(body));\r\n    }\r\n\r\n    public delete(id: number): Observable<any> {\r\n        return this.http.delete(`${this.API_URL}/${id}`);\r\n    }\r\n\r\n    public getById(id: number): Observable<any> {\r\n        return this.http.get(`${this.API_URL}/${id}/?include[]=user.*`);\r\n    }\r\n}\r\n","export class AuthModel {\r\n  accessToken: string;\r\n  refreshToken: string;\r\n  expiresIn: Date;\r\n\r\n  setAuth(auth: any) {\r\n    this.accessToken = auth.accessToken;\r\n    this.refreshToken = auth.refreshToken;\r\n    this.expiresIn = auth.expiresIn;\r\n  }\r\n}\r\n","export class CarsTable {\r\n  public static cars: any = [\r\n    {\r\n      id: 1,\r\n      cModel: 'Elise',\r\n      cManufacture: 'Lotus',\r\n      cModelYear: 2004,\r\n      cMileage: 116879,\r\n      // tslint:disable-next-line:max-line-length\r\n      cDescription: `The Lotus Elise first appeared in 1996 and revolutionised small sports car design with its lightweight extruded aluminium chassis and composite body. There have been many variations, but the basic principle remain the same.`,\r\n      cColor: 'Red',\r\n      cPrice: 18347,\r\n      cCondition: 1,\r\n      createdDate: '09/30/2017',\r\n      cStatus: 0,\r\n      cVINCode: '1FTWX3D52AE575540',\r\n    },\r\n    {\r\n      id: 2,\r\n      cModel: 'Sunbird',\r\n      cManufacture: 'Pontiac',\r\n      cModelYear: 1984,\r\n      cMileage: 99515,\r\n      // tslint:disable-next-line:max-line-length\r\n      cDescription: `The Pontiac Sunbird is an automobile that was produced by Pontiac, initially as a subcompact for the 1976 to 1980 cModel years,and later as a compact for the 1982 to 1994 cModel years. The Sunbird badge ran for 18 years (with a hiatus during the 1981 and 1982 cModel years, as the 1982 cModel was called J2000) and was then replaced in 1995 by the Pontiac Sunfire. Through the years the Sunbird was available in notchback coupé, sedan, hatchback, station wagon, and convertible body styles.`,\r\n      cColor: 'Khaki',\r\n      cPrice: 165956,\r\n      cCondition: 0,\r\n      createdDate: '03/22/2018',\r\n      cStatus: 1,\r\n      cVINCode: 'JM1NC2EF8A0293556',\r\n    },\r\n    {\r\n      id: 3,\r\n      cModel: 'Amigo',\r\n      cManufacture: 'Isuzu',\r\n      cModelYear: 1993,\r\n      cMileage: 138027,\r\n      // tslint:disable-next-line:max-line-length\r\n      cDescription: `The Isuzu MU is a mid-size SUV that was produced by the Japan-based cManufacturer Isuzu. The three-door MU was introduced in 1989, followed in 1990 by the five-door version called Isuzu MU Wizard, both of which stopped production in 1998 to be replaced by a second generation. This time, the five-door version dropped the \"MU\" prefix, to become the Isuzu Wizard. The acronym \"MU\" is short for \"Mysterious Utility\". Isuzu cManufactured several variations to the MU and its derivates for sale in other countries.`,\r\n      cColor: 'Aquamarine',\r\n      cPrice: 45684,\r\n      cCondition: 0,\r\n      createdDate: '03/06/2018',\r\n      cStatus: 0,\r\n      cVINCode: '1G6DG8E56C0973889',\r\n    },\r\n    {\r\n      id: 4,\r\n      cModel: 'LS',\r\n      cManufacture: 'Lexus',\r\n      cModelYear: 2004,\r\n      cMileage: 183068,\r\n      // tslint:disable-next-line:max-line-length\r\n      cDescription: `The Lexus LS (Japanese: レクサス・LS, Rekusasu LS) is a full-size luxury car (F-segment in Europe) serving as the flagship cModel of Lexus, the luxury division of Toyota. For the first four generations, all LS cModels featured V8 engines and were predominantly rear-wheel-drive, with Lexus also offering all-wheel-drive, hybrid, and long-wheelbase variants. The fifth generation changed to using a V6 engine with no V8 option, and the long wheelbase variant was removed entirely.`,\r\n      cColor: 'Mauv',\r\n      cPrice: 95410,\r\n      cCondition: 1,\r\n      createdDate: '02/03/2018',\r\n      cStatus: 1,\r\n      cVINCode: '2T1BU4EE6DC859114',\r\n    },\r\n    {\r\n      id: 5,\r\n      cModel: 'Paseo',\r\n      cManufacture: 'Toyota',\r\n      cModelYear: 1997,\r\n      cMileage: 74884,\r\n      // tslint:disable-next-line:max-line-length\r\n      cDescription: `The Toyota Paseo (known as the Cynos in Japan and other regions) is a sports styled compact car sold from 1991–1999 and was loosely based on the Tercel. It was available as a coupe and in later cModels as a convertible. Toyota stopped selling the car in the United States in 1997, however the car continued to be sold in Canada, Europe and Japan until 1999, but had no direct replacement. The Paseo, like the Tercel, shares a platform with the Starlet. Several parts are interchangeable between the three`,\r\n      cColor: 'Pink',\r\n      cPrice: 24796,\r\n      cCondition: 1,\r\n      createdDate: '08/13/2017',\r\n      cStatus: 0,\r\n      cVINCode: '1D7RB1GP0AS597432',\r\n    },\r\n    {\r\n      id: 6,\r\n      cModel: 'M',\r\n      cManufacture: 'Infiniti',\r\n      cModelYear: 2009,\r\n      cMileage: 194846,\r\n      // tslint:disable-next-line:max-line-length\r\n      cDescription: `The Infiniti M is a line of mid-size luxury (executive) cars from the Infiniti luxury division of Nissan.\\r\\nThe first iteration was the M30 Coupe/Convertible, which were rebadged JDM Nissan Leopard.\\r\\nAfter a long hiatus, the M nameplate was used for Infiniti's mid-luxury sedans (executive cars). First was the short-lived M45 sedan, a rebadged version of the Japanese-spec Nissan Gloria. The next generations, the M35/45 and M37/56/35h/30d, became the flagship of the Infiniti brand and are based on the JDM Nissan Fuga.`,\r\n      cColor: 'Puce',\r\n      cPrice: 30521,\r\n      cCondition: 1,\r\n      createdDate: '01/27/2018',\r\n      cStatus: 0,\r\n      cVINCode: 'YV1940AS1D1542424',\r\n    },\r\n    {\r\n      id: 7,\r\n      cModel: 'Phantom',\r\n      cManufacture: 'Rolls-Royce',\r\n      cModelYear: 2008,\r\n      cMileage: 164124,\r\n      // tslint:disable-next-line:max-line-length\r\n      cDescription: `The Rolls-Royce Phantom VIII is a luxury saloon car cManufactured by Rolls-Royce Motor Cars. It is the eighth and current generation of Rolls-Royce Phantom, and the second launched by Rolls-Royce under BMW ownership. It is offered in two wheelbase lengths`,\r\n      cColor: 'Purple',\r\n      cPrice: 196247,\r\n      cCondition: 1,\r\n      createdDate: '09/28/2017',\r\n      cStatus: 1,\r\n      cVINCode: '3VWML7AJ1DM234625',\r\n    },\r\n    {\r\n      id: 8,\r\n      cModel: 'QX',\r\n      cManufacture: 'Infiniti',\r\n      cModelYear: 2002,\r\n      cMileage: 57410,\r\n      // tslint:disable-next-line:max-line-length\r\n      cDescription: `The Infiniti QX80 (called the Infiniti QX56 until 2013) is a full-size luxury SUV built by Nissan Motor Company's Infiniti division. The naming convention originally adhered to the current trend of using a numeric designation derived from the engine's displacement, thus QX56 since the car has a 5.6-liter engine. From the 2014 cModel year, the car was renamed the QX80, as part of Infiniti's cModel name rebranding. The new name carries no meaning beyond suggesting that the vehicle is larger than smaller cModels such as the QX60`,\r\n      cColor: 'Green',\r\n      cPrice: 185775,\r\n      cCondition: 1,\r\n      createdDate: '11/15/2017',\r\n      cStatus: 0,\r\n      cVINCode: 'WDDHF2EB9CA161524',\r\n    },\r\n    {\r\n      id: 9,\r\n      cModel: 'Daytona',\r\n      cManufacture: 'Dodge',\r\n      cModelYear: 1993,\r\n      cMileage: 4444,\r\n      // tslint:disable-next-line:max-line-length\r\n      cDescription: `The Dodge Daytona was an automobile which was produced by the Chrysler Corporation under their Dodge division from 1984 to 1993. It was a front-wheel drive hatchback based on the Chrysler G platform, which was derived from the Chrysler K platform. The Chrysler Laser was an upscale rebadged version of the Daytona. The Daytona was restyled for 1987, and again for 1992. It replaced the Mitsubishi Galant-based Challenger, and slotted between the Charger and the Conquest. The Daytona was replaced by the 1995 Dodge Avenger, which was built by Mitsubishi Motors. The Daytona derives its name mainly from the Dodge Charger Daytona, which itself was named after the Daytona 500 race in Daytona Beach, Florida.`,\r\n      cColor: 'Maroon',\r\n      cPrice: 171898,\r\n      cCondition: 0,\r\n      createdDate: '12/24/2017',\r\n      cStatus: 1,\r\n      cVINCode: 'WBAET37422N752051',\r\n    },\r\n    {\r\n      id: 10,\r\n      cModel: '1500 Silverado',\r\n      cManufacture: 'Chevrolet',\r\n      cModelYear: 1999,\r\n      cMileage: 195310,\r\n      // tslint:disable-next-line:max-line-length\r\n      cDescription: `The Chevrolet Silverado, and its mechanically identical cousin, the GMC Sierra, are a series of full-size and heavy-duty pickup trucks cManufactured by General Motors and introduced in 1998 as the successor to the long-running Chevrolet C/K line. The Silverado name was taken from a trim level previously used on its predecessor, the Chevrolet C/K pickup truck from 1975 through 1998. General Motors continues to offer a GMC-badged variant of the Chevrolet full-size pickup under the GMC Sierra name, first used in 1987 for its variant of the GMT400 platform trucks.`,\r\n      cColor: 'Blue',\r\n      cPrice: 25764,\r\n      cCondition: 0,\r\n      createdDate: '08/30/2017',\r\n      cStatus: 1,\r\n      cVINCode: '1N6AF0LX6EN590806',\r\n    },\r\n    {\r\n      id: 11,\r\n      cModel: 'CTS',\r\n      cManufacture: 'Cadillac',\r\n      cModelYear: 2012,\r\n      cMileage: 170862,\r\n      // tslint:disable-next-line:max-line-length\r\n      cDescription: `The Cadillac CTS is a mid-size luxury car / executive car designed, engineered, cManufactured and marketed by General Motors, and now in its third generation. \\r\\nInitially available only as a 4-door sedan on the GM Sigma platform, GM had offered the second generation CTS in three body styles: 4-door sedan, 2-door coupe, and 5-door sport wagon also using the Sigma platform — and the third generation in coupe and sedan configurations, using a stretched version of the GM Alpha platform.\\r\\nWayne Cherry and Kip Wasenko designed the exterior of the first generation CTS, marking the production debut of a design language (marketed as \"Art and Science\") first seen on the Evoq concept car. Bob Boniface and Robin Krieg designed the exterior of the third generation CTS`,\r\n      cColor: 'Crimson',\r\n      cPrice: 80588,\r\n      cCondition: 0,\r\n      createdDate: '02/15/2018',\r\n      cStatus: 0,\r\n      cVINCode: '1G4HR54KX4U506530',\r\n    },\r\n    {\r\n      id: 12,\r\n      cModel: 'Astro',\r\n      cManufacture: 'Chevrolet',\r\n      cModelYear: 1995,\r\n      cMileage: 142137,\r\n      // tslint:disable-next-line:max-line-length\r\n      cDescription: `The Chevrolet Astro was a rear-wheel drive van/minivan cManufactured and marketed by the American automaker Chevrolet from 1985 to 2005 and over two build generations. Along with its rebadged variant, the GMC Safari, the Astro was marketed in passenger as well as cargo and livery configurations—featuring a V6 engine, unibody construction with a separate front engine/suspension sub-frame, leaf-spring rear suspension, rear bi-parting doors, and a seating capacity of up to eight passengers`,\r\n      cColor: 'Teal',\r\n      cPrice: 72430,\r\n      cCondition: 1,\r\n      createdDate: '07/31/2017',\r\n      cStatus: 0,\r\n      cVINCode: 'KMHGH4JH2DU676107',\r\n    },\r\n    {\r\n      id: 13,\r\n      cModel: 'XL7',\r\n      cManufacture: 'Suzuki',\r\n      cModelYear: 2009,\r\n      cMileage: 165165,\r\n      // tslint:disable-next-line:max-line-length\r\n      cDescription: `The Suzuki XL-7 (styled as XL7 for the second generation) is Suzuki's mid-sized SUV that was made from 1998 to 2009, over two generations. It was slotted above the Grand Vitara in Suzuki's lineup.`,\r\n      cColor: 'Puce',\r\n      cPrice: 118667,\r\n      cCondition: 0,\r\n      createdDate: '02/04/2018',\r\n      cStatus: 0,\r\n      cVINCode: '1N6AF0LX9EN733005',\r\n    },\r\n    {\r\n      id: 14,\r\n      cModel: 'SJ 410',\r\n      cManufacture: 'Suzuki',\r\n      cModelYear: 1984,\r\n      cMileage: 176074,\r\n      // tslint:disable-next-line:max-line-length\r\n      cDescription: `The SJ-Series was introduced to the United States (Puerto Rico (SJ-410) and Canada earlier) in 1985 for the 1986 cModel year. It was cPriced at $6200 and 47,000 were sold in its first year. The Samurai had a 1.3 liter, 63 hp (47 kW), 4-cylinder engine and was available as a convertible or a hardtop, and with or without a rear seat. The Suzuki Samurai became intensely popular within the serious 4WD community for its good off-road performance and reliability compared to other 4WDs of the time. This is due to the fact that while very compact and light, it is a real 4WD vehicle equipped with a transfer case, switchable 4WD and low range. Its lightness makes it a very nimble off-roader less prone to sinking in softer ground than heavier types. It is also considered a great beginner off-roader due to its simple design and ease of engine and suspension modifications.`,\r\n      cColor: 'Orange',\r\n      cPrice: 84325,\r\n      cCondition: 0,\r\n      createdDate: '12/22/2017',\r\n      cStatus: 0,\r\n      cVINCode: '2C3CDYBT6DH183756',\r\n    },\r\n    {\r\n      id: 15,\r\n      cModel: 'F-Series',\r\n      cManufacture: 'Ford',\r\n      cModelYear: 1995,\r\n      cMileage: 53030,\r\n      // tslint:disable-next-line:max-line-length\r\n      cDescription: `The Ford F-Series is a series of light-duty trucks and medium-duty trucks (Class 2-7) that have been marketed and cManufactured by Ford Motor Company since 1948. While most variants of the F-Series trucks are full-size pickup trucks, the F-Series also includes chassis cab trucks and commercial vehicles. The Ford F-Series has been the best-selling vehicle in the United States since 1986 and the best-selling pickup since 1977.[1][2] It is also the best selling vehicle in Canada.[3] As of the 2018 cModel year, the F-Series generates $41.0 billion in annual revenue for Ford, making the F-Series brand more valuable than Coca-Cola and Nike.`,\r\n      cColor: 'Aquamarine',\r\n      cPrice: 77108,\r\n      cCondition: 0,\r\n      createdDate: '01/09/2018',\r\n      cStatus: 0,\r\n      cVINCode: 'WBAVB33526P873481',\r\n    },\r\n    {\r\n      id: 16,\r\n      cModel: 'HS',\r\n      cManufacture: 'Lexus',\r\n      cModelYear: 2011,\r\n      cMileage: 84718,\r\n      // tslint:disable-next-line:max-line-length\r\n      cDescription: `The Lexus HS (Japanese: レクサス・HS, Rekusasu HS) is a dedicated hybrid vehicle introduced by Lexus as a new entry-level luxury compact sedan in 2009.[2] Built on the Toyota New MC platform,[3] it is classified as a compact under Japanese regulations concerning vehicle exterior dimensions and engine displacement. Unveiled at the North American International Auto Show in January 2009, the HS 250h went on sale in July 2009 in Japan, followed by the United States in August 2009 as a 2010 cModel. The HS 250h represented the first dedicated hybrid vehicle in the Lexus lineup, as well as the first offered with an inline-four gasoline engine.[4] Bioplastic materials are used for the vehicle interior.[5] With a total length of 184.8 inches, the Lexus HS is slightly larger than the Lexus IS, but still smaller than the mid-size Lexus ES.`,\r\n      cColor: 'Purple',\r\n      cPrice: 140170,\r\n      cCondition: 0,\r\n      createdDate: '11/14/2017',\r\n      cStatus: 1,\r\n      cVINCode: '1FTWF3A56AE545514',\r\n    },\r\n    {\r\n      id: 17,\r\n      cModel: 'Land Cruiser',\r\n      cManufacture: 'Toyota',\r\n      cModelYear: 2008,\r\n      cMileage: 157019,\r\n      // tslint:disable-next-line:max-line-length\r\n      cDescription: `Production of the first generation Land Cruiser began in 1951 (90 units) as Toyota's version of a Jeep-like vehicle.[2][3] The Land Cruiser has been produced in convertible, hardtop, station wagon and cab chassis versions. The Land Cruiser's reliability and longevity has led to huge popularity, especially in Australia where it is the best-selling body-on-frame, four-wheel drive vehicle.[4] Toyota also extensively tests the Land Cruiser in the Australian outback – considered to be one of the toughest operating environments in both temperature and terrain. In Japan, the Land Cruiser is exclusive to Toyota Japanese dealerships called Toyota Store.`,\r\n      cColor: 'Crimson',\r\n      cPrice: 72638,\r\n      cCondition: 1,\r\n      createdDate: '08/08/2017',\r\n      cStatus: 1,\r\n      cVINCode: '3C3CFFDR2FT957799',\r\n    },\r\n    {\r\n      id: 18,\r\n      cModel: 'Wrangler',\r\n      cManufacture: 'Jeep',\r\n      cModelYear: 1994,\r\n      cMileage: 55857,\r\n      // tslint:disable-next-line:max-line-length\r\n      cDescription: `The Jeep Wrangler is a series of compact and mid-size (Wrangler Unlimited and Wrangler 4-door JL) four-wheel drive off-road vehicle cModels, cManufactured by Jeep since 1986, and currently migrating from its third into its fourth generation. The Wrangler JL was unveiled in late 2017 and will be produced at Jeep's Toledo Complex.`,\r\n      cColor: 'Red',\r\n      cPrice: 193523,\r\n      cCondition: 0,\r\n      createdDate: '02/28/2018',\r\n      cStatus: 1,\r\n      cVINCode: '3C4PDCAB7FT652291',\r\n    },\r\n    {\r\n      id: 19,\r\n      cModel: 'Sunbird',\r\n      cManufacture: 'Pontiac',\r\n      cModelYear: 1994,\r\n      cMileage: 165202,\r\n      // tslint:disable-next-line:max-line-length\r\n      cDescription: `The Pontiac Sunbird is an automobile that was produced by Pontiac, initially as a subcompact for the 1976 to 1980 cModel years, and later as a compact for the 1982 to 1994 cModel years. The Sunbird badge ran for 18 years (with a hiatus during the 1981 and 1982 cModel years, as the 1982 cModel was called J2000) and was then replaced in 1995 by the Pontiac Sunfire. Through the years the Sunbird was available in notchback coupé, sedan, hatchback, station wagon, and convertible body styles.`,\r\n      cColor: 'Blue',\r\n      cPrice: 198739,\r\n      cCondition: 0,\r\n      createdDate: '05/13/2017',\r\n      cStatus: 1,\r\n      cVINCode: '1GD22XEG9FZ103872',\r\n    },\r\n    {\r\n      id: 20,\r\n      cModel: 'A4',\r\n      cManufacture: 'Audi',\r\n      cModelYear: 1998,\r\n      cMileage: 117958,\r\n      // tslint:disable-next-line:max-line-length\r\n      cDescription: `The A4 has been built in five generations and is based on the Volkswagen Group B platform. The first generation A4 succeeded the Audi 80. The automaker's internal numbering treats the A4 as a continuation of the Audi 80 lineage, with the initial A4 designated as the B5-series, followed by the B6, B7, B8 and the B9. The B8 and B9 versions of the A4 are built on the Volkswagen Group MLB platform shared with many other Audi cModels and potentially one Porsche cModel within Volkswagen Group`,\r\n      cColor: 'Yellow',\r\n      cPrice: 159377,\r\n      cCondition: 0,\r\n      createdDate: '12/15/2017',\r\n      cStatus: 1,\r\n      cVINCode: '2C3CDXCT2FH350366',\r\n    },\r\n    {\r\n      id: 21,\r\n      cModel: 'Camry Solara',\r\n      cManufacture: 'Toyota',\r\n      cModelYear: 2006,\r\n      cMileage: 22436,\r\n      // tslint:disable-next-line:max-line-length\r\n      cDescription: `The Toyota Camry Solara, popularly known as the Toyota Solara, is a mid-size coupe/convertible built by Toyota. The Camry Solara is mechanically based on the Toyota Camry and effectively replaced the discontinued Camry Coupe (XV10); however, in contrast with its predecessor's conservative design, the Camry Solara was designed with a greater emphasis on sportiness, with more rakish styling, and uprated suspension and engine tuning intended to provide a sportier feel.[5] The coupe was launched in late 1998 as a 1999 cModel.[1] In 2000, the convertible was introduced, effectively replacing the Celica convertible in Toyota's North American lineup`,\r\n      cColor: 'Green',\r\n      cPrice: 122562,\r\n      cCondition: 0,\r\n      createdDate: '07/11/2017',\r\n      cStatus: 0,\r\n      cVINCode: '3C3CFFHH6DT874066',\r\n    },\r\n    {\r\n      id: 22,\r\n      cModel: 'Tribeca',\r\n      cManufacture: 'Subaru',\r\n      cModelYear: 2007,\r\n      cMileage: 127958,\r\n      // tslint:disable-next-line:max-line-length\r\n      cDescription: `The Subaru Tribeca is a mid-size crossover SUV made from 2005 to 2014. Released in some markets, including Canada, as the Subaru B9 Tribeca, the name \"Tribeca\" derives from the Tribeca neighborhood of New York City.[1] Built on the Subaru Legacy platform and sold in five- and seven-seat configurations, the Tribeca was intended to be sold alongside a slightly revised version known as the Saab 9-6. Saab, at the time a subsidiary of General Motors (GM), abandoned the 9-6 program just prior to its release subsequent to GM's 2005 divestiture of its 20 percent stake in FHI.`,\r\n      cColor: 'Yellow',\r\n      cPrice: 90221,\r\n      cCondition: 1,\r\n      createdDate: '11/12/2017',\r\n      cStatus: 0,\r\n      cVINCode: 'WVWGU7AN9AE957575',\r\n    },\r\n    {\r\n      id: 23,\r\n      cModel: '1500 Club Coupe',\r\n      cManufacture: 'GMC',\r\n      cModelYear: 1997,\r\n      cMileage: 95783,\r\n      // tslint:disable-next-line:max-line-length\r\n      cDescription: `GMC (General Motors Truck Company), formally the GMC Division of General Motors LLC, is a division of the American automobile cManufacturer General Motors (GM) that primarily focuses on trucks and utility vehicles. GMC sells pickup and commercial trucks, buses, vans, military vehicles, and sport utility vehicles marketed worldwide by General Motors.`,\r\n      cColor: 'Teal',\r\n      cPrice: 64376,\r\n      cCondition: 1,\r\n      createdDate: '06/28/2017',\r\n      cStatus: 0,\r\n      cVINCode: 'SCFBF04BX7G920997',\r\n    },\r\n    {\r\n      id: 24,\r\n      cModel: 'Firebird',\r\n      cManufacture: 'Pontiac',\r\n      cModelYear: 2002,\r\n      cMileage: 74063,\r\n      // tslint:disable-next-line:max-line-length\r\n      cDescription: `The Pontiac Firebird is an American automobile built by Pontiac from the 1967 to the 2002 cModel years. Designed as a pony car to compete with the Ford Mustang, it was introduced 23 February 1967, the same cModel year as GM's Chevrolet division platform-sharing Camaro.[1] This also coincided with the release of the 1967 Mercury Cougar, Ford's upscale, platform-sharing version of the Mustang. The name \"Firebird\" was also previously used by GM for the General Motors Firebird 1950s and early-1960s`,\r\n      cColor: 'Puce',\r\n      cPrice: 94178,\r\n      cCondition: 1,\r\n      createdDate: '09/13/2017',\r\n      cStatus: 0,\r\n      cVINCode: '3C63D2JL5CG563879',\r\n    },\r\n    {\r\n      id: 25,\r\n      cModel: 'RAV4',\r\n      cManufacture: 'Toyota',\r\n      cModelYear: 1996,\r\n      cMileage: 99461,\r\n      // tslint:disable-next-line:max-line-length\r\n      cDescription: `The Toyota RAV4 (Japanese: トヨタ RAV4 Toyota Ravufō) is a compact crossover SUV (sport utility vehicle) produced by the Japanese automobile cManufacturer Toyota. This was the first compact crossover SUV;[1] it made its debut in Japan and Europe in 1994,[2] and in North America in 1995. The vehicle was designed for consumers wanting a vehicle that had most of the benefits of SUVs, such as increased cargo room, higher visibility, and the option of full-time four-wheel drive, along with the maneuverability and fuel economy of a compact car. Although not all RAV4s are four-wheel-drive, RAV4 stands for \"Recreational Activity Vehicle: 4-wheel drive\", because the aforementioned equipment is an option in select countries`,\r\n      cColor: 'Goldenrod',\r\n      cPrice: 48342,\r\n      cCondition: 0,\r\n      createdDate: '12/29/2017',\r\n      cStatus: 0,\r\n      cVINCode: '2C4RDGDG6DR836144',\r\n    },\r\n    {\r\n      id: 26,\r\n      cModel: 'Amanti / Opirus',\r\n      cManufacture: 'Kia',\r\n      cModelYear: 2007,\r\n      cMileage: 189651,\r\n      // tslint:disable-next-line:max-line-length\r\n      cDescription: `The Kia Opirus was an executive car cManufactured and marketed by Kia Motors that was launched in April 2003 and was marketed globally under various nameplates, prominently as the Amanti. It was considered to be Kia's flagship vehicle.`,\r\n      cColor: 'Indigo',\r\n      cPrice: 44292,\r\n      cCondition: 1,\r\n      createdDate: '09/01/2017',\r\n      cStatus: 1,\r\n      cVINCode: '1C4SDHCT2CC055294',\r\n    },\r\n    {\r\n      id: 27,\r\n      cModel: 'S60',\r\n      cManufacture: 'Volvo',\r\n      cModelYear: 2001,\r\n      cMileage: 78963,\r\n      // tslint:disable-next-line:max-line-length\r\n      cDescription: `First introduced in 2004, Volvo's S60 R used a Haldex all-wheel-drive system mated to a 300 PS (221 kW; 296 hp) / 400 N⋅m (300 lbf⋅ft) inline-5. The 2004–2005 cModels came with a 6-speed manual transmission, or an available 5-speed automatic which allowed only 258 lb⋅ft (350 N⋅m) torque in 1st and 2nd gears. The 2006–2007 cModels came with a 6-speed manual or 6-speed automatic transmission (which was no longer torque-restricted)`,\r\n      cColor: 'Goldenrod',\r\n      cPrice: 9440,\r\n      cCondition: 0,\r\n      createdDate: '11/06/2017',\r\n      cStatus: 0,\r\n      cVINCode: '3C6TD5CT5CG316067',\r\n    },\r\n    {\r\n      id: 28,\r\n      cModel: 'Grand Marquis',\r\n      cManufacture: 'Mercury',\r\n      cModelYear: 1984,\r\n      cMileage: 153027,\r\n      // tslint:disable-next-line:max-line-length\r\n      cDescription: `The Mercury Grand Marquis is an automobile that was sold by the Mercury division of Ford Motor Company from 1975 to 2011. From 1975 to 1982, it was the premium cModel of the Mercury Marquis cModel line, becoming a standalone cModel line in 1983. For its entire production run, the Grand Marquis served as the flagship of the Mercury line, with the Ford (LTD) Crown Victoria serving as its Ford counterpart. In addition, from 1979 to 2011, the Grand Marquis shared the rear-wheel drive Panther platform alongside the Lincoln Town Car`,\r\n      cColor: 'Goldenrod',\r\n      cPrice: 76027,\r\n      cCondition: 0,\r\n      createdDate: '12/16/2017',\r\n      cStatus: 1,\r\n      cVINCode: '3C3CFFJH2DT871398',\r\n    },\r\n    {\r\n      id: 29,\r\n      cModel: 'Talon',\r\n      cManufacture: 'Eagle',\r\n      cModelYear: 1991,\r\n      cMileage: 111234,\r\n      // tslint:disable-next-line:max-line-length\r\n      cDescription: `Cosmetically, differences between the three were found in wheels, availability of cColors, tail lights, front and rear bumpers, and spoilers. The Talon featured two-tone body cColor with a black 'greenhouse' (roof, pillars, door-mounted mirrors) regardless of the body cColor. The variants featured 5-speed manual or 4-speed automatic transmissions and a hood bulge on the left-hand side of the car in order for camshaft clearance on the 4G63 engine. The base cModel DL did not use this engine but still had a bulge as evident in the 1992 Talon brochure. 2nd Generation cars all had such a bulge, even with the inclusion of the 420A engine`,\r\n      cColor: 'Teal',\r\n      cPrice: 157216,\r\n      cCondition: 0,\r\n      createdDate: '05/08/2017',\r\n      cStatus: 1,\r\n      cVINCode: 'YV1902FH1D2957659',\r\n    },\r\n    {\r\n      id: 30,\r\n      cModel: 'Passport',\r\n      cManufacture: 'Honda',\r\n      cModelYear: 2002,\r\n      cMileage: 3812,\r\n      // tslint:disable-next-line:max-line-length\r\n      cDescription: `The Passport was a part of a partnership between Isuzu and Honda in the 1990s, which saw an exchange of passenger vehicles from Honda to Isuzu, such as the Isuzu Oasis, and trucks from Isuzu to Honda, such as the Passport and Acura SLX. This arrangement was convenient for both companies, as Isuzu discontinued passenger car production in 1993 after a corporate restructuring, and Honda was in desperate need a SUV, a segment that was growing in popularity in North America as well as Japan during the 1990s. The partnership ended in 2002 with the discontinuation of the Passport in favor of the Honda-engineered Pilot`,\r\n      cColor: 'Puce',\r\n      cPrice: 41299,\r\n      cCondition: 1,\r\n      createdDate: '03/08/2018',\r\n      cStatus: 0,\r\n      cVINCode: 'WVWEU9AN4AE524071',\r\n    },\r\n    {\r\n      id: 31,\r\n      cModel: 'H3',\r\n      cManufacture: 'Hummer',\r\n      cModelYear: 2006,\r\n      cMileage: 196321,\r\n      // tslint:disable-next-line:max-line-length\r\n      cDescription: `The Hummer H3 is a sport utility vehicle/off-road vehicle from Hummer that was produced from 2005 to 2010. Introduced for the 2006 cModel year, it was based on a highly modified GMT355 underpinning the Chevrolet cColorado/GMC Canyon compact pickup trucks that were also built at GM's Shreveport Operations in Shreveport, Louisiana and the Port Elizabeth plant in South Africa. The H3 was actually the smallest among the Hummer cModels. It was available either as a traditional midsize SUV or as a midsize pickup known as the H3T`,\r\n      cColor: 'Pink',\r\n      cPrice: 186964,\r\n      cCondition: 1,\r\n      createdDate: '06/04/2017',\r\n      cStatus: 1,\r\n      cVINCode: '4T1BF1FK4FU746230',\r\n    },\r\n    {\r\n      id: 32,\r\n      cModel: 'Comanche',\r\n      cManufacture: 'Jeep',\r\n      cModelYear: 1992,\r\n      cMileage: 72285,\r\n      // tslint:disable-next-line:max-line-length\r\n      cDescription: `The Jeep Comanche (designated MJ) is a pickup truck variant of the Cherokee compact SUV (1984–2001)[3] cManufactured and marketed by Jeep for cModel years 1986-1992 in rear wheel (RWD) and four-wheel drive (4WD) cModels as well as two cargo bed lengths: six-feet (1.83 metres) and seven-feet (2.13 metres)`,\r\n      cColor: 'Mauv',\r\n      cPrice: 145971,\r\n      cCondition: 1,\r\n      createdDate: '09/01/2017',\r\n      cStatus: 0,\r\n      cVINCode: '1J4PN2GK1BW745045',\r\n    },\r\n    {\r\n      id: 33,\r\n      cModel: 'Blazer',\r\n      cManufacture: 'Chevrolet',\r\n      cModelYear: 1993,\r\n      cMileage: 189804,\r\n      // tslint:disable-next-line:max-line-length\r\n      cDescription: `The 2014 – 2nd generation, MY14 Duramax 2.8L diesel engines have several new parts, namely a new water-cooled variable-geometry turbocharger, a new high-pressure common-rail fuel delivery system, a new exhaust gas recirculation (EGR) system, a new intake manifold, a new cylinder head, a new cylinder block, a new balance shaft unit and a new Engine Control Module (ECM). and now produce 197 hp and 369 Ft/Lbs of torque`,\r\n      cColor: 'Indigo',\r\n      cPrice: 154594,\r\n      cCondition: 0,\r\n      createdDate: '09/13/2017',\r\n      cStatus: 0,\r\n      cVINCode: '1G6KD57Y43U482896',\r\n    },\r\n    {\r\n      id: 34,\r\n      cModel: 'Envoy XUV',\r\n      cManufacture: 'GMC',\r\n      cModelYear: 2004,\r\n      cMileage: 187960,\r\n      // tslint:disable-next-line:max-line-length\r\n      cDescription: `The GMC Envoy is a mid-size SUV that was produced by General Motors. It was introduced for the 1998 cModel year. After the first generation Envoy was discontinued after the 2000 cModel year, but the Envoy was reintroduced and redesigned for the 2002 cModel year, and it was available in the GMC line of vehicles from the 2002 to 2009 cModel years`,\r\n      cColor: 'Turquoise',\r\n      cPrice: 185103,\r\n      cCondition: 1,\r\n      createdDate: '12/07/2017',\r\n      cStatus: 0,\r\n      cVINCode: '5GAER23D09J658030',\r\n    },\r\n  ];\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { AuthModel } from '../../_models/auth.model';\r\n\r\nconst TOKEN_KEY = 'auth-token';\r\nconst USER_KEY = 'auth-user';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TokenStorageService {\r\n\r\n  constructor() { }\r\n\r\n  signOut(): void {\r\n    localStorage.clear();\r\n  }\r\n\r\n  public saveToken(token: string): void {\r\n    localStorage.setItem(TOKEN_KEY, token);\r\n  }\r\n\r\n  public getAuth(): AuthModel {\r\n    let authModel = new AuthModel();\r\n    if (localStorage.getItem(TOKEN_KEY)) {\r\n      authModel.accessToken = this.getToken();\r\n      authModel.refreshToken = this.getRefreshToken();\r\n    }\r\n    return authModel;\r\n  }\r\n\r\n  public getToken(): string {\r\n    let token = undefined;\r\n    if (localStorage.getItem(TOKEN_KEY))\r\n    {\r\n      token = JSON.parse(localStorage.getItem(TOKEN_KEY)).accessToken;\r\n    }\r\n    return token;\r\n  }\r\n\r\n  public getRefreshToken(): string {\r\n    let token = undefined;\r\n    if (localStorage.getItem(TOKEN_KEY))\r\n    {\r\n      token = JSON.parse(localStorage.getItem(TOKEN_KEY)).refreshToken;\r\n    }\r\n    return token;\r\n  }\r\n\r\n  public saveUser(user): void {\r\n    localStorage.removeItem(USER_KEY);\r\n    localStorage.setItem(USER_KEY, JSON.stringify(user));\r\n  }\r\n\r\n  public getUser(): any {\r\n    return JSON.parse(localStorage.getItem(USER_KEY));\r\n  }\r\n}","import { Component, OnInit } from '@angular/core';\r\nimport { RoomService as ModelService } from '../_services/room.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { RoomModel as Model } from '../_models/room.model';\r\nimport { FormGroup, AbstractControl, FormBuilder, Validators, FormControl } from '@angular/forms';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { Observable } from 'rxjs';\r\nimport { LazyLoadEvent } from 'primeng/api';\r\nimport { ConfirmationService } from 'primeng/api';\r\nimport { debounceTime, distinctUntilChanged } from 'rxjs/operators';\r\nimport { ToastService } from 'src/app/modules/toast/_services/toast.service';\r\nimport { AuthService } from 'src/app/modules/auth';\r\n\r\n@Component({\r\n    selector: 'app-rooms',\r\n    templateUrl: './rooms.component.html',\r\n    styleUrls: ['./rooms.component.scss']\r\n})\r\nexport class RoomsComponent implements OnInit {\r\n\r\n    public promiseForm: Promise<any>;\r\n\r\n    public models: Model[];\r\n    public selectedModels: Model[];\r\n\r\n    public page: number;\r\n    public total_page: number;\r\n    public per_page: number;\r\n    public totalRecords: number;\r\n\r\n    public sort: string;\r\n    public query: string;\r\n    public filters: { key: string, value: string }[];\r\n    public _with: { key: string, value: string }[];\r\n\r\n    public formGroup: FormGroup;\r\n    public room_id_filter: AbstractControl;\r\n    public department_id_filter: AbstractControl;\r\n    public venue_id_filter: AbstractControl;\r\n\r\n    searchGroup: FormGroup;\r\n\r\n    public requesting: boolean;\r\n\r\n    public confirmDialogPosition: string;\r\n    public message_confirm_delete: string;\r\n\r\n    public showTableCheckbox: boolean;\r\n\r\n    public spaceId: number;\r\n    public parent: string;\r\n\r\n    constructor(\r\n        public modelsService: ModelService,\r\n        public translate: TranslateService,\r\n        private router: Router,\r\n        private route: ActivatedRoute,\r\n        private confirmationService: ConfirmationService,\r\n        private toastService: ToastService,\r\n        public authService: AuthService,\r\n        fb: FormBuilder) {\r\n        this.formGroup = fb.group({\r\n            'room_id_filter': [''],\r\n            'department_id_filter': [''],\r\n            'venue_id_filter': [''],\r\n        });\r\n        this.room_id_filter = this.formGroup.controls['room_id_filter'];\r\n        this.department_id_filter = this.formGroup.controls['department_id_filter'];\r\n        this.venue_id_filter = this.formGroup.controls['venue_id_filter'];\r\n\r\n        this.searchGroup = fb.group({\r\n            searchTerm: [''],\r\n        });\r\n\r\n        this.translate.get('COMMON.MESSAGE_CONFIRM_DELETE').subscribe((res: string) => {\r\n            this.message_confirm_delete = res;\r\n        });\r\n\r\n        this.showTableCheckbox = false;\r\n        this.parent = '';\r\n\r\n        this.page = 1;\r\n        this.total_page = 0;\r\n        this.per_page = 100\r\n        this.totalRecords = 0;\r\n\r\n        this.requesting = false;\r\n\r\n        this.confirmDialogPosition = 'right';\r\n\r\n        this.models = [];\r\n        this.selectedModels = [];\r\n        // this.getModels();\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.requesting = false;\r\n\r\n        this._with = [];\r\n        this._with.push({key: 'include[]', value: 'functionary.*'})\r\n    }\r\n\r\n    public loadLazy(event?: LazyLoadEvent) {\r\n        if (event) {\r\n            this.page = (event.first / this.per_page) + 1;\r\n            if (event.sortField) {\r\n                if (event.sortOrder === -1) {\r\n                    this.sort = '-' + event.sortField;\r\n                } else {\r\n                    this.sort = event.sortField;\r\n                }\r\n            } else {\r\n                this.sort = '-id';\r\n            }\r\n\r\n            if (event.globalFilter) {\r\n                this.query = event.globalFilter;\r\n            } else {\r\n                this.query = undefined;\r\n            }\r\n\r\n            if (event.rows) {\r\n                this.per_page = event.rows;\r\n            }    \r\n        }\r\n\r\n        this.filters = [];\r\n        if (this.route.parent.parent.parent.snapshot.url.length > 0) {\r\n            this.route.parent.parent.parent.params.subscribe((params) => {\r\n                if (this.route.parent.parent.parent.parent.parent.snapshot.url.length > 0) {\r\n                    this.spaceId = params.id;\r\n                    this.parent = '/' + this.route.parent.parent.parent.parent.parent.snapshot.url[0].path + '/edit/' + this.spaceId;\r\n                    this.filters.push({ key: 'filter{space}', value: this.spaceId.toString() })\r\n                }\r\n                this.getModels();\r\n            });\r\n        } else {\r\n            this.getModels();\r\n        }\r\n    }\r\n\r\n    public getModels() {\r\n        this.requesting = true;\r\n        this.modelsService.get(this.page, this.per_page, this.sort, this.query, this.filters, this._with).toPromise().then(\r\n            response => {\r\n                this.requesting = false;\r\n                // this.models = response.rooms;\r\n                this.models = [];\r\n                response.rooms.forEach(element => {\r\n                    this.models.push(element);\r\n                });\r\n                if(response.functionaries){\r\n                    response.functionaries.forEach(functionary => {\r\n                        this.models.forEach(element => {\r\n                            if (element.functionary === functionary.id) {\r\n                                element.functionary = functionary;\r\n                            }\r\n                        });\r\n                    });\r\n                }\r\n                this.totalRecords = response.meta.total_results;\r\n            },\r\n            error => {\r\n                this.requesting = false;\r\n                if (error.status == 404) {\r\n                    this.toastService.growl('error', 'Not Found')\r\n                } else {\r\n                    let messageError = [];\r\n                    if (!Array.isArray(error.error)) {\r\n                        messageError.push(error.error);\r\n                    } else {\r\n                        messageError = error.error;\r\n                    }\r\n                    Object.entries(messageError).forEach(\r\n                        ([key, value]) => this.toastService.growl('error', key + ': ' + value)\r\n                    );\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n    // public showDeleteDialog(user: Model) {\r\n    //     let message;\r\n    //     this.translate.get('Do you want to delete?').subscribe((res: string) => {\r\n    //         message = res;\r\n    //     });\r\n\r\n    //     let header;\r\n    //     this.translate.get('Delete Confirmation').subscribe((res: string) => {\r\n    //         header = res;\r\n    //     });\r\n\r\n    //     this.confirmationService.confirm({\r\n    //         message: message,\r\n    //         header: header,\r\n    //         icon: 'fa fa-trash',\r\n    //         accept: () => {\r\n    //             this.delete(user);\r\n    //         }\r\n    //     });\r\n    // }\r\n\r\n    public delete(id) {\r\n        this.modelsService.delete(id).toPromise().then(\r\n            response => {\r\n                this.toastService.growl('success', 'Delete');\r\n                this.getModels();\r\n            },\r\n            error => {\r\n                if (error.status == 404) {\r\n                    this.toastService.growl('error', 'Not Found')\r\n                } else {\r\n                    let messageError = [];\r\n                    if (!Array.isArray(error.error)) {\r\n                        messageError.push(error.error);\r\n                    } else {\r\n                        messageError = error.error;\r\n                    }\r\n                    Object.entries(messageError).forEach(\r\n                        ([key, value]) => this.toastService.growl('error', key + ': ' + value)\r\n                    );\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n    public patch(values: Model) {\r\n        const param = {\r\n            // 'activated': values.activated\r\n        };\r\n        if (values) {\r\n            const promise = this.modelsService.patch(values.id, param);\r\n            this.promiseForm = promise.toPromise().then(\r\n                response => {\r\n                    this.toastService.growl('success', 'Patch');\r\n                },\r\n                error => {\r\n                    if (error.status == 404) {\r\n                        this.toastService.growl('error', 'Not Found')\r\n                    } else {\r\n                        let messageError = [];\r\n                        if (!Array.isArray(error.error)) {\r\n                            messageError.push(error.error);\r\n                        } else {\r\n                            messageError = error.error;\r\n                        }\r\n                        Object.entries(messageError).forEach(\r\n                            ([key, value]) => this.toastService.growl('error', key + ': ' + value)\r\n                        );\r\n                    }\r\n                }\r\n            );\r\n        }\r\n    }\r\n\r\n    confirm(id, room: string) {\r\n        this.confirmDialogPosition = room;\r\n        this.confirmationService.confirm({\r\n            message: 'Are you sure that you want to delete?',\r\n            accept: () => {\r\n                this.delete(id);\r\n            }\r\n        });\r\n    }\r\n}\r\n","<div class=\"card card-custom gutter-b\">\r\n  <div class=\"card-header\">\r\n    <div class=\"card-title\">\r\n      <h3 class=\"card-label\">{{ 'COMMON.LIST' | translate }}</h3>\r\n    </div>\r\n    <div class=\"card-toolbar\">\r\n      <a type=\"button\" class=\"btn btn-primary\" *ngIf=\"authService.hasPermission('add_room')\" routerLink=\"{{parent}}/rooms/add\">{{ 'COMMON.NEW' | translate }}</a>\r\n    </div>\r\n  </div>\r\n  <div class=\"card-body\">\r\n    <!-- begin: Filtration form -->\r\n    <div class=\"form form-label-right\">\r\n      <div class=\"form-group row\">\r\n        <div class=\"col-lg-6\">\r\n          {{ 'COMMON.FILTER' | translate }}\r\n        </div>\r\n        <div class=\"col-lg-6\" [formGroup]=\"searchGroup\">\r\n          <input type=\"text\" class=\"form-control\" name=\"searchText\" placeholder=\"{{ 'COMMON.SEARCH' | translate }}\" value=\"\" (input)=\"dt.filterGlobal($event.target.value, 'contains')\"\r\n            formControlName=\"searchTerm\" /><small class=\"form-text text-muted\"><b>{{ 'COMMON.SEARCH' | translate }}</b> {{ 'COMMON.IN' | translate }} id</small>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <!-- end: Filtration form -->\r\n\r\n    <!-- begin:Table -->\r\n    <p-table #dt [value]=\"models\" [(selection)]=\"selectedModels\" dataKey=\"id\" styleClass=\"p-datatable-striped p-datatable-sm\" [rowHover]=\"true\"\r\n    [rows]=\"per_page\" [showCurrentPageReport]=\"true\" [rowsPerPageOptions]=\"[5,10,25,50,100]\"\r\n    [paginator]=\"true\" currentPageReportTemplate=\"{{ 'COMMON.SHOWING' | translate }} {{ 'COMMON.FROM' | translate }} {first} {{ 'COMMON.TO' | translate }} {last} {{ 'COMMON.OF' | translate }} {totalRecords} {{ 'COMMON.RECORDS' | translate }}\"\r\n    [filterDelay]=\"1000\" [globalFilterFields]=\"['id','number_room']\" [lazy]=\"true\" (onLazyLoad)=\"loadLazy($event)\"\r\n    [totalRecords]=\"totalRecords\" [showJumpToPageDropdown]=\"false\" [minBufferPx]=\"1\" [showLoader]=\"true\" [loading]=\"requesting\">\r\n      <ng-template pTemplate=\"header\">\r\n        <tr>\r\n          <th style=\"width: 3rem\" *ngIf=\"showTableCheckbox\">\r\n            <p-tableHeaderCheckbox></p-tableHeaderCheckbox>\r\n          </th>\r\n          <th pSortableColumn=\"id\">\r\n            <div class=\"p-d-flex p-jc-between p-ai-center\">\r\n              {{ 'ROOM.ID' | translate }}\r\n            </div>\r\n          </th>\r\n          <th pSortableColumn=\"name\">\r\n            <div class=\"p-d-flex p-jc-between p-ai-center\">\r\n              {{ 'ROOM.NAME' | translate }} \r\n            </div>\r\n          </th>\r\n          <th pSortableColumn=\"number_room\">\r\n            <div class=\"p-d-flex p-jc-between p-ai-center\">\r\n              {{ 'ROOM.NUMBER_ROOM' | translate }}\r\n            </div>\r\n          </th>\r\n          <th pSortableColumn=\"functionary\">\r\n            <div class=\"p-d-flex p-jc-between p-ai-center\">\r\n              {{ 'ROOM.FUNCTIONARY' | translate }}\r\n            </div>\r\n          </th>\r\n          <th pSortableColumn=\"created_at\">\r\n            <div class=\"p-d-flex p-jc-between p-ai-center\">\r\n              {{ 'COMMON.CREATED_AT' | translate }}\r\n              <!-- <p-sortIcon field=\"date_joined\"></p-sortIcon>\r\n              <p-columnFilter type=\"date_joined\" field=\"date_joined\" display=\"menu\" class=\"p-ml-auto\"></p-columnFilter> -->\r\n            </div>\r\n          </th>\r\n          <th style=\"width: 10rem\" *ngIf=\"authService.hasPermission('change_room') || authService.hasPermission('delete_room')\">\r\n            <div class=\"p-d-flex p-jc-between p-ai-center\">\r\n              {{ 'COMMON.ACTION' | translate }}\r\n              <!-- <p-sortIcon field=\"date_joined\"></p-sortIcon>\r\n              <p-columnFilter type=\"date_joined\" field=\"date_joined\" display=\"menu\" class=\"p-ml-auto\"></p-columnFilter> -->\r\n            </div>\r\n          </th>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"body\" let-value>\r\n        <tr class=\"p-selectable-row\">\r\n          <td *ngIf=\"showTableCheckbox\">\r\n            <p-tableCheckbox [value]=\"value\"></p-tableCheckbox>\r\n          </td>\r\n          <td>\r\n            {{value.id}}\r\n          </td>\r\n          <td>\r\n            {{value.name}}\r\n          </td>\r\n          <td>\r\n            {{value.number_room}}\r\n          </td>\r\n          <td>\r\n            {{value.functionary?.name}}\r\n          </td>\r\n          <td>\r\n            {{value.created_at | date: 'MM/dd/yyyy'}}\r\n          </td>\r\n          <td style=\"text-align: right\" *ngIf=\"authService.hasPermission('change_room') || authService.hasPermission('delete_room')\">\r\n            <a title=\"{{ 'COMMON.EDIT' | translate }}\" class=\"btn btn-icon btn-light btn-hover-primary btn-sm\" style=\"margin-right: 5px;\"\r\n              routerLink=\"{{parent}}/rooms/edit/{{value.id}}\"  *ngIf=\"authService.hasPermission('change_room')\">\r\n              <span [inlineSVG]=\"'./assets/media/svg/icons/Communication/Write.svg'\" cacheSVG=\"true\"\r\n                class=\"svg-icon svg-icon-md svg-icon-primary\">\r\n              </span>\r\n            </a>\r\n            <a title=\"{{ 'COMMON.DELETE' | translate }}\" class=\"btn btn-icon btn-light btn-hover-danger btn-sm\"\r\n              (click)=\"confirm(value.id, 'right')\" *ngIf=\"authService.hasPermission('delete_room')\">\r\n              <span [inlineSVG]=\"'./assets/media/svg/icons/General/Trash.svg'\" cacheSVG=\"true\"\r\n                class=\"svg-icon svg-icon-md svg-icon-danger\">\r\n              </span>\r\n            </a>\r\n          </td>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"emptymessage\">\r\n        <tr>\r\n          <td colspan=\"6\" class=\"text-center\">{{ 'COMMON.NO_ITEMS_FOUND' | translate }}</td>\r\n        </tr>\r\n      </ng-template>\r\n    </p-table>\r\n    <!-- end: Table -->\r\n  </div>\r\n</div>\r\n\r\n<p-confirmDialog header=\"{{ 'COMMON.CONFIRMATION' | translate }}\" icon=\"pi pi-exclamation-triangle\" [position]=\"confirmDialogPosition\"></p-confirmDialog>","// #fake-start#\r\n// export { AuthHTTPService } from './fake/auth-fake-http.service'; // You have to comment this, when your real back-end is done\r\n// #fake-end#\r\n\r\n// #real-start#\r\nexport { AuthHTTPService } from './auth-http.service'; // You have to uncomment this, when your real back-end is done\r\n// #real-end#\r\n","import { ElementRef, Injectable } from '@angular/core';\r\nimport { animate, AnimationBuilder, style } from '@angular/animations';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class SplashScreenService {\r\n  // Private properties\r\n  private el: ElementRef;\r\n  private stopped: boolean;\r\n\r\n  /**\r\n   * Service constructor\r\n   *\r\n   * @param animationBuilder: AnimationBuilder\r\n   */\r\n  constructor(private animationBuilder: AnimationBuilder) {}\r\n\r\n  /**\r\n   * Init\r\n   *\r\n   * @param element: ElementRef\r\n   */\r\n  init(element: ElementRef) {\r\n    this.el = element;\r\n  }\r\n\r\n  /**\r\n   * Hide\r\n   */\r\n  hide() {\r\n    if (this.stopped || !this.el) {\r\n      return;\r\n    }\r\n\r\n    const player = this.animationBuilder\r\n      .build([style({ opacity: '1' }), animate(800, style({ opacity: '0' }))])\r\n      .create(this.el.nativeElement);\r\n\r\n    player.onDone(() => {\r\n      if (typeof this.el.nativeElement.remove === 'function') {\r\n        this.el.nativeElement.remove();\r\n      } else {\r\n        this.el.nativeElement.style.display = 'none !important';\r\n      }\r\n      this.stopped = true;\r\n    });\r\n\r\n    setTimeout(() => player.play(), 100);\r\n  }\r\n}\r\n","export { PermissionService } from './permission.service';","export class UserModel {\r\n  id: number;\r\n  username: string;\r\n  password: string;\r\n  fullname: string;\r\n  email: string;\r\n  is_active: boolean;\r\n  is_staff: boolean;\r\n  is_superuser: boolean;\r\n  user_permissions: any[];\r\n  userprofile: {\r\n    id: number;\r\n    bio: string;\r\n    avatar: string;\r\n    phone: string;\r\n    location: string;\r\n    birth_date: string;\r\n    occupation: string;\r\n    website: string;\r\n  }\r\n  groups: any[];\r\n  functionary: any;\r\n  companyName: string;\r\n  // personal information\r\n  first_name: string;\r\n  last_name: string;\r\n  // account information\r\n  language: string;\r\n  timeZone: string;\r\n  communication: {\r\n    email: boolean,\r\n    sms: boolean,\r\n    phone: boolean\r\n  };\r\n  // email settings\r\n  emailSettings: {\r\n    emailNotification: boolean,\r\n    sendCopyToPersonalEmail: boolean,\r\n    activityRelatesEmail: {\r\n      youHaveNewNotifications: boolean,\r\n      youAreSentADirectMessage: boolean,\r\n      someoneAddsYouAsAsAConnection: boolean,\r\n      uponNewOrder: boolean,\r\n      newMembershipApproval: boolean,\r\n      memberRegistration: boolean\r\n    },\r\n    updatesFromKeenthemes: {\r\n      newsAboutKeenthemesProductsAndFeatureUpdates: boolean,\r\n      tipsOnGettingMoreOutOfKeen: boolean,\r\n      thingsYouMissedSindeYouLastLoggedIntoKeen: boolean,\r\n      newsAboutMetronicOnPartnerProductsAndOtherServices: boolean,\r\n      tipsOnMetronicBusinessProducts: boolean\r\n    }\r\n  };\r\n  created_at: string;\r\n  updated_at: string;\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-space',\r\n  templateUrl: './space.component.html',\r\n})\r\nexport class SpaceComponent implements OnInit {\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n}\r\n","<router-outlet></router-outlet>\r\n","import { Component, forwardRef, Renderer2, ViewChild, Input, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { FunctionaryService as ModelsService } from '../../_services/functionary.service';\r\nimport { LazyLoadEvent } from 'primeng/api';\r\nimport { ToastService } from 'src/app/modules/toast/_services/toast.service';\r\nimport { AuthService } from 'src/app/modules/auth';\r\nexport const EPANDED_TEXTAREA_VALUE_ACCESSOR: any = {\r\n    provide: NG_VALUE_ACCESSOR,\r\n    useExisting: forwardRef(() => FunctionaryMultiselectComponent),\r\n    multi: true,\r\n};\r\n\r\n@Component({\r\n    selector: 'app-functionary-multiselect',\r\n    templateUrl: './functionary-multiselect.component.html',\r\n    styleUrls: ['./functionary-multiselect.component.scss'],\r\n    providers: [EPANDED_TEXTAREA_VALUE_ACCESSOR],\r\n})\r\nexport class FunctionaryMultiselectComponent implements ControlValueAccessor, OnInit {\r\n    @Input() model: any;\r\n    @Input() valid: boolean;\r\n    @Input() touched: boolean;\r\n    @Input() required: boolean;\r\n    @Input() disabled: boolean;\r\n    @Input() placeholder: string;\r\n    @Input() addFilters: { key: string, value: string }[];\r\n\r\n    public models: any[];\r\n\r\n    public onChange;\r\n    public onTouched;\r\n\r\n    public firstTime: boolean;\r\n    public totalRecords: number;\r\n    public page: number;\r\n    public per_page: number;\r\n    public sort: string;\r\n    public query: string;\r\n    public filters: { key: string, value: string }[];\r\n    public _with: { key: string, value: string }[];\r\n\r\n    public value: any;\r\n\r\n    constructor(\r\n        public modelsService: ModelsService,\r\n        public toastService: ToastService\r\n    ) {\r\n        this.page = 1;\r\n        this.per_page = 100;\r\n        this.firstTime = true;\r\n    }\r\n\r\n    public ngOnInit() {\r\n        if (!this.placeholder) {\r\n            this.placeholder = '';\r\n        }\r\n\r\n        this.filters = [];\r\n        if (this.addFilters) {\r\n            this.addFilters.forEach(element => {\r\n                this.filters.push({ key: 'filter{' + element.key + '}', value: element.value })\r\n            });\r\n        }\r\n        this.getModels();\r\n    }\r\n\r\n    writeValue(value: any) {\r\n        // const div = this.textarea.nativeElement;\r\n        // this.renderer.setProperty(div, 'textContent', value);\r\n        this.value = value;\r\n    }\r\n\r\n    registerOnChange(fn: any) {\r\n        this.onChange = fn;\r\n    }\r\n\r\n    registerOnTouched(fn: any) {\r\n        this.onTouched = fn;\r\n    }\r\n\r\n    setDisabledState(isDisabled: boolean) {\r\n        this.disabled = isDisabled;\r\n    }\r\n\r\n    public change($event) {\r\n        this.getModels();\r\n        this.onChange(this.value);\r\n        this.onTouched(this.value);\r\n    }\r\n\r\n    public loadLazy(event: LazyLoadEvent) {\r\n        if (event.sortField) {\r\n            if (event.sortOrder === -1) {\r\n                this.sort = '-' + event.sortField;\r\n            } else {\r\n                this.sort = event.sortField;\r\n            }\r\n        } else {\r\n            this.sort = '-id';\r\n        }\r\n\r\n        if (this.addFilters) {\r\n            this.addFilters.forEach(element => {\r\n                this.filters.push({ key: 'filter{' + element.key + '}', value: element.value })\r\n            });\r\n        }\r\n\r\n        if (event.globalFilter) {\r\n            this.query = event.globalFilter;\r\n        } else {\r\n            this.query = undefined;\r\n        }\r\n\r\n        if (event.rows) {\r\n            this.per_page = event.rows;\r\n        }\r\n\r\n\r\n        // if (!this.firstTime) {\r\n        this.getModels();\r\n        // }\r\n        this.firstTime = false;\r\n    }\r\n\r\n    getModels() {\r\n        this.modelsService.get(this.page, this.per_page, this.sort, this.query, this.filters, this._with).toPromise().then(\r\n            response => {\r\n                this.models = response.functionaries;\r\n                this.totalRecords = response.meta.total_results;\r\n                // if (this.model) {\r\n                //     if (this.model.id) {\r\n                //         this.model.id = undefined;\r\n                //         this.value = this.models[0];\r\n                //         this.filters = [];\r\n                //     }\r\n                // }\r\n            },\r\n            error => {\r\n                let messageError = [];\r\n                if (!Array.isArray(error.error)) {\r\n                    messageError.push(error.error);\r\n                } else {\r\n                    messageError = error.error;\r\n                }\r\n                Object.entries(messageError).forEach(\r\n                    ([key, value]) => this.toastService.growl('error', key + ': ' + value)\r\n                );\r\n            }\r\n        );\r\n    }\r\n\r\n    public isValid() {\r\n        let stringClass = 'form-control form-control-lg form-control-solid';\r\n        if (this.touched) {\r\n            if (this.valid) {\r\n                stringClass += ' is-valid';\r\n            } else {\r\n                stringClass += ' is-invalid';\r\n            }\r\n        }\r\n        return stringClass;\r\n    }\r\n}\r\n","<div>\r\n    <p-multiSelect [styleClass]=\"isValid()\" [options]=\"models\" optionLabel=\"name\" defaultLabel=\"Select Functionaries\" (completeMethod)=\"loadLazy($event)\" (onChange)=\"change($event)\" (paste)=\"change($event)\" (onSelect)=\"change($event)\" [(ngModel)]=\"value\" field=\"name\" placeholder=\"{{placeholder}}\" [disabled]=\"disabled\" [required]=\"required\">\r\n    </p-multiSelect>\r\n</div>","// Japan\r\nexport const locale = {\r\n  lang: 'jp',\r\n  data: {\r\n    TRANSLATOR: {\r\n      SELECT: 'あなたが使う言語を選んでください',\r\n    },\r\n    MENU: {\r\n      NEW: '新しい',\r\n      ACTIONS: '行動',\r\n      CREATE_POST: '新しい投稿を作成',\r\n      PAGES: 'Pages',\r\n      FEATURES: '特徴',\r\n      APPS: 'アプリ',\r\n      DASHBOARD: 'ダッシュボード',\r\n    },\r\n    AUTH: {\r\n      GENERAL: {\r\n        OR: 'または',\r\n        SUBMIT_BUTTON: '提出する',\r\n        NO_ACCOUNT: 'アカウントを持っていない？',\r\n        SIGNUP_BUTTON: 'サインアップ',\r\n        FORGOT_BUTTON: 'パスワードをお忘れですか',\r\n        BACK_BUTTON: 'バック',\r\n        PRIVACY: 'プライバシー',\r\n        LEGAL: '法的',\r\n        CONTACT: '接触',\r\n      },\r\n      LOGIN: {\r\n        TITLE: 'Create Account',\r\n        BUTTON: 'Sign In',\r\n      },\r\n      FORGOT: {\r\n        TITLE: 'Forgotten Password?',\r\n        DESC: 'Enter your email to reset your password',\r\n        SUCCESS: 'Your account has been successfully reset.'\r\n      },\r\n      REGISTER: {\r\n        TITLE: 'Sign Up',\r\n        DESC: 'Enter your details to create your account',\r\n        SUCCESS: 'Your account has been successfuly registered.'\r\n      },\r\n      INPUT: {\r\n        EMAIL: 'Email',\r\n        FULLNAME: 'Fullname',\r\n        PASSWORD: 'Password',\r\n        CONFIRM_PASSWORD: 'Confirm Password',\r\n        USERNAME: 'ユーザー名'\r\n      },\r\n      VALIDATION: {\r\n        INVALID: '{{name}} is not valid',\r\n        REQUIRED: '{{name}} is required',\r\n        MIN_LENGTH: '{{name}} minimum length is {{min}}',\r\n        AGREEMENT_REQUIRED: 'Accepting terms & conditions are required',\r\n        NOT_FOUND: 'The requested {{name}} is not found',\r\n        INVALID_LOGIN: 'The login detail is incorrect',\r\n        REQUIRED_FIELD: 'Required field',\r\n        MIN_LENGTH_FIELD: 'Minimum field length:',\r\n        MAX_LENGTH_FIELD: 'Maximum field length:',\r\n        INVALID_FIELD: 'Field is not valid',\r\n      }\r\n    },\r\n    ECOMMERCE: {\r\n      COMMON: {\r\n        SELECTED_RECORDS_COUNT: 'Selected records count: ',\r\n        ALL: 'All',\r\n        SUSPENDED: 'Suspended',\r\n        ACTIVE: 'Active',\r\n        FILTER: 'Filter',\r\n        BY_STATUS: 'by Status',\r\n        BY_TYPE: 'by Type',\r\n        BUSINESS: 'Business',\r\n        INDIVIDUAL: 'Individual',\r\n        SEARCH: 'Search',\r\n        IN_ALL_FIELDS: 'in all fields'\r\n      },\r\n      ECOMMERCE: 'eCommerce',\r\n      CUSTOMERS: {\r\n        CUSTOMERS: 'Customers',\r\n        CUSTOMERS_LIST: 'Customers list',\r\n        NEW_CUSTOMER: 'New Customer',\r\n        DELETE_CUSTOMER_SIMPLE: {\r\n          TITLE: 'Customer Delete',\r\n          DESCRIPTION: 'Are you sure to permanently delete this customer?',\r\n          WAIT_DESCRIPTION: 'Customer is deleting...',\r\n          MESSAGE: 'Customer has been deleted'\r\n        },\r\n        DELETE_CUSTOMER_MULTY: {\r\n          TITLE: 'Customers Delete',\r\n          DESCRIPTION: 'Are you sure to permanently delete selected customers?',\r\n          WAIT_DESCRIPTION: 'Customers are deleting...',\r\n          MESSAGE: 'Selected customers have been deleted'\r\n        },\r\n        UPDATE_STATUS: {\r\n          TITLE: 'Status has been updated for selected customers',\r\n          MESSAGE: 'Selected customers status have successfully been updated'\r\n        },\r\n        EDIT: {\r\n          UPDATE_MESSAGE: 'Customer has been updated',\r\n          ADD_MESSAGE: 'Customer has been created'\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { SplashScreenComponent } from './splash-screen.component';\r\n\r\n@NgModule({\r\n  declarations: [SplashScreenComponent],\r\n  imports: [CommonModule],\r\n  exports: [SplashScreenComponent],\r\n})\r\nexport class SplashScreenModule {}\r\n","export { EvidenceService } from './evidence.service';","import { AbstractControl } from '@angular/forms';\r\n\r\nexport class ConfirmPasswordValidator {\r\n  /**\r\n   * Check matching password with confirm password\r\n   * @param control AbstractControl\r\n   */\r\n  static MatchPassword(control: AbstractControl) {\r\n    const password = control.get('password').value;\r\n\r\n    const confirmPassword = control.get('cPassword').value;\r\n\r\n    if (password !== confirmPassword) {\r\n      control.get('cPassword').setErrors({ ConfirmPassword: true });\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n","export class UsersTable {\r\n  public static users: any = [\r\n    {\r\n      id: 1,\r\n      username: 'admin',\r\n      password: 'demo',\r\n      email: 'admin@demo.com',\r\n      accessToken: 'access-token-8f3ae836da744329a6f93bf20594b5cc',\r\n      refreshToken: 'access-token-f8c137a2c98743f48b643e71161d90aa',\r\n      roles: [1], // Administrator\r\n      pic: './assets/media/users/300_25.jpg',\r\n      fullname: 'Sean S',\r\n      firstname: 'Sean',\r\n      lastname: 'Stark',\r\n      occupation: 'CEO',\r\n      companyName: 'Keenthemes',\r\n      phone: '456669067890',\r\n      language: 'en',\r\n      timeZone: 'International Date Line West',\r\n      website: 'https://keenthemes.com',\r\n      emailSettings: {\r\n        emailNotification: true,\r\n        sendCopyToPersonalEmail: false,\r\n        activityRelatesEmail: {\r\n          youHaveNewNotifications: false,\r\n          youAreSentADirectMessage: false,\r\n          someoneAddsYouAsAsAConnection: true,\r\n          uponNewOrder: false,\r\n          newMembershipApproval: false,\r\n          memberRegistration: true\r\n        },\r\n        updatesFromKeenthemes: {\r\n          newsAboutKeenthemesProductsAndFeatureUpdates: false,\r\n          tipsOnGettingMoreOutOfKeen: false,\r\n          thingsYouMissedSindeYouLastLoggedIntoKeen: true,\r\n          newsAboutMetronicOnPartnerProductsAndOtherServices: true,\r\n          tipsOnMetronicBusinessProducts: true\r\n        },\r\n      },\r\n      communication: {\r\n        email: true,\r\n        sms: true,\r\n        phone: false\r\n      },\r\n      address: {\r\n        addressLine: 'L-12-20 Vertex, Cybersquare',\r\n        city: 'San Francisco',\r\n        state: 'California',\r\n        postCode: '45000',\r\n      },\r\n      socialNetworks: {\r\n        linkedIn: 'https://linkedin.com/admin',\r\n        facebook: 'https://facebook.com/admin',\r\n        twitter: 'https://twitter.com/admin',\r\n        instagram: 'https://instagram.com/admin',\r\n      },\r\n    },\r\n    {\r\n      id: 2,\r\n      username: 'user',\r\n      password: 'demo',\r\n      email: 'user@demo.com',\r\n      accessToken: 'access-token-6829bba69dd3421d8762-991e9e806dbf',\r\n      refreshToken: 'access-token-f8e4c61a318e4d618b6c199ef96b9e55',\r\n      roles: [2], // Manager\r\n      pic: './assets/media/users/100_2.jpg',\r\n      fullname: 'Megan F',\r\n      firstname: 'Megan',\r\n      lastname: 'Fox',\r\n      occupation: 'Deputy Head of Keenthemes in New York office',\r\n      companyName: 'Keenthemes',\r\n      phone: '456669067891',\r\n      language: 'en',\r\n      timeZone: 'International Date Line West',\r\n      communication: {\r\n        email: true,\r\n        sms: true,\r\n        phone: false\r\n      },\r\n      emailSettings: {\r\n        emailNotification: true,\r\n        sendCopyToPersonalEmail: false,\r\n        activityRelatesEmail: {\r\n          youHaveNewNotifications: false,\r\n          youAreSentADirectMessage: false,\r\n          someoneAddsYouAsAsAConnection: true,\r\n          uponNewOrder: false,\r\n          newMembershipApproval: false,\r\n          memberRegistration: true\r\n        },\r\n        updatesFromKeenthemes: {\r\n          newsAboutKeenthemesProductsAndFeatureUpdates: false,\r\n          tipsOnGettingMoreOutOfKeen: false,\r\n          thingsYouMissedSindeYouLastLoggedIntoKeen: true,\r\n          newsAboutMetronicOnPartnerProductsAndOtherServices: true,\r\n          tipsOnMetronicBusinessProducts: true\r\n        },\r\n      },\r\n      address: {\r\n        addressLine: '3487  Ingram Road',\r\n        city: 'Greensboro',\r\n        state: 'North Carolina',\r\n        postCode: '27409',\r\n      },\r\n      socialNetworks: {\r\n        linkedIn: 'https://linkedin.com/user',\r\n        facebook: 'https://facebook.com/user',\r\n        twitter: 'https://twitter.com/user',\r\n        instagram: 'https://instagram.com/user',\r\n      },\r\n    },\r\n    {\r\n      id: 3,\r\n      username: 'guest',\r\n      password: 'demo',\r\n      email: 'guest@demo.com',\r\n      accessToken: 'access-token-d2dff7b82f784de584b60964abbe45b9',\r\n      refreshToken: 'access-token-c999ccfe74aa40d0aa1a64c5e620c1a5',\r\n      roles: [3], // Guest\r\n      pic: './assets/media/users/default.jpg',\r\n      fullname: 'Manu G',\r\n      firstname: 'Manu',\r\n      lastname: 'Ginobili',\r\n      occupation: 'CFO',\r\n      companyName: 'Keenthemes',\r\n      phone: '456669067892',\r\n      language: 'en',\r\n      timeZone: 'International Date Line West',\r\n      communication: {\r\n        email: true,\r\n        sms: true,\r\n        phone: false\r\n      },\r\n      emailSettings: {\r\n        emailNotification: true,\r\n        sendCopyToPersonalEmail: false,\r\n        activityRelatesEmail: {\r\n          youHaveNewNotifications: false,\r\n          youAreSentADirectMessage: false,\r\n          someoneAddsYouAsAsAConnection: true,\r\n          uponNewOrder: false,\r\n          newMembershipApproval: false,\r\n          memberRegistration: true\r\n        },\r\n        updatesFromKeenthemes: {\r\n          newsAboutKeenthemesProductsAndFeatureUpdates: false,\r\n          tipsOnGettingMoreOutOfKeen: false,\r\n          thingsYouMissedSindeYouLastLoggedIntoKeen: true,\r\n          newsAboutMetronicOnPartnerProductsAndOtherServices: true,\r\n          tipsOnMetronicBusinessProducts: true\r\n        },\r\n      },\r\n      address: {\r\n        addressLine: '1467  Griffin Street',\r\n        city: 'Phoenix',\r\n        state: 'Arizona',\r\n        postCode: '85012',\r\n      },\r\n      socialNetworks: {\r\n        linkedIn: 'https://linkedin.com/guest',\r\n        facebook: 'https://facebook.com/guest',\r\n        twitter: 'https://twitter.com/guest',\r\n        instagram: 'https://instagram.com/guest',\r\n      },\r\n    },\r\n  ];\r\n\r\n  public static tokens: any = [\r\n    {\r\n      id: 1,\r\n      accessToken: 'access-token-' + Math.random(),\r\n      refreshToken: 'access-token-' + Math.random(),\r\n    },\r\n  ];\r\n}\r\n","import {\r\n  Component,\r\n  ChangeDetectionStrategy,\r\n  OnDestroy,\r\n  OnInit,\r\n} from '@angular/core';\r\nimport { TranslationService } from './modules/i18n/translation.service';\r\n// language list\r\nimport { locale as enLang } from './modules/i18n/vocabs/en';\r\nimport { locale as chLang } from './modules/i18n/vocabs/ch';\r\nimport { locale as esLang } from './modules/i18n/vocabs/es';\r\nimport { locale as jpLang } from './modules/i18n/vocabs/jp';\r\nimport { locale as deLang } from './modules/i18n/vocabs/de';\r\nimport { locale as frLang } from './modules/i18n/vocabs/fr';\r\nimport { SplashScreenService } from './_metronic/partials/layout/splash-screen/splash-screen.service';\r\nimport { Router, NavigationEnd } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'body[root]',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.Default,\r\n})\r\nexport class AppComponent implements OnInit, OnDestroy {\r\n  private unsubscribe: Subscription[] = []; // Read more: => https://brianflove.com/2016/12/11/anguar-2-unsubscribe-observables/\r\n\r\n  constructor(\r\n    private translationService: TranslationService,\r\n    private splashScreenService: SplashScreenService,\r\n    private router: Router\r\n  ) {\r\n    // register translations\r\n    this.translationService.loadTranslations(\r\n      enLang,\r\n      chLang,\r\n      esLang,\r\n      jpLang,\r\n      deLang,\r\n      frLang\r\n    );\r\n    this.translationService.setLanguage('es');\r\n  }\r\n\r\n  ngOnInit() {\r\n    const routerSubscription = this.router.events.subscribe((event) => {\r\n      if (event instanceof NavigationEnd) {\r\n        // hide splash screen\r\n        this.splashScreenService.hide();\r\n\r\n        // scroll to top on every route change\r\n        window.scrollTo(0, 0);\r\n\r\n        // to display back the body content\r\n        setTimeout(() => {\r\n          document.body.classList.add('page-loaded');\r\n        }, 500);\r\n      }\r\n    });\r\n    this.unsubscribe.push(routerSubscription);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.unsubscribe.forEach((sb) => sb.unsubscribe());\r\n  }\r\n}\r\n","<app-splash-screen></app-splash-screen>\r\n<router-outlet></router-outlet>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { SpaceService as ModelService } from '../_services/space.service';\r\nimport { SpaceModel as Model } from '../_models/space.model';\r\nimport { FormGroup, AbstractControl, FormBuilder, Validators, FormControl } from '@angular/forms';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { Observable } from 'rxjs';\r\nimport { LazyLoadEvent } from 'primeng/api';\r\nimport { ConfirmationService } from 'primeng/api';\r\nimport { debounceTime, distinctUntilChanged } from 'rxjs/operators';\r\nimport { ToastService } from 'src/app/modules/toast/_services/toast.service';\r\nimport { AuthService } from 'src/app/modules/auth';\r\n\r\n@Component({\r\n    selector: 'app-spaces',\r\n    templateUrl: './spaces.component.html',\r\n    styleUrls: ['./spaces.component.scss']\r\n})\r\nexport class SpacesComponent implements OnInit {\r\n\r\n    public promiseForm: Promise<any>;\r\n\r\n    public models: Model[];\r\n    public selectedModels: Model[];\r\n\r\n    public page: number;\r\n    public total_page: number;\r\n    public per_page: number;\r\n    public totalRecords: number;\r\n\r\n    public sort: string;\r\n    public query: string;\r\n    public filters: { key: string, value: string }[];\r\n    public _with: { key: string, value: string }[];\r\n\r\n    public formGroup: FormGroup;\r\n    public space_id_filter: AbstractControl;\r\n    public department_id_filter: AbstractControl;\r\n    public venue_id_filter: AbstractControl;\r\n\r\n    searchGroup: FormGroup;\r\n\r\n    public requesting: boolean;\r\n\r\n    public confirmDialogPosition: string;\r\n    public message_confirm_delete: string;\r\n\r\n    public showTableCheckbox: boolean;\r\n\r\n    constructor(\r\n        public modelsService: ModelService,\r\n        public translate: TranslateService,\r\n        private confirmationService: ConfirmationService,\r\n        private toastService: ToastService,\r\n        public authService: AuthService,\r\n        fb: FormBuilder) {\r\n        this.formGroup = fb.group({\r\n            'space_id_filter': [''],\r\n            'department_id_filter': [''],\r\n            'venue_id_filter': [''],\r\n        });\r\n        this.space_id_filter = this.formGroup.controls['space_id_filter'];\r\n        this.department_id_filter = this.formGroup.controls['department_id_filter'];\r\n        this.venue_id_filter = this.formGroup.controls['venue_id_filter'];\r\n\r\n        this.searchGroup = fb.group({\r\n            searchTerm: [''],\r\n        });\r\n\r\n        this.translate.get('COMMON.MESSAGE_CONFIRM_DELETE').subscribe((res: string) => {\r\n            this.message_confirm_delete = res;\r\n        });\r\n\r\n        this.showTableCheckbox = false;\r\n\r\n        this.page = 1;\r\n        this.total_page = 0;\r\n        this.per_page = 100\r\n        this.totalRecords = 0;\r\n\r\n        this.requesting = false;\r\n\r\n        this.confirmDialogPosition = 'right';\r\n\r\n        this.models = [];\r\n        this.selectedModels = [];\r\n        // this.getModels();\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.requesting = false;\r\n\r\n        this._with = [];\r\n        this._with.push({key: 'include[]', value: 'functionary.*'})\r\n    }\r\n\r\n    public loadLazy(event: LazyLoadEvent) {\r\n        this.page = (event.first / this.per_page) + 1;\r\n        if (event.sortField) {\r\n            if (event.sortOrder === -1) {\r\n                this.sort = '-' + event.sortField;\r\n            } else {\r\n                this.sort = event.sortField;\r\n            }\r\n        } else {\r\n            this.sort = '-id';\r\n        }\r\n\r\n        if (event.globalFilter) {\r\n            this.query = event.globalFilter;\r\n        } else {\r\n            this.query = undefined;\r\n        }\r\n\r\n        if (event.rows) {\r\n            this.per_page = event.rows;\r\n        }\r\n\r\n\r\n        this.getModels();\r\n    }\r\n\r\n    public getModels() {\r\n        this.requesting = true;\r\n        this.modelsService.get(this.page, this.per_page, this.sort, this.query, this.filters, this._with).toPromise().then(\r\n            response => {\r\n                this.requesting = false;\r\n                this.models = response.spaces;\r\n                if(response.functionaries){\r\n                    response.functionaries.forEach(functionary => {\r\n                        this.models.forEach(element => {\r\n                            if (element.functionary === functionary.id) {\r\n                                element.functionary = functionary;\r\n                            }\r\n                        });\r\n                    });\r\n                }\r\n                this.totalRecords = response.meta.total_results;\r\n            },\r\n            error => {\r\n                this.requesting = false;\r\n                if (error.status == 404) {\r\n                    this.toastService.growl('error', 'Not Found')\r\n                } else {\r\n                    let messageError = [];\r\n                    if (!Array.isArray(error.error)) {\r\n                        messageError.push(error.error);\r\n                    } else {\r\n                        messageError = error.error;\r\n                    }\r\n                    Object.entries(messageError).forEach(\r\n                        ([key, value]) => this.toastService.growl('error', key + ': ' + value)\r\n                    );\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n    // public showDeleteDialog(user: Model) {\r\n    //     let message;\r\n    //     this.translate.get('Do you want to delete?').subscribe((res: string) => {\r\n    //         message = res;\r\n    //     });\r\n\r\n    //     let header;\r\n    //     this.translate.get('Delete Confirmation').subscribe((res: string) => {\r\n    //         header = res;\r\n    //     });\r\n\r\n    //     this.confirmationService.confirm({\r\n    //         message: message,\r\n    //         header: header,\r\n    //         icon: 'fa fa-trash',\r\n    //         accept: () => {\r\n    //             this.delete(user);\r\n    //         }\r\n    //     });\r\n    // }\r\n\r\n    public delete(id) {\r\n        this.modelsService.delete(id).toPromise().then(\r\n            response => {\r\n                this.toastService.growl('success', 'Delete');\r\n                this.getModels();\r\n            },\r\n            error => {\r\n                if (error.status == 404) {\r\n                    this.toastService.growl('error', 'Not Found')\r\n                } else {\r\n                    let messageError = [];\r\n                    if (!Array.isArray(error.error)) {\r\n                        messageError.push(error.error);\r\n                    } else {\r\n                        messageError = error.error;\r\n                    }\r\n                    Object.entries(messageError).forEach(\r\n                        ([key, value]) => this.toastService.growl('error', key + ': ' + value)\r\n                    );\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n    public patch(values: Model) {\r\n        const param = {\r\n            // 'activated': values.activated\r\n        };\r\n        if (values) {\r\n            const promise = this.modelsService.patch(values.id, param);\r\n            this.promiseForm = promise.toPromise().then(\r\n                response => {\r\n                    this.toastService.growl('success', 'Patch');\r\n                },\r\n                error => {\r\n                    if (error.status == 404) {\r\n                        this.toastService.growl('error', 'Not Found')\r\n                    } else {\r\n                        let messageError = [];\r\n                        if (!Array.isArray(error.error)) {\r\n                            messageError.push(error.error);\r\n                        } else {\r\n                            messageError = error.error;\r\n                        }\r\n                        Object.entries(messageError).forEach(\r\n                            ([key, value]) => this.toastService.growl('error', key + ': ' + value)\r\n                        );\r\n                    }\r\n                }\r\n            );\r\n        }\r\n    }\r\n\r\n    confirm(id, space: string) {\r\n        this.confirmDialogPosition = space;\r\n        this.confirmationService.confirm({\r\n            message: 'Are you sure that you want to delete?',\r\n            accept: () => {\r\n                this.delete(id);\r\n            }\r\n        });\r\n    }\r\n}\r\n","<div class=\"card card-custom gutter-b\">\r\n  <div class=\"card-header\">\r\n    <div class=\"card-title\">\r\n      <h3 class=\"card-label\">{{ 'COMMON.LIST' | translate }}</h3>\r\n    </div>\r\n    <div class=\"card-toolbar\">\r\n      <a type=\"button\" class=\"btn btn-primary\" *ngIf=\"authService.hasPermission('add_space')\" routerLink=\"/spaces/add\">{{ 'COMMON.NEW' | translate }}</a>\r\n    </div>\r\n  </div>\r\n  <div class=\"card-body\">\r\n    <!-- begin: Filtration form -->\r\n    <div class=\"form form-label-right\">\r\n      <div class=\"form-group row\">\r\n        <div class=\"col-lg-6\">\r\n          {{ 'COMMON.FILTER' | translate }}\r\n        </div>\r\n        <div class=\"col-lg-6\" [formGroup]=\"searchGroup\">\r\n          <input type=\"text\" class=\"form-control\" name=\"searchText\" placeholder=\"{{ 'COMMON.SEARCH' | translate }}\" value=\"\" (input)=\"dt.filterGlobal($event.target.value, 'contains')\"\r\n            formControlName=\"searchTerm\" /><small class=\"form-text text-muted\"><b>{{ 'COMMON.SEARCH' | translate }}</b> {{ 'COMMON.IN' | translate }} id</small>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <!-- end: Filtration form -->\r\n\r\n    <!-- begin:Table -->\r\n    <p-table #dt [value]=\"models\" [(selection)]=\"selectedModels\" dataKey=\"id\" styleClass=\"p-datatable-striped p-datatable-sm\" [rowHover]=\"true\"\r\n    [rows]=\"per_page\" [showCurrentPageReport]=\"true\" [rowsPerPageOptions]=\"[5,10,25,50,100]\"\r\n    [paginator]=\"true\" currentPageReportTemplate=\"{{ 'COMMON.SHOWING' | translate }} {{ 'COMMON.FROM' | translate }} {first} {{ 'COMMON.TO' | translate }} {last} {{ 'COMMON.OF' | translate }} {totalRecords} {{ 'COMMON.RECORDS' | translate }}\"\r\n    [filterDelay]=\"1000\" [globalFilterFields]=\"['id','number_space']\" [lazy]=\"true\" (onLazyLoad)=\"loadLazy($event)\"\r\n    [totalRecords]=\"totalRecords\" [showJumpToPageDropdown]=\"false\" [minBufferPx]=\"1\" [showLoader]=\"true\" [loading]=\"requesting\">\r\n      <ng-template pTemplate=\"header\">\r\n        <tr>\r\n          <th style=\"width: 3rem\" *ngIf=\"showTableCheckbox\">\r\n            <p-tableHeaderCheckbox></p-tableHeaderCheckbox>\r\n          </th>\r\n          <th pSortableColumn=\"id\">\r\n            <div class=\"p-d-flex p-jc-between p-ai-center\">\r\n              {{ 'ROOM.ID' | translate }}\r\n            </div>\r\n          </th>\r\n          <th pSortableColumn=\"name\">\r\n            <div class=\"p-d-flex p-jc-between p-ai-center\">\r\n              {{ 'ROOM.NAME' | translate }} \r\n            </div>\r\n          </th>\r\n          <th pSortableColumn=\"number_space\">\r\n            <div class=\"p-d-flex p-jc-between p-ai-center\">\r\n              {{ 'ROOM.NUMBER_ROOM' | translate }}\r\n            </div>\r\n          </th>\r\n          <th pSortableColumn=\"functionary\">\r\n            <div class=\"p-d-flex p-jc-between p-ai-center\">\r\n              {{ 'ROOM.FUNCTIONARY' | translate }}\r\n            </div>\r\n          </th>\r\n          <th pSortableColumn=\"created_at\">\r\n            <div class=\"p-d-flex p-jc-between p-ai-center\">\r\n              {{ 'COMMON.CREATED_AT' | translate }}\r\n              <!-- <p-sortIcon field=\"date_joined\"></p-sortIcon>\r\n              <p-columnFilter type=\"date_joined\" field=\"date_joined\" display=\"menu\" class=\"p-ml-auto\"></p-columnFilter> -->\r\n            </div>\r\n          </th>\r\n          <th style=\"width: 10rem\" *ngIf=\"authService.hasPermission('change_space') || authService.hasPermission('delete_space')\">\r\n            <div class=\"p-d-flex p-jc-between p-ai-center\">\r\n              {{ 'COMMON.ACTION' | translate }}\r\n              <!-- <p-sortIcon field=\"date_joined\"></p-sortIcon>\r\n              <p-columnFilter type=\"date_joined\" field=\"date_joined\" display=\"menu\" class=\"p-ml-auto\"></p-columnFilter> -->\r\n            </div>\r\n          </th>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"body\" let-value>\r\n        <tr class=\"p-selectable-row\">\r\n          <td *ngIf=\"showTableCheckbox\">\r\n            <p-tableCheckbox [value]=\"value\"></p-tableCheckbox>\r\n          </td>\r\n          <td>\r\n            {{value.id}}\r\n          </td>\r\n          <td>\r\n            {{value.name}}\r\n          </td>\r\n          <td>\r\n            {{value.number_space}}\r\n          </td>\r\n          <td>\r\n            {{value.functionary?.name}}\r\n          </td>\r\n          <td>\r\n            {{value.created_at | date: 'MM/dd/yyyy'}}\r\n          </td>\r\n          <td style=\"text-align: right\" *ngIf=\"authService.hasPermission('change_space') || authService.hasPermission('delete_space')\">\r\n            <a title=\"{{ 'COMMON.EDIT' | translate }}\" class=\"btn btn-icon btn-light btn-hover-primary btn-sm\" style=\"margin-right: 5px;\"\r\n              [routerLink]=\"'/spaces/edit/' + value.id\"  *ngIf=\"authService.hasPermission('change_space')\">\r\n              <span [inlineSVG]=\"'./assets/media/svg/icons/Communication/Write.svg'\" cacheSVG=\"true\"\r\n                class=\"svg-icon svg-icon-md svg-icon-primary\">\r\n              </span>\r\n            </a>\r\n            <a title=\"{{ 'COMMON.DELETE' | translate }}\" class=\"btn btn-icon btn-light btn-hover-danger btn-sm\"\r\n              (click)=\"confirm(value.id, 'right')\" *ngIf=\"authService.hasPermission('delete_space')\">\r\n              <span [inlineSVG]=\"'./assets/media/svg/icons/General/Trash.svg'\" cacheSVG=\"true\"\r\n                class=\"svg-icon svg-icon-md svg-icon-danger\">\r\n              </span>\r\n            </a>\r\n          </td>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"emptymessage\">\r\n        <tr>\r\n          <td colspan=\"6\" class=\"text-center\">{{ 'COMMON.NO_ITEMS_FOUND' | translate }}</td>\r\n        </tr>\r\n      </ng-template>\r\n    </p-table>\r\n    <!-- end: Table -->\r\n  </div>\r\n</div>\r\n\r\n<p-confirmDialog header=\"{{ 'COMMON.CONFIRMATION' | translate }}\" icon=\"pi pi-exclamation-triangle\" [position]=\"confirmDialogPosition\"></p-confirmDialog>","// USA\r\nexport const locale = {\r\n  lang: 'en',\r\n  data: {\r\n    TRANSLATOR: {\r\n      SELECT: 'Select your language',\r\n    },\r\n    MENU: {\r\n      NEW: 'new',\r\n      ACTIONS: 'Actions',\r\n      CREATE_POST: 'Create New Post',\r\n      PAGES: 'Pages',\r\n      FEATURES: 'Features',\r\n      APPS: 'Apps',\r\n      DASHBOARD: 'Dashboard',\r\n    },\r\n    AUTH: {\r\n      GENERAL: {\r\n        OR: 'Or',\r\n        SUBMIT_BUTTON: 'Submit',\r\n        NO_ACCOUNT: 'Don\\'t have an account?',\r\n        SIGNUP_BUTTON: 'Sign Up',\r\n        FORGOT_BUTTON: 'Forgot Password',\r\n        BACK_BUTTON: 'Back',\r\n        PRIVACY: 'Privacy',\r\n        LEGAL: 'Legal',\r\n        CONTACT: 'Contact',\r\n      },\r\n      LOGIN: {\r\n        TITLE: 'Login Account',\r\n        BUTTON: 'Sign In',\r\n      },\r\n      FORGOT: {\r\n        TITLE: 'Forgotten Password?',\r\n        DESC: 'Enter your email to reset your password',\r\n        SUCCESS: 'Your account has been successfully reset.'\r\n      },\r\n      REGISTER: {\r\n        TITLE: 'Sign Up',\r\n        DESC: 'Enter your details to create your account',\r\n        SUCCESS: 'Your account has been successfuly registered.'\r\n      },\r\n      INPUT: {\r\n        EMAIL: 'Email',\r\n        FULLNAME: 'Fullname',\r\n        PASSWORD: 'Password',\r\n        CONFIRM_PASSWORD: 'Confirm Password',\r\n        USERNAME: 'Username'\r\n      },\r\n      VALIDATION: {\r\n        INVALID: '{{name}} is not valid',\r\n        REQUIRED: '{{name}} is required',\r\n        MIN_LENGTH: '{{name}} minimum length is {{min}}',\r\n        AGREEMENT_REQUIRED: 'Accepting terms & conditions are required',\r\n        NOT_FOUND: 'The requested {{name}} is not found',\r\n        INVALID_LOGIN: 'The login detail is incorrect',\r\n        REQUIRED_FIELD: 'Required field',\r\n        MIN_LENGTH_FIELD: 'Minimum field length:',\r\n        MAX_LENGTH_FIELD: 'Maximum field length:',\r\n        INVALID_FIELD: 'Field is not valid',\r\n      }\r\n    },\r\n    ECOMMERCE: {\r\n      COMMON: {\r\n        SELECTED_RECORDS_COUNT: 'Selected records count: ',\r\n        ALL: 'All',\r\n        SUSPENDED: 'Suspended',\r\n        ACTIVE: 'Active',\r\n        FILTER: 'Filter',\r\n        BY_STATUS: 'by Status',\r\n        BY_TYPE: 'by Type',\r\n        BUSINESS: 'Business',\r\n        INDIVIDUAL: 'Individual',\r\n        SEARCH: 'Search',\r\n        IN_ALL_FIELDS: 'in all fields'\r\n      },\r\n      ECOMMERCE: 'eCommerce',\r\n      CUSTOMERS: {\r\n        CUSTOMERS: 'Customers',\r\n        CUSTOMERS_LIST: 'Customers list',\r\n        NEW_CUSTOMER: 'New Customer',\r\n        DELETE_CUSTOMER_SIMPLE: {\r\n          TITLE: 'Customer Delete',\r\n          DESCRIPTION: 'Are you sure to permanently delete this customer?',\r\n          WAIT_DESCRIPTION: 'Customer is deleting...',\r\n          MESSAGE: 'Customer has been deleted'\r\n        },\r\n        DELETE_CUSTOMER_MULTY: {\r\n          TITLE: 'Customers Delete',\r\n          DESCRIPTION: 'Are you sure to permanently delete selected customers?',\r\n          WAIT_DESCRIPTION: 'Customers are deleting...',\r\n          MESSAGE: 'Selected customers have been deleted'\r\n        },\r\n        UPDATE_STATUS: {\r\n          TITLE: 'Status has been updated for selected customers',\r\n          MESSAGE: 'Selected customers status have successfully been updated'\r\n        },\r\n        EDIT: {\r\n          UPDATE_MESSAGE: 'Customer has been updated',\r\n          ADD_MESSAGE: 'Customer has been created'\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-functionary',\r\n  templateUrl: './functionary.component.html',\r\n})\r\nexport class FunctionaryComponent implements OnInit {\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n}\r\n","<router-outlet></router-outlet>\r\n","import { Component, forwardRef, Renderer2, ViewChild, Input, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { ContentTypeService as ModelsService } from '../../_services/content-type.service';\r\nimport { LazyLoadEvent } from 'primeng/api';\r\nimport { ToastService } from 'src/app/modules/toast/_services/toast.service';\r\nimport { AuthService } from 'src/app/modules/auth';\r\nexport const EPANDED_TEXTAREA_VALUE_ACCESSOR: any = {\r\n    provide: NG_VALUE_ACCESSOR,\r\n    useExisting: forwardRef(() => ContentTypeAutocompleteComponent),\r\n    multi: true,\r\n};\r\n\r\n@Component({\r\n    selector: 'app-content-type-autocomplete',\r\n    templateUrl: './content-type-autocomplete.component.html',\r\n    styleUrls: ['./content-type-autocomplete.component.scss'],\r\n    providers: [EPANDED_TEXTAREA_VALUE_ACCESSOR],\r\n})\r\nexport class ContentTypeAutocompleteComponent implements ControlValueAccessor, OnInit {\r\n    @Input() model: any;\r\n    @Input() valid: boolean;\r\n    @Input() touched: boolean;\r\n    @Input() required: boolean;\r\n    @Input() disabled: boolean;\r\n    @Input() placeholder: string;\r\n    @Input() addFilters: { key: string, value: string }[];\r\n\r\n    public models: any[];\r\n\r\n    public onChange;\r\n    public onTouched;\r\n\r\n    public firstTime: boolean;\r\n    public totalRecords: number;\r\n    public page: number;\r\n    public per_page: number;\r\n    public sort: string;\r\n    public query: string;\r\n    public filters: { key: string, value: string }[];\r\n    public _with: { key: string, value: string }[];\r\n\r\n    public value: any;\r\n\r\n    constructor(\r\n        public modelsService: ModelsService,\r\n        public toastService: ToastService\r\n    ) {\r\n        this.page = 1;\r\n        this.per_page = 100;\r\n        this.firstTime = true;\r\n    }\r\n\r\n    public ngOnInit() {\r\n        if (!this.placeholder) {\r\n            this.placeholder = ' ';\r\n        }\r\n    }\r\n\r\n    writeValue(value: any) {\r\n        // const div = this.textarea.nativeElement;\r\n        // this.renderer.setProperty(div, 'textContent', value);\r\n        this.value = value;\r\n    }\r\n\r\n    registerOnChange(fn: any) {\r\n        this.onChange = fn;\r\n    }\r\n\r\n    registerOnTouched(fn: any) {\r\n        this.onTouched = fn;\r\n    }\r\n\r\n    setDisabledState(isDisabled: boolean) {\r\n        this.disabled = isDisabled;\r\n    }\r\n\r\n    public change($event) {\r\n        this.onChange(this.value);\r\n        this.onTouched(this.value);\r\n    }\r\n\r\n    public loadLazy(event?) {\r\n        this.filters = [];\r\n        if (event && event.sortField) {\r\n            if (event.sortOrder === -1) {\r\n                this.sort = '-' + event.sortField;\r\n            } else {\r\n                this.sort = event.sortField;\r\n            }\r\n        } else {\r\n            this.sort = '-id';\r\n        }\r\n\r\n        if (this.addFilters) {\r\n            this.addFilters.forEach(element => {\r\n                this.filters.push({ key: 'filter{' + element.key + '}', value: element.value })\r\n            });\r\n        }\r\n\r\n        if (event.query) {\r\n            this.filters.push({ key: 'filter{total_amount.icontains}', value: event.query })\r\n        } else {\r\n            this.query = undefined;\r\n        }\r\n\r\n        if (event && event.rows) {\r\n            this.per_page = event.rows;\r\n        }\r\n\r\n\r\n        if (!this.firstTime) {\r\n            this.getModels();\r\n        }\r\n        this.firstTime = false;\r\n    }\r\n\r\n    getModels() {\r\n        this.modelsService.get(this.page, this.per_page, this.sort, this.query, this.filters, this._with).subscribe(\r\n            response => {\r\n                this.models = response.service_orders;\r\n                this.totalRecords = response.meta.total_results;\r\n                // if (this.model) {\r\n                //     if (this.model.id) {\r\n                //         this.model.id = undefined;\r\n                //         this.value = this.models[0];\r\n                //         this.filters = [];\r\n                //     }\r\n                // }\r\n            },\r\n            error => {\r\n                let messageError = [];\r\n                if (!Array.isArray(error.error)) {\r\n                    messageError.push(error.error);\r\n                } else {\r\n                    messageError = error.error;\r\n                }\r\n                Object.entries(messageError).forEach(\r\n                    ([key, value]) => this.toastService.growl('error', key + ': ' + value)\r\n                );\r\n            }\r\n        );\r\n    }\r\n\r\n    public isValid() {\r\n        let stringClass = 'form-control form-control-lg form-control-solid';\r\n        if (this.touched) {\r\n            if (this.valid) {\r\n                stringClass += ' is-valid';\r\n            } else {\r\n                stringClass += ' is-invalid';\r\n            }\r\n        }\r\n        return stringClass;\r\n    }\r\n}\r\n","<div>\r\n    <p-autoComplete [inputStyleClass]=\"isValid()\" [suggestions]=\"models\" (completeMethod)=\"loadLazy($event)\" (change)=\"change($event)\" (paste)=\"change($event)\" (onSelect)=\"change($event)\" [forceSelection]=\"true\" delay=\"0\" [(ngModel)]=\"value\" field=\"id\" placeholder=\"{{placeholder}}\" [disabled]=\"disabled\" [required]=\"required\">\r\n    </p-autoComplete>\r\n</div>","import { Component, forwardRef, Renderer2, ViewChild, Input, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { EvidenceService as ModelsService } from '../../_services/evidence.service';\r\nimport { LazyLoadEvent } from 'primeng/api';\r\nimport { ToastService } from 'src/app/modules/toast/_services/toast.service';\r\nimport { AuthService } from 'src/app/modules/auth';\r\nexport const EPANDED_TEXTAREA_VALUE_ACCESSOR: any = {\r\n    provide: NG_VALUE_ACCESSOR,\r\n    useExisting: forwardRef(() => EvidenceAutocompleteComponent),\r\n    multi: true,\r\n};\r\n\r\n@Component({\r\n    selector: 'app-evidence-autocomplete',\r\n    templateUrl: './evidence-autocomplete.component.html',\r\n    styleUrls: ['./evidence-autocomplete.component.scss'],\r\n    providers: [EPANDED_TEXTAREA_VALUE_ACCESSOR],\r\n})\r\nexport class EvidenceAutocompleteComponent implements ControlValueAccessor, OnInit {\r\n    @Input() model: any;\r\n    @Input() valid: boolean;\r\n    @Input() touched: boolean;\r\n    @Input() required: boolean;\r\n    @Input() disabled: boolean;\r\n    @Input() placeholder: string;\r\n    @Input() addFilters: { key: string, value: string }[];\r\n\r\n    public models: any[];\r\n\r\n    public onChange;\r\n    public onTouched;\r\n\r\n    public firstTime: boolean;\r\n    public totalRecords: number;\r\n    public page: number;\r\n    public per_page: number;\r\n    public sort: string;\r\n    public query: string;\r\n    public filters: { key: string, value: string }[];\r\n    public _with: { key: string, value: string }[];\r\n\r\n    public value: any;\r\n\r\n    constructor(\r\n        public modelsService: ModelsService,\r\n        public toastService: ToastService\r\n    ) {\r\n        this.page = 1;\r\n        this.per_page = 100;\r\n        this.firstTime = true;\r\n    }\r\n\r\n    public ngOnInit() {\r\n        if (!this.placeholder) {\r\n            this.placeholder = '';\r\n        }\r\n    }\r\n\r\n    writeValue(value: any) {\r\n        // const div = this.textarea.nativeElement;\r\n        // this.renderer.setProperty(div, 'textContent', value);\r\n        this.value = value;\r\n    }\r\n\r\n    registerOnChange(fn: any) {\r\n        this.onChange = fn;\r\n    }\r\n\r\n    registerOnTouched(fn: any) {\r\n        this.onTouched = fn;\r\n    }\r\n\r\n    setDisabledState(isDisabled: boolean) {\r\n        this.disabled = isDisabled;\r\n    }\r\n\r\n    public change($event) {\r\n        this.onChange(this.value);\r\n        this.onTouched(this.value);\r\n    }\r\n\r\n    public loadLazy(event) {\r\n        this.filters = [];\r\n        if (event.sortField) {\r\n            if (event.sortOrder === -1) {\r\n                this.sort = '-' + event.sortField;\r\n            } else {\r\n                this.sort = event.sortField;\r\n            }\r\n        } else {\r\n            this.sort = '-id';\r\n        }\r\n\r\n        if (this.addFilters) {\r\n            this.addFilters.forEach(element => {\r\n                this.filters.push({ key: 'filter{' + element.key + '}', value: element.value })\r\n            });\r\n        }\r\n\r\n        if (event.query) {\r\n            this.filters.push({ key: 'filter{name.icontains}', value: event.query })\r\n        } else {\r\n            this.query = undefined;\r\n        }\r\n\r\n        if (event.rows) {\r\n            this.per_page = event.rows;\r\n        }\r\n\r\n\r\n        if (!this.firstTime) {\r\n            this.getModels();\r\n        }\r\n        this.firstTime = false;\r\n    }\r\n\r\n    getModels() {\r\n        this.modelsService.get(this.page, this.per_page, this.sort, this.query, this.filters, this._with).toPromise().then(\r\n            response => {\r\n                this.models = response.evidences;\r\n                this.totalRecords = response.meta.total_results;\r\n                // if (this.model) {\r\n                //     if (this.model.id) {\r\n                //         this.model.id = undefined;\r\n                //         this.value = this.models[0];\r\n                //         this.filters = [];\r\n                //     }\r\n                // }\r\n            },\r\n            error => {\r\n                let messageError = [];\r\n                if (!Array.isArray(error.error)) {\r\n                    messageError.push(error.error);\r\n                } else {\r\n                    messageError = error.error;\r\n                }\r\n                Object.entries(messageError).forEach(\r\n                    ([key, value]) => this.toastService.growl('error', key + ': ' + value)\r\n                );\r\n            }\r\n        );\r\n    }\r\n\r\n    public isValid() {\r\n        let stringClass = 'form-control form-control-lg form-control-solid';\r\n        if (this.touched) {\r\n            if (this.valid) {\r\n                stringClass += ' is-valid';\r\n            } else {\r\n                stringClass += ' is-invalid';\r\n            }\r\n        }\r\n        return stringClass;\r\n    }\r\n}\r\n","<div>\r\n    <p-autoComplete [inputStyleClass]=\"isValid()\" [suggestions]=\"models\" (completeMethod)=\"loadLazy($event)\" (change)=\"change($event)\" (paste)=\"change($event)\" (onSelect)=\"change($event)\" [forceSelection]=\"true\" delay=\"0\" [(ngModel)]=\"value\" field=\"name\" placeholder=\"{{placeholder}}\" [disabled]=\"disabled\" [required]=\"required\">\r\n    </p-autoComplete>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-group',\r\n  templateUrl: './group.component.html',\r\n})\r\nexport class GroupComponent implements OnInit {\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n}\r\n","<router-outlet></router-outlet>\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable, of, Subscription } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from '../../../../environments/environment';\r\nimport { catchError, finalize, tap } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class FolderService {\r\n    API_URL = `${environment.apiUrl}folders`;\r\n    private _subscriptions: Subscription[] = [];\r\n\r\n    constructor(public http: HttpClient) { }\r\n\r\n    get subscriptions() {\r\n        return this._subscriptions;\r\n    }\r\n    \r\n    public get (page?: number, per_page?: number, sort?: string, query?: string, filters?: any[], _with?: any[]): Observable<any> {\r\n        let params: URLSearchParams = new URLSearchParams();\r\n\r\n        if (page !== null && page !== undefined) {\r\n            params.append('_page', String(page));\r\n        } else {\r\n            params.append('_page', '1');\r\n        }\r\n\r\n        if (per_page !== null && per_page !== undefined) {\r\n            params.append('_per_page', String(per_page));\r\n        } else {\r\n            params.append('_per_page', '10');\r\n        }\r\n\r\n        if (sort !== null && sort !== undefined) {\r\n            params.append('sort[]', String(sort));\r\n        }\r\n\r\n        if (query !== null && query !== undefined && query !== '') {\r\n            params.append('filter{id}[]', String(query));\r\n        }\r\n\r\n        if (filters !== null && filters !== undefined && filters.length > 0) {\r\n            filters.forEach(element => {\r\n                params.append(element.key, String(element.value));\r\n            });\r\n        }\r\n\r\n        if (_with !== null && _with !== undefined && _with.length > 0) {\r\n            _with.forEach(element => {\r\n                params.append(element.key, String(element.value));\r\n            });\r\n        }\r\n\r\n        return this.http.get(`${this.API_URL}?${params}`);\r\n    }\r\n\r\n    public post(body: Object): Observable<any> {\r\n        return this.http.post(`${this.API_URL}`, JSON.stringify(body));\r\n    }\r\n\r\n    public patch(id: number, body: Object, files?:any[]): Observable<any> {\r\n        return this.http.patch(`${this.API_URL}/${id}`, JSON.stringify(body));\r\n    }\r\n\r\n    public delete(id: number): Observable<any> {\r\n        return this.http.delete(`${this.API_URL}/${id}`);\r\n    }\r\n\r\n    public getById(id: number): Observable<any> {\r\n        return this.http.get(`${this.API_URL}/${id}/?include[]=functionary.*&include[]=room.*`);\r\n    }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-evidence',\r\n  templateUrl: './evidence.component.html',\r\n})\r\nexport class EvidenceComponent implements OnInit {\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n}\r\n","<router-outlet></router-outlet>\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable, of, Subscription } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from '../../../../environments/environment';\r\nimport { catchError, finalize, tap } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class GroupService {\r\n    API_URL = `${environment.apiUrl}groups`;\r\n    private _subscriptions: Subscription[] = [];\r\n\r\n    constructor(public http: HttpClient) { }\r\n\r\n    get subscriptions() {\r\n        return this._subscriptions;\r\n    }\r\n    \r\n    public get (page?: number, per_page?: number, sort?: string, query?: string, filters?: any[], _with?: any[]): Observable<any> {\r\n        let params: URLSearchParams = new URLSearchParams();\r\n\r\n        if (page !== null && page !== undefined) {\r\n            params.append('_page', String(page));\r\n        } else {\r\n            params.append('_page', '1');\r\n        }\r\n\r\n        if (per_page !== null && per_page !== undefined) {\r\n            params.append('_per_page', String(per_page));\r\n        } else {\r\n            params.append('_per_page', '10');\r\n        }\r\n\r\n        if (sort !== null && sort !== undefined) {\r\n            params.append('sort[]', String(sort));\r\n        }\r\n\r\n        if (query !== null && query !== undefined && query !== '') {\r\n            params.append('filter', String(query));\r\n        }\r\n\r\n        if (filters !== null && filters !== undefined && filters.length > 0) {\r\n            filters.forEach(element => {\r\n                params.append(element.key, String(element.value));\r\n            });\r\n        }\r\n\r\n        if (_with !== null && _with !== undefined && _with.length > 0) {\r\n            _with.forEach(element => {\r\n                params.append(element.key, String(element.value));\r\n            });\r\n        }\r\n\r\n        return this.http.get(`${this.API_URL}?${params}`);\r\n    }\r\n\r\n    public post(body: Object): Observable<any> {\r\n        return this.http.post(`${this.API_URL}`, JSON.stringify(body));\r\n    }\r\n\r\n    public patch(id: number, body: Object): Observable<any> {\r\n        return this.http.patch(`${this.API_URL}/${id}`, JSON.stringify(body));\r\n    }\r\n\r\n    public delete(id: number): Observable<any> {\r\n        return this.http.delete(`${this.API_URL}/${id}`);\r\n    }\r\n\r\n    public getById(id: number): Observable<any> {\r\n        return this.http.get(`${this.API_URL}/${id}/?include[]=permissions.*`);\r\n    }\r\n}\r\n","import { Component, forwardRef, Renderer2, ViewChild, Input, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { PermissionService as ModelsService } from '../../_services/permission.service';\r\nimport { LazyLoadEvent } from 'primeng/api';\r\nimport { ToastService } from 'src/app/modules/toast/_services/toast.service';\r\nimport { AuthService } from 'src/app/modules/auth';\r\nexport const EPANDED_TEXTAREA_VALUE_ACCESSOR: any = {\r\n    provide: NG_VALUE_ACCESSOR,\r\n    useExisting: forwardRef(() => PermissionMultiselectComponent),\r\n    multi: true,\r\n};\r\n\r\n@Component({\r\n    selector: 'app-permission-multiselect',\r\n    templateUrl: './permission-multiselect.component.html',\r\n    styleUrls: ['./permission-multiselect.component.scss'],\r\n    providers: [EPANDED_TEXTAREA_VALUE_ACCESSOR],\r\n})\r\nexport class PermissionMultiselectComponent implements ControlValueAccessor, OnInit {\r\n    @Input() model: any;\r\n    @Input() valid: boolean;\r\n    @Input() touched: boolean;\r\n    @Input() required: boolean;\r\n    @Input() disabled: boolean;\r\n    @Input() placeholder: string;\r\n    @Input() addFilters: { key: string, value: string }[];\r\n\r\n    public models: any[];\r\n\r\n    public onChange;\r\n    public onTouched;\r\n\r\n    public firstTime: boolean;\r\n    public totalRecords: number;\r\n    public page: number;\r\n    public per_page: number;\r\n    public sort: string;\r\n    public query: string;\r\n    public filters: { key: string, value: string }[];\r\n    public _with: { key: string, value: string }[];\r\n\r\n    public value: any;\r\n\r\n    constructor(\r\n        public modelsService: ModelsService,\r\n        public toastService: ToastService\r\n    ) {\r\n        this.page = 1;\r\n        this.per_page = 100;\r\n        this.firstTime = true;\r\n    }\r\n\r\n    public ngOnInit() {\r\n        if (!this.placeholder) {\r\n            this.placeholder = '';\r\n        }\r\n        this.getModels();\r\n    }\r\n\r\n    writeValue(value: any) {\r\n        // const div = this.textarea.nativeElement;\r\n        // this.renderer.setProperty(div, 'textContent', value);\r\n        this.value = value;\r\n    }\r\n\r\n    registerOnChange(fn: any) {\r\n        this.onChange = fn;\r\n    }\r\n\r\n    registerOnTouched(fn: any) {\r\n        this.onTouched = fn;\r\n    }\r\n\r\n    setDisabledState(isDisabled: boolean) {\r\n        this.disabled = isDisabled;\r\n    }\r\n\r\n    public change($event) {\r\n        this.getModels();\r\n        this.onChange(this.value);\r\n        this.onTouched(this.value);\r\n    }\r\n\r\n    public loadLazy(event?: LazyLoadEvent) {\r\n        if (event && event.sortField) {\r\n            if (event.sortOrder === -1) {\r\n                this.sort = '-' + event.sortField;\r\n            } else {\r\n                this.sort = event.sortField;\r\n            }\r\n        } else {\r\n            this.sort = '-id';\r\n        }\r\n\r\n        if (this.addFilters) {\r\n            this.addFilters.forEach(element => {\r\n                this.filters.push({ key: 'filter{' + element.key + '}', value: element.value })\r\n            });\r\n        }\r\n\r\n        if (event && event.globalFilter) {\r\n            this.query = event.globalFilter;\r\n        } else {\r\n            this.query = undefined;\r\n        }\r\n\r\n        if (event && event.rows) {\r\n            this.per_page = event.rows;\r\n        }\r\n\r\n\r\n        // if (!this.firstTime) {\r\n        this.getModels();\r\n        // }\r\n        this.firstTime = false;\r\n    }\r\n\r\n    getModels() {\r\n        this.modelsService.get(this.page, this.per_page, this.sort, this.query, this.filters, this._with).subscribe(\r\n            response => {\r\n                this.models = response.permissions;\r\n                this.totalRecords = response.meta.total_results;\r\n                // if (this.model) {\r\n                //     if (this.model.id) {\r\n                //         this.model.id = undefined;\r\n                //         this.value = this.models[0];\r\n                //         this.filters = [];\r\n                //     }\r\n                // }\r\n            },\r\n            error => {\r\n                let messageError = [];\r\n                if (!Array.isArray(error.error)) {\r\n                    messageError.push(error.error);\r\n                } else {\r\n                    messageError = error.error;\r\n                }\r\n                Object.entries(messageError).forEach(\r\n                    ([key, value]) => this.toastService.growl('error', key + ': ' + value)\r\n                );\r\n            }\r\n        );\r\n    }\r\n\r\n    public isValid() {\r\n        let stringClass = 'form-control form-control-lg form-control-solid';\r\n        if (this.touched) {\r\n            if (this.valid) {\r\n                stringClass += ' is-valid';\r\n            } else {\r\n                stringClass += ' is-invalid';\r\n            }\r\n        }\r\n        return stringClass;\r\n    }\r\n}\r\n","<div>\r\n    <p-multiSelect [styleClass]=\"isValid()\" [options]=\"models\" optionLabel=\"name\" defaultLabel=\"Select Permissions\" (completeMethod)=\"loadLazy($event)\" (onChange)=\"change($event)\" (paste)=\"change($event)\" (onSelect)=\"change($event)\" [(ngModel)]=\"value\" field=\"name\" placeholder=\"{{placeholder}}\" [disabled]=\"disabled\" [required]=\"required\">\r\n    </p-multiSelect>\r\n</div>","import { NgModule, APP_INITIALIZER } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { HttpClientInMemoryWebApiModule } from 'angular-in-memory-web-api';\r\nimport { ClipboardModule } from 'ngx-clipboard';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { InlineSVGModule } from 'ng-inline-svg';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { PagesModule } from './pages/pages.module';\r\nimport { AuthService } from './modules/auth/_services/auth.service';\r\nimport { environment } from 'src/environments/environment';\r\n// Highlight JS\r\nimport { HighlightModule, HIGHLIGHT_OPTIONS } from 'ngx-highlightjs';\r\nimport highlight from 'highlight.js/lib/highlight';\r\nimport xml from 'highlight.js/lib/languages/xml';\r\nimport json from 'highlight.js/lib/languages/json';\r\nimport scss from 'highlight.js/lib/languages/scss';\r\nimport typescript from 'highlight.js/lib/languages/typescript';\r\nimport { SplashScreenModule } from './_metronic/partials/layout/splash-screen/splash-screen.module';\r\n// #fake-start#\r\nimport { FakeAPIService } from './_fake/fake-api.service';\r\n// #fake-end#\r\nimport { authInterceptorProviders } from './modules/auth/_helpers/auth.interceptor';\r\n\r\nimport { UserService } from './pages/user/_services';\r\nimport { ConfirmationService } from 'primeng/api';\r\nimport { FunctionaryService } from './pages/functionary/_services';\r\nimport { SpaceService } from './pages/space/_services';\r\nimport { RoomService } from './pages/room/_services';\r\nimport { FolderService } from './pages/folder/_services';\r\nimport { EvidenceService } from './pages/evidence/_services';\r\nimport { PermissionService } from './pages/permission/_services';\r\nimport { GroupService } from './pages/group/_services';\r\nimport { ContentTypeService } from './pages/content-type/_services';\r\n\r\nfunction appInitializer(authService: AuthService) {\r\n  return () => {\r\n    return new Promise((resolve) => {\r\n      authService.getUserByToken().subscribe().add(resolve);\r\n    });\r\n  };\r\n}\r\n\r\n/**\r\n * Import specific languages to avoid importing everything\r\n * The following will lazy load highlight.js core script (~9.6KB) + the selected languages bundle (each lang. ~1kb)\r\n */\r\nexport function getHighlightLanguages() {\r\n  return [\r\n    { name: 'typescript', func: typescript },\r\n    { name: 'scss', func: scss },\r\n    { name: 'xml', func: xml },\r\n    { name: 'json', func: json },\r\n  ];\r\n}\r\n\r\n@NgModule({\r\n  declarations: [AppComponent],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    SplashScreenModule,\r\n    TranslateModule.forRoot(),\r\n    HttpClientModule,\r\n    HighlightModule,\r\n    ClipboardModule,\r\n    // #fake-start#\r\n    environment.isMockEnabled\r\n      ? HttpClientInMemoryWebApiModule.forRoot(FakeAPIService, {\r\n        passThruUnknownUrl: true,\r\n        dataEncapsulation: false,\r\n      })\r\n      : [],\r\n    // #fake-end#\r\n    AppRoutingModule,\r\n    InlineSVGModule.forRoot(),\r\n    NgbModule,\r\n    PagesModule\r\n  ],\r\n  providers: [\r\n    authInterceptorProviders,\r\n    {\r\n      provide: APP_INITIALIZER,\r\n      useFactory: appInitializer,\r\n      multi: true,\r\n      deps: [AuthService],\r\n    },\r\n    {\r\n      provide: HIGHLIGHT_OPTIONS,\r\n      useValue: {\r\n        languages: getHighlightLanguages,\r\n      },\r\n    },\r\n    UserService,\r\n    ConfirmationService,\r\n    FunctionaryService,\r\n    SpaceService,\r\n    RoomService,\r\n    FolderService,\r\n    EvidenceService,\r\n    PermissionService,\r\n    GroupService,\r\n    ContentTypeService,\r\n  ],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { AbstractControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Observable, of, ReplaySubject, Subscription } from 'rxjs';\r\nimport { catchError, switchMap, tap } from 'rxjs/operators';\r\nimport { ToastService } from 'src/app/modules/toast/_services/toast.service';\r\nimport { AuthService } from 'src/app/modules/auth';\r\nimport { FolderModel as Model } from '../../_models/folder.model';\r\nimport { FolderService as ModelsService } from '../../_services/folder.service';\r\nimport { RoomService } from 'src/app/pages/room/_services';\r\n\r\n@Component({\r\n  selector: 'app-folder-edit',\r\n  templateUrl: './folder-edit.component.html',\r\n  styleUrls: ['./folder-edit.component.scss']\r\n})\r\nexport class FolderEditComponent implements OnInit, OnDestroy {\r\n  public id: number;\r\n  public model: Model;\r\n  public previous: Model;\r\n  public formGroup: FormGroup;\r\n  public requesting: boolean;\r\n\r\n  public tabs = {\r\n    BASIC_TAB: 0,\r\n    EVIDENCE_TAB: 1\r\n  };\r\n\r\n  public name: AbstractControl;\r\n  public expiration_date: AbstractControl;\r\n  public guide_file: AbstractControl;\r\n  public active: AbstractControl;\r\n  public functionary: AbstractControl;\r\n  public room: AbstractControl;\r\n  public description: AbstractControl;\r\n\r\n  public files = [];\r\n  public fileBase64: string;\r\n   \r\n  public activeTabId: number;\r\n  private subscriptions: Subscription[] = [];\r\n\r\n  public saveAndExit;\r\n\r\n  public roomId: number;\r\n  public parent: string;\r\n  public showEvidenceTab: boolean;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private modelsService: ModelsService,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    public authService: AuthService,\r\n    private toastService: ToastService,\r\n    private roomService: RoomService,\r\n  ) {\r\n    this.activeTabId = this.tabs.BASIC_TAB; // 0 => Basic info | 1 => Profile\r\n    this.saveAndExit = false;\r\n    this.requesting = false;\r\n    this.showEvidenceTab = true;\r\n\r\n    this.formGroup = this.fb.group({\r\n      name: ['', Validators.compose([Validators.required, Validators.minLength(3), Validators.maxLength(30)])],\r\n      description: [''],\r\n      expiration_date: ['', Validators.compose([Validators.required, Validators.minLength(3), Validators.maxLength(30)])],\r\n      guide_file: [''],\r\n      active: ['', Validators.compose([Validators.required, Validators.minLength(3), Validators.maxLength(30)])],\r\n      functionary: ['', Validators.compose([Validators.required, Validators.minLength(1), Validators.maxLength(30)])],\r\n      room: ['', Validators.compose([Validators.required, Validators.minLength(1), Validators.maxLength(30)])],\r\n    });\r\n    this.name = this.formGroup.controls['name'];\r\n    this.description = this.formGroup.controls['description'];\r\n    this.expiration_date = this.formGroup.controls['expiration_date'];\r\n    this.guide_file = this.formGroup.controls['guide_file'];\r\n    this.active = this.formGroup.controls['active'];\r\n    this.functionary = this.formGroup.controls['functionary'];\r\n    this.room = this.formGroup.controls['room'];\r\n\r\n    this.files = [];\r\n    this.parent = '/folders';\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.id = undefined;\r\n    this.model = undefined;\r\n    this.previous = undefined;\r\n\r\n    this.route.parent.parent.parent.params.subscribe((params) => {\r\n      if (this.route.parent.parent.parent.parent.parent.snapshot.url.length > 0) {\r\n        this.showEvidenceTab = false\r\n        this.roomId = params.id;\r\n        this.parent = '/' + this.route.parent.parent.parent.parent.parent.snapshot.url[0].path + '/edit/' + this.roomId;\r\n      }\r\n      this.get();\r\n    });\r\n\r\n  }\r\n\r\n  get() {\r\n    this.requesting = true;\r\n    const sb = this.route.paramMap.pipe(\r\n      switchMap(params => {\r\n        // get id from URL\r\n        this.id = Number(params.get('id'));\r\n        if (this.id || this.id > 0) {\r\n          return this.modelsService.getById(this.id);\r\n        }\r\n        return of({ 'folder': new Model() });\r\n      }),\r\n      catchError((error) => {\r\n        this.requesting = false;\r\n        let messageError = [];\r\n        if (!Array.isArray(error.error)) {\r\n          messageError.push(error.error);\r\n        } else {\r\n          messageError = error.error;\r\n        }\r\n        Object.entries(messageError).forEach(\r\n          ([key, value]) => this.toastService.growl('error', key + ': ' + value)\r\n        );\r\n        return of({ 'folder': new Model() });\r\n      }),\r\n    ).subscribe((response: any) => {\r\n      this.requesting = false;\r\n      if (response) {\r\n        this.model = response.folder;\r\n        if (response.functionaries) {\r\n          this.model.functionary = response.functionaries[0];\r\n        }\r\n        // let rooms = response['+rooms'];\r\n        if (response.rooms) {\r\n          this.model.room = response.rooms[0];\r\n        }\r\n        this.previous = Object.assign({}, this.model);\r\n        this.loadForm();\r\n      }\r\n    });\r\n    this.subscriptions.push(sb);\r\n  }\r\n\r\n  loadForm() {\r\n    this.active.setValue(true);\r\n    \r\n    if (this.model.id) {\r\n      this.name.setValue(this.model.name);\r\n      this.description.setValue(this.model.description);\r\n      this.expiration_date.setValue(new Date(this.model.expiration_date));\r\n\r\n      this.files = [];\r\n      if (this.model.guide_file) {\r\n        this.files.push({name:this.model.name, guide_file:this.model.guide_file})\r\n      }\r\n\r\n      this.active.setValue(this.model.active);\r\n      if (this.model.functionary) {\r\n        this.functionary.setValue(this.model.functionary);\r\n      }\r\n      if (this.model.room) {\r\n        this.room.setValue(this.model.room);\r\n      }\r\n    } else {\r\n      if (this.roomId) {\r\n        this.GetRoomById(this.roomId);\r\n      }\r\n      this.functionary.setValue(this.authService.currentUserValue.functionary);\r\n    }\r\n    this.formGroup.markAllAsTouched();\r\n  }\r\n\r\n  reset() {\r\n    if (this.previous) {\r\n      this.model = Object.assign({}, this.previous);\r\n      this.loadForm();\r\n    }\r\n  }\r\n\r\n  save(saveAndExit) {\r\n    this.saveAndExit = saveAndExit;\r\n    this.formGroup.markAllAsTouched();\r\n    if (this.formGroup.valid) {\r\n      const formValues = this.formGroup.value;\r\n      this.model = Object.assign(this.model, formValues);\r\n      if (this.id) {\r\n        this.edit();\r\n      } else {\r\n        this.create();\r\n      }\r\n    }\r\n  }\r\n\r\n  edit() {\r\n    this.requesting = true;\r\n    let model = this.model;\r\n    model.expiration_date = this.formatDate(this.expiration_date.value);\r\n    model.active = this.model.active;\r\n    if (this.model.functionary) {\r\n      model.functionary = this.model.functionary.id;\r\n    }\r\n    if (this.model.room) {\r\n      model.room = this.model.room.id;\r\n    }\r\n\r\n    model.guide_file = this.fileBase64;\r\n\r\n    const sbUpdate = this.modelsService.patch(this.id, model, this.files).pipe(\r\n      tap(() => {\r\n        this.toastService.growl('success', 'success');\r\n        if (this.saveAndExit) {\r\n          if(this.parent){\r\n            this.router.navigate([this.parent + '/folders']);\r\n          } else {\r\n            this.router.navigate(['/folders']);\r\n          }\r\n        }\r\n      }),\r\n      catchError((error) => {\r\n        this.requesting = false;\r\n        let messageError = [];\r\n        if (!Array.isArray(error.error)) {\r\n          messageError.push(error.error);\r\n        } else {\r\n          messageError = error.error;\r\n        }\r\n        Object.entries(messageError).forEach(\r\n          ([key, value]) => this.toastService.growl('error', key + ': ' + value)\r\n        );\r\n        return of(this.model);\r\n      })\r\n    ).subscribe(response => {\r\n      this.requesting = false;\r\n      this.model = response.folder\r\n    });\r\n    this.subscriptions.push(sbUpdate);\r\n  }\r\n\r\n  create() {\r\n    this.requesting = true;\r\n\r\n    let model = this.model;\r\n    model.active = this.active.value;\r\n    model.guide_file = this.fileBase64;\r\n\r\n    if (this.model.functionary) {\r\n      model.functionary = this.model.functionary.id;\r\n    }\r\n\r\n    model.expiration_date = undefined;\r\n    if (this.expiration_date.value) {\r\n      model.expiration_date = this.formatDate(this.expiration_date.value);\r\n    }\r\n\r\n    model.room = this.model.room.id;\r\n    \r\n    const sbCreate = this.modelsService.post(model).pipe(\r\n      tap(() => {\r\n        this.toastService.growl('success', 'success');\r\n        if (this.saveAndExit) {\r\n          if(this.parent){\r\n            this.router.navigate([this.parent + '/folders']);\r\n          } else {\r\n            this.router.navigate(['/folders']);\r\n          }\r\n        } else {\r\n          this.formGroup.reset()\r\n        }\r\n      }),\r\n      catchError((error) => {\r\n        this.requesting = false;\r\n        let messageError = [];\r\n        if (!Array.isArray(error.error)) {\r\n          messageError.push(error.error);\r\n        } else {\r\n          messageError = error.error;\r\n        }\r\n        Object.entries(messageError).forEach(\r\n          ([key, value]) => this.toastService.growl('error', key + ': ' + value)\r\n        );\r\n        return of(this.model);\r\n      })\r\n    ).subscribe(response => {\r\n      this.requesting = false;\r\n      this.model = response.folder as Model\r\n    });\r\n    this.subscriptions.push(sbCreate);\r\n  }\r\n\r\n  changeTab(tabId: number) {\r\n    this.activeTabId = tabId;\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscriptions.forEach(sb => sb.unsubscribe());\r\n  }\r\n\r\n  // helpers for View\r\n  isControlValid(controlName: string): boolean {\r\n    const control = this.formGroup.controls[controlName];\r\n    return control.valid && (control.dirty || control.touched);\r\n  }\r\n\r\n  isControlInvalid(controlName: string): boolean {\r\n    const control = this.formGroup.controls[controlName];\r\n    return control.invalid && (control.dirty || control.touched);\r\n  }\r\n\r\n  controlHasError(validation: string, controlName: string) {\r\n    const control = this.formGroup.controls[controlName];\r\n    return control.hasError(validation) && (control.dirty || control.touched);\r\n  }\r\n\r\n  isControlTouched(controlName: string): boolean {\r\n    const control = this.formGroup.controls[controlName];\r\n    return control.dirty || control.touched;\r\n  }\r\n\r\n  public getValidClass(valid) {\r\n    let stringClass = 'form-control form-control-lg form-control-solid';\r\n    if (valid) {\r\n      stringClass += ' is-valid';\r\n    } else {\r\n      stringClass += ' is-invalid';\r\n    }\r\n    return stringClass;\r\n  }\r\n\r\n  public onSelect(event) {\r\n    this.files = []\r\n    for(let file of event.files) {\r\n      this.files.push(file);\r\n    }\r\n    this.convertFile(event.files[0]).subscribe(base64 => {\r\n      this.fileBase64 = 'data:' + this.files[0].type + ';base64,' + base64;\r\n    });    \r\n  }\r\n\r\n  public showFile(url) {\r\n    window.open(url, '_blank');\r\n  }    \r\n\r\n  convertFile(file : File) : Observable<string> {\r\n    const result = new ReplaySubject<string>(1);\r\n    const reader = new FileReader();\r\n    reader.readAsBinaryString(file);\r\n    reader.onload = (event) => result.next(btoa(event.target.result.toString()));\r\n    return result;\r\n  }\r\n\r\n  public formatDate(date) {\r\n    const d = new Date(date);\r\n    let month = '' + (d.getMonth() + 1);\r\n    let day = '' + d.getDate();\r\n    const year = d.getFullYear();\r\n    let hours = '' + d.getHours();\r\n    let minutes = '' + d.getMinutes();\r\n    let seconds = '' + d.getSeconds();\r\n\r\n    if (month.length < 2) {\r\n      month = '0' + month;\r\n    }\r\n    if (day.length < 2) {\r\n      day = '0' + day;\r\n    }\r\n\r\n    if (hours.length < 2) {\r\n      hours = '0' + hours;\r\n    }\r\n\r\n    if (minutes.length < 2) {\r\n      minutes = '0' + minutes;\r\n    }\r\n\r\n    if (seconds.length < 2) {\r\n      seconds = '0' + seconds;\r\n    }\r\n\r\n    return [year, month, day].join('-');\r\n  }\r\n\r\n  GetRoomById(id) {\r\n    this.roomService.getById(id).toPromise().then(\r\n      response => {\r\n        this.room.setValue(response.room)\r\n      },\r\n      error => {\r\n        console.log('error getting room');\r\n      }\r\n    );\r\n  }\r\n}\r\n","<div class=\"card card-custom gutter-b\">\r\n  <ng-container *ngIf=\"requesting\">\r\n    <div class=\"progress progress-modal\">\r\n      <div class=\"progress-bar progress-bar-striped progress-bar-animated bg-primary\" role=\"progressbar\"\r\n        style=\"width: 100%\" aria-valuenow=\"100\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\r\n    </div>\r\n  </ng-container>\r\n\r\n  <div class=\"card-header\">\r\n    <div class=\"card-title\">\r\n      <h3 class=\"card-label\">\r\n        <ng-container *ngIf=\"model\">\r\n          {{ (id ? 'COMMON.EDIT' : 'COMMON.NEW') | translate }}\r\n          <span *ngIf=\"model && model.id\">{{ model.id }} - {{ model.name }} </span>\r\n        </ng-container>\r\n      </h3>\r\n    </div>\r\n    <div class=\"card-toolbar\">\r\n      <a type=\"button\" class=\"btn btn-light\" routerLink=\"/folders\">\r\n        <i class=\"fa fa-arrow-left\"></i>{{ 'COMMON.BACK' | translate }}\r\n      </a>\r\n      <button class=\"btn btn-secondary ml-2\" (click)=\"reset()\">\r\n        <i class=\"fa fa-redo\"></i>{{ 'COMMON.RESET' | translate }}\r\n      </button>\r\n    </div>\r\n  </div>\r\n  <div class=\"card-body\">\r\n    <ul class=\"nav nav-tabs nav-tabs-line\" role=\"tablist\">\r\n      <li class=\"nav-item cursor-pointer\" (click)=\"changeTab(tabs.BASIC_TAB)\">\r\n        <a class=\"nav-link\" data-toggle=\"tab\" role=\"tab\" [attr.aria-selected]=\"activeTabId === tabs.BASIC_TAB\"\r\n          [class.active]=\"activeTabId === tabs.BASIC_TAB\">\r\n          {{ 'COMMON.BASIC_INFO' | translate }}\r\n        </a>\r\n      </li>\r\n      <li *ngIf=\"model && model.id && authService.hasPermission('view_evidence') && showEvidenceTab\" class=\"nav-item cursor-pointer\" (click)=\"changeTab(tabs.EVIDENCE_TAB)\">\r\n        <a class=\"nav-link\" data-toggle=\"tab\" role=\"button\" [attr.aria-selected]=\"activeTabId === tabs.EVIDENCE_TAB\"\r\n          [class.active]=\"activeTabId === tabs.EVIDENCE_TAB\" routerLink=\"{{parent}}/edit/{{model.id}}/evidences\">{{ 'EVIDENCE.EVIDENCES' | translate }}</a>\r\n      </li>\r\n    </ul>\r\n\r\n    <ng-container *ngIf=\"activeTabId === tabs.BASIC_TAB\">\r\n      <div class=\"mt-5\" *ngIf=\"model\">\r\n        <form action=\"#\" class=\"form form-label-right\" [formGroup]=\"formGroup\">\r\n          <div class=\"form-group row\">\r\n            <div class=\"col-lg-4\">\r\n              <label>{{ 'COMMON.ENTER' | translate }} {{ 'FOLDER.FUNCTIONARY' | translate}}</label>\r\n              <app-functionary-autocomplete\r\n              name=\"functionary\" [valid]=\"isControlValid('functionary')\" [touched]=\"isControlTouched('functionary')\" [class.is-invalid]=\"isControlInvalid('functionary')\"\r\n              [class.is-valid]=\"isControlValid('functionary')\" formControlName=\"functionary\" id=\"functionary\" [model]=\"model.functionary\" [addFilters]=\"[{key: 'user.groups', value: 3}]\"></app-functionary-autocomplete>\r\n              <div class=\"feedback\" *ngIf=\"!isControlTouched('functionary')\">{{ 'COMMON.PLEASE_ENTER' | translate }} <b>{{ 'FOLDER.FUNCTIONARY' | translate}}</b></div>\r\n              <div class=\"valid-feedback\" *ngIf=\"isControlValid('functionary')\">{{ 'FOLDER.FUNCTIONARY' | translate}}  {{ 'COMMON.WAS_ENTERED_CORRECT' | translate }}</div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"controlHasError('required', 'functionary')\">{{ 'FOLDER.FUNCTIONARY' | translate}}  {{ 'COMMON.IS_REQUIRED' | translate }}</div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"controlHasError('minlength', 'functionary')\">{{ 'FOLDER.FUNCTIONARY' | translate}} {{ 'COMMON.SHOULD_HAVE_LEAST' | translate }} 3</div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"controlHasError('maxLength', 'functionary')\">{{ 'FOLDER.FUNCTIONARY' | translate}} {{ 'COMMON.SHOULD_HAVE_MAXIMUM' | translate }} 30</div>\r\n            </div>  \r\n            <!-- <div class=\"col-lg-4 mb-3\">\r\n              <label>{{ 'COMMON.ENTER' | translate }} {{ 'FOLDER.DESCRIPTION' | translate }}</label>\r\n              <input type=\"text\" class=\"form-control form-control-lg form-control-solid\" autocomplete=\"off\"\r\n                name=\"description\" [class.is-invalid]=\"isControlInvalid('description')\"\r\n                [class.is-valid]=\"isControlValid('description')\" formControlName=\"description\" />\r\n              <div class=\"feedback\" *ngIf=\"!isControlTouched('description')\">{{ 'COMMON.PLEASE_ENTER' | translate }} <b>{{ 'FOLDER.DESCRIPTION' | translate }}</b></div>\r\n              <div class=\"valid-feedback\" *ngIf=\"isControlValid('description')\">{{ 'FOLDER.DESCRIPTION' | translate }}  {{ 'COMMON.WAS_ENTERED_CORRECT' | translate }}</div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"controlHasError('required', 'description')\">{{ 'FOLDER.DESCRIPTION' | translate }}  {{ 'COMMON.IS_REQUIRED' | translate }}</div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"controlHasError('minlength', 'description')\">{{ 'FOLDER.DESCRIPTION' | translate }} {{ 'COMMON.SHOULD_HAVE_LEAST' | translate }} 3</div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"controlHasError('maxLength', 'description')\">{{ 'FOLDER.DESCRIPTION' | translate }} {{ 'COMMON.SHOULD_HAVE_MAXIMUM' | translate }} 100</div>\r\n            </div> -->\r\n            <div class=\"col-lg-4\">\r\n              <label>{{ 'COMMON.ENTER' | translate }} {{ 'FOLDER.ROOM' | translate}}</label>\r\n              <app-room-autocomplete\r\n              name=\"room\" [valid]=\"isControlValid('room')\" [touched]=\"isControlTouched('room')\" [class.is-invalid]=\"isControlInvalid('room')\"\r\n              [class.is-valid]=\"isControlValid('room')\" formControlName=\"room\" id=\"room\" [model]=\"model.room\" [disabled]=\"model && model.id\"></app-room-autocomplete>\r\n              <div class=\"feedback\" *ngIf=\"!isControlTouched('room')\">{{ 'COMMON.PLEASE_ENTER' | translate }} <b>{{ 'FOLDER.ROOM' | translate}}</b></div>\r\n              <div class=\"valid-feedback\" *ngIf=\"isControlValid('room')\">{{ 'FOLDER.ROOM' | translate}}  {{ 'COMMON.WAS_ENTERED_CORRECT' | translate }}</div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"controlHasError('required', 'room')\">{{ 'FOLDER.ROOM' | translate}}  {{ 'COMMON.IS_REQUIRED' | translate }}</div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"controlHasError('minlength', 'room')\">{{ 'FOLDER.ROOM' | translate}} {{ 'COMMON.SHOULD_HAVE_LEAST' | translate }} 3</div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"controlHasError('maxLength', 'room')\">{{ 'FOLDER.ROOM' | translate}} {{ 'COMMON.SHOULD_HAVE_MAXIMUM' | translate }} 30</div>\r\n            </div>\r\n            <div class=\"col-lg-4 mb-3\">\r\n              <label>{{ 'COMMON.ENTER' | translate }} {{ 'FOLDER.NAME' | translate }}</label>\r\n              <input type=\"text\" class=\"form-control form-control-lg form-control-solid\" autocomplete=\"off\"\r\n                name=\"name\" [class.is-invalid]=\"isControlInvalid('name')\"\r\n                [class.is-valid]=\"isControlValid('name')\" formControlName=\"name\" />\r\n              <div class=\"feedback\" *ngIf=\"!isControlTouched('name')\">{{ 'COMMON.PLEASE_ENTER' | translate }} <b>{{ 'FOLDER.NAME' | translate }}</b></div>\r\n              <div class=\"valid-feedback\" *ngIf=\"isControlValid('name')\">{{ 'FOLDER.NAME' | translate }}  {{ 'COMMON.WAS_ENTERED_CORRECT' | translate }}</div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"controlHasError('required', 'name')\">{{ 'FOLDER.NAME' | translate }}  {{ 'COMMON.IS_REQUIRED' | translate }}</div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"controlHasError('minlength', 'name')\">{{ 'FOLDER.NAME' | translate }} {{ 'COMMON.SHOULD_HAVE_LEAST' | translate }} 3</div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"controlHasError('maxLength', 'name')\">{{ 'FOLDER.NAME' | translate }} {{ 'COMMON.SHOULD_HAVE_MAXIMUM' | translate }} 100</div>\r\n            </div>\r\n            <div class=\"col-lg-4 mb-3\">\r\n              <label>{{ 'COMMON.ENTER' | translate }} {{ 'FOLDER.EXPIRATION_DATE' | translate}}</label>\r\n              <p-calendar [inputStyleClass]=\"getValidClass(isControlValid('expiration_date'))\" name=\"expiration_date\" formControlName=\"expiration_date\"></p-calendar>\r\n              <div class=\"feedback\" *ngIf=\"!isControlTouched('expiration_date')\">{{ 'COMMON.PLEASE_ENTER' | translate }} <b>{{ 'FOLDER.EXPIRATION_DATE' | translate}}</b></div>\r\n              <div class=\"valid-feedback\" *ngIf=\"isControlValid('expiration_date')\">{{ 'FOLDER.EXPIRATION_DATE' | translate}}  {{ 'COMMON.WAS_ENTERED_CORRECT' | translate }}</div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"controlHasError('required', 'expiration_date')\">{{ 'FOLDER.EXPIRATION_DATE' | translate}}  {{ 'COMMON.IS_REQUIRED' | translate }}</div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"controlHasError('minlength', 'expiration_date')\">{{ 'FOLDER.EXPIRATION_DATE' | translate}} {{ 'COMMON.SHOULD_HAVE_LEAST' | translate }} 3</div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"controlHasError('maxLength', 'expiration_date')\">{{ 'FOLDER.EXPIRATION_DATE' | translate}} {{ 'COMMON.SHOULD_HAVE_MAXIMUM' | translate }} 100</div>\r\n            </div> \r\n            <div class=\"col-lg-4 mb-3\">\r\n              <label>{{ 'COMMON.ENTER' | translate }} {{ 'FOLDER.ACTIVE' | translate}}</label>\r\n              <p-toggleButton class=\"form-control form-control-lg form-control-solid\" formControlName=\"active\" onLabel=\"{{ 'COMMON.YES' | translate}}\" offLabel=\"{{ 'COMMON.NO' | translate}}\"></p-toggleButton>\r\n              <div class=\"feedback\" *ngIf=\"!isControlTouched('active')\">{{ 'COMMON.PLEASE_ENTER' | translate }} <b>{{ 'FOLDER.ACTIVE' | translate}}</b></div>\r\n              <div class=\"valid-feedback\" *ngIf=\"isControlValid('active')\">{{ 'FOLDER.ACTIVE' | translate}}  {{ 'COMMON.WAS_ENTERED_CORRECT' | translate }}</div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"controlHasError('required', 'active')\">{{ 'FOLDER.ACTIVE' | translate}}  {{ 'COMMON.IS_REQUIRED' | translate }}</div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"controlHasError('minlength', 'active')\">{{ 'FOLDER.ACTIVE' | translate}} {{ 'COMMON.SHOULD_HAVE_LEAST' | translate }} 3</div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"controlHasError('maxLength', 'active')\">{{ 'FOLDER.ACTIVE' | translate}} {{ 'COMMON.SHOULD_HAVE_MAXIMUM' | translate }} 100</div>\r\n            </div>\r\n            <div class=\"col-lg-12\">\r\n              <label>{{ 'COMMON.ENTER' | translate }} {{ 'FOLDER.GUIDE_FILE' | translate }}</label>\r\n              <p-fileUpload name=\"guide_file\" (onSelect)=\"onSelect($event)\" multiple=\"false\" maxFileSize=\"1000000\" [showUploadButton]=\"false\"\r\n              chooseLabel=\"{{'COMMON.CHOOSE' | translate}}\" uploadLabel=\"{{'COMMON.UPLOAD' | translate}}\" cancelLabel=\"{{'COMMON.CANCEL' | translate}}\">\r\n                <ng-template pTemplate=\"content\">\r\n                    <ul *ngIf=\"files.length > 0\">\r\n                        <li *ngFor=\"let file of files\">\r\n                          <span style=\"width: -webkit-fill-available; height: 35px;\" class=\"label label-lg label-inline label-light-primary\" (click)=\"showFile(file.guide_file)\">\r\n                            <div style=\"text-align: left; width: 50%;\">{{file.name}}</div>\r\n                            <div style=\"text-align: right; width: 50%;\">/ size bytes</div>\r\n                          </span>\r\n                        </li>\r\n                    </ul>\r\n                </ng-template>\r\n              </p-fileUpload>\r\n            </div>\r\n            <div class=\"col-lg-12 mt-3\">\r\n              <label>{{ 'COMMON.ENTER' | translate }} {{ 'FOLDER.DESCRIPTION' | translate }}</label>\r\n              <p-editor formControlName=\"description\" [style]=\"{'height':'250px'}\" placeholder=\"{{ 'FOLDER.DESCRIPTION' | translate }}\"></p-editor>\r\n            </div>\r\n            <!-- <div class=\"col-lg-4\">\r\n              <label>{{ 'COMMON.ENTER' | translate }} {{ 'FOLDER.ROOM' | translate}}</label>\r\n              <p-fileUpload #fubauto mode=\"basic\" name=\"guide_file[]\" formControlName=\"guide_file\" id=\"guide_file\" url=\"./upload.php\" accept=\"image/*\" maxFileSize=\"1000000\" [auto]=\"true\" chooseLabel=\"Browse\"></p-fileUpload>\r\n            </div> -->\r\n          </div>\r\n          <div class=\"float-right\">\r\n            <a class=\"btn btn-default font-weight-bold mr-2\" routerLink=\"{{parent}}/folders\">{{ 'COMMON.CANCEL' | translate }}</a>\r\n            <button type=\"submit\" class=\"btn btn-primary font-weight-bold mr-2\"\r\n              [disabled]=\"formGroup.invalid\" (click)=\"save(false)\">{{ 'COMMON.SAVE' | translate }}</button>\r\n            <button type=\"submit\" class=\"btn btn-primary font-weight-bold mr-2\"\r\n              [disabled]=\"formGroup.invalid\" (click)=\"save(true)\">{{ 'COMMON.SAVE_AND_EXIT' | translate }}</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </ng-container>\r\n\r\n    <ng-container *ngIf=\"activeTabId === tabs.EVIDENCE_TAB\">\r\n      <div class=\"mt-5\" *ngIf=\"model && model.id\">\r\n        <app-evidence></app-evidence>\r\n      </div>\r\n    </ng-container>\r\n  </div>\r\n</div>","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { AbstractControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Observable, of, Subscription } from 'rxjs';\r\nimport { catchError, switchMap, tap } from 'rxjs/operators';\r\nimport { ToastService } from 'src/app/modules/toast/_services/toast.service';\r\nimport { AuthService } from 'src/app/modules/auth';\r\nimport { SpaceModel as Model } from '../../_models/space.model';\r\nimport { SpaceService as ModelsService } from '../../_services/space.service';\r\n\r\n@Component({\r\n  selector: 'app-space-edit',\r\n  templateUrl: './space-edit.component.html',\r\n  styleUrls: ['./space-edit.component.scss']\r\n})\r\nexport class SpaceEditComponent implements OnInit, OnDestroy {\r\n  public id: number;\r\n  public model: Model;\r\n  public previous: Model;\r\n  public formGroup: FormGroup;\r\n  public requesting: boolean;\r\n\r\n  public tabs = {\r\n    BASIC_TAB: 0,\r\n    ROOMS_TAB: 1,\r\n  };\r\n\r\n  public name: AbstractControl;\r\n  public number_space: AbstractControl;\r\n  public description: AbstractControl;\r\n  public active: AbstractControl;\r\n  public functionary: AbstractControl;\r\n  public functionarys: AbstractControl;\r\n   \r\n  public activeTabId: number;\r\n  private subscriptions: Subscription[] = [];\r\n\r\n  public saveAndExit;\r\n\r\n  public parent: string;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private modelsService: ModelsService,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    public authService: AuthService,\r\n    private toastService: ToastService\r\n  ) {\r\n    this.activeTabId = this.tabs.BASIC_TAB; // 0 => Basic info | 1 => Profile\r\n    this.saveAndExit = false;\r\n    this.requesting = false;\r\n\r\n    this.formGroup = this.fb.group({\r\n      name: ['', Validators.compose([Validators.required, Validators.minLength(3), Validators.maxLength(30)])],\r\n      number_space: ['', Validators.compose([Validators.required, Validators.minLength(3), Validators.maxLength(30)])],\r\n      description: ['', Validators.compose([Validators.required, Validators.minLength(3), Validators.maxLength(30)])],\r\n      active: ['', Validators.compose([Validators.required, Validators.minLength(3), Validators.maxLength(30)])],\r\n      functionary: ['', Validators.compose([Validators.required, Validators.minLength(1), Validators.maxLength(30)])],\r\n      functionarys: ['', Validators.compose([Validators.required])],\r\n    });\r\n    this.name = this.formGroup.controls['name'];\r\n    this.number_space = this.formGroup.controls['number_space'];\r\n    this.description = this.formGroup.controls['description'];\r\n    this.active = this.formGroup.controls['active'];\r\n    this.functionary = this.formGroup.controls['functionary'];\r\n    this.functionarys = this.formGroup.controls['functionarys'];\r\n\r\n    this.parent = '/spaces';\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.id = undefined;\r\n    this.model = undefined;\r\n    this.previous = undefined;\r\n\r\n    if (this.route.parent.parent.snapshot.url[0].path) {\r\n      this.parent = '/' + this.route.parent.parent.snapshot.url[0].path;\r\n    }\r\n\r\n    this.get();\r\n  }\r\n\r\n  get() {\r\n    this.requesting = true;\r\n    const sb = this.route.paramMap.pipe(\r\n      switchMap(params => {\r\n        // get id from URL\r\n        this.id = Number(params.get('id'));\r\n        if (this.id || this.id > 0) {\r\n          return this.modelsService.getById(this.id);\r\n        }\r\n        return of({ 'space': new Model() });\r\n      }),\r\n      catchError((error) => {\r\n        this.requesting = false;\r\n        let messageError = [];\r\n        if (!Array.isArray(error.error)) {\r\n          messageError.push(error.error);\r\n        } else {\r\n          messageError = error.error;\r\n        }\r\n        Object.entries(messageError).forEach(\r\n          ([key, value]) => this.toastService.growl('error', key + ': ' + value)\r\n        );\r\n        return of({ 'space': new Model() });\r\n      }),\r\n    ).subscribe((response: any) => {\r\n      this.requesting = false;\r\n      if (response) {\r\n        this.model = response.space;\r\n        if (response.functionaries) {\r\n          this.model.functionary = response.functionaries[0];\r\n          this.model.functionarys = response.functionaries;\r\n        }\r\n        this.previous = Object.assign({}, this.model);\r\n        this.loadForm();\r\n      }\r\n    });\r\n    this.subscriptions.push(sb);\r\n  }\r\n\r\n  loadForm() {\r\n    this.active.setValue(true);\r\n    \r\n    if (this.model.id) {\r\n      this.name.setValue(this.model.name);\r\n      this.number_space.setValue(this.model.number_space);\r\n      this.description.setValue(this.model.description);\r\n      this.active.setValue(this.model.active);\r\n      if (this.model.functionarys) {\r\n        this.functionarys.setValue(this.model.functionarys);\r\n      }\r\n      if (this.model.functionary) {\r\n        this.functionary.setValue(this.model.functionary);\r\n      }\r\n    } else {\r\n      this.functionary.setValue(this.authService.currentUserValue.functionary);\r\n    }\r\n    this.formGroup.markAllAsTouched();\r\n  }\r\n\r\n  reset() {\r\n    if (this.previous) {\r\n      this.model = Object.assign({}, this.previous);\r\n      this.loadForm();\r\n    }\r\n  }\r\n\r\n  save(saveAndExit) {\r\n    this.saveAndExit = saveAndExit;\r\n    this.formGroup.markAllAsTouched();\r\n    if (this.formGroup.valid) {\r\n      const formValues = this.formGroup.value;\r\n      this.model = Object.assign(this.model, formValues);\r\n      if (this.id) {\r\n        this.edit();\r\n      } else {\r\n        this.create();\r\n      }\r\n    }\r\n  }\r\n\r\n  edit() {\r\n    this.requesting = true;\r\n    let model = this.model;\r\n    model.active = this.model.active;\r\n    if (this.model.functionary) {\r\n      model.functionary = this.model.functionary.id;\r\n    }\r\n\r\n    let functionarys = [];\r\n    this.model.functionarys.forEach(element => {\r\n      if(element.id != model.functionary) {\r\n        functionarys.push(element.id);\r\n      }\r\n    });\r\n    model.functionarys = functionarys;\r\n\r\n    const sbUpdate = this.modelsService.patch(this.id, model).pipe(\r\n      tap(() => {\r\n        this.toastService.growl('success', 'success');\r\n        if (this.saveAndExit) {\r\n          this.router.navigate(['/spaces']);\r\n        }\r\n      }),\r\n      catchError((error) => {\r\n        this.requesting = false;\r\n        let messageError = [];\r\n        if (!Array.isArray(error.error)) {\r\n          messageError.push(error.error);\r\n        } else {\r\n          messageError = error.error;\r\n        }\r\n        Object.entries(messageError).forEach(\r\n          ([key, value]) => this.toastService.growl('error', key + ': ' + value)\r\n        );\r\n        return of(this.model);\r\n      })\r\n    ).subscribe(response => {\r\n      this.requesting = false;\r\n      this.model = response.space\r\n    });\r\n    this.subscriptions.push(sbUpdate);\r\n  }\r\n\r\n  create() {\r\n    this.requesting = true;\r\n\r\n    let model = this.model;\r\n    model.active = this.active.value;\r\n\r\n    if (this.model.functionary) {\r\n      model.functionary = this.model.functionary.id;\r\n    }        \r\n\r\n    let functionarys = [];\r\n    this.model.functionarys.forEach(element => {\r\n      functionarys.push(element.id);\r\n    });\r\n    model.functionarys = functionarys;\r\n\r\n    const sbCreate = this.modelsService.post(model).pipe(\r\n      tap(() => {\r\n        this.toastService.growl('success', 'success');\r\n        if (this.saveAndExit) {\r\n          this.router.navigate(['/spaces']);\r\n        } else {\r\n          this.formGroup.reset()\r\n        }\r\n      }),\r\n      catchError((error) => {\r\n        this.requesting = false;\r\n        let messageError = [];\r\n        if (!Array.isArray(error.error)) {\r\n          messageError.push(error.error);\r\n        } else {\r\n          messageError = error.error;\r\n        }\r\n        Object.entries(messageError).forEach(\r\n          ([key, value]) => this.toastService.growl('error', key + ': ' + value)\r\n        );\r\n        return of(this.model);\r\n      })\r\n    ).subscribe(response => {\r\n      this.requesting = false;\r\n      this.model = response.space as Model\r\n    });\r\n    this.subscriptions.push(sbCreate);\r\n  }\r\n\r\n  changeTab(tabId: number) {\r\n    this.activeTabId = tabId;\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscriptions.forEach(sb => sb.unsubscribe());\r\n  }\r\n\r\n  // helpers for View\r\n  isControlValid(controlName: string): boolean {\r\n    const control = this.formGroup.controls[controlName];\r\n    return control.valid && (control.dirty || control.touched);\r\n  }\r\n\r\n  isControlInvalid(controlName: string): boolean {\r\n    const control = this.formGroup.controls[controlName];\r\n    return control.invalid && (control.dirty || control.touched);\r\n  }\r\n\r\n  controlHasError(validation: string, controlName: string) {\r\n    const control = this.formGroup.controls[controlName];\r\n    return control.hasError(validation) && (control.dirty || control.touched);\r\n  }\r\n\r\n  isControlTouched(controlName: string): boolean {\r\n    const control = this.formGroup.controls[controlName];\r\n    return control.dirty || control.touched;\r\n  }\r\n\r\n  public getValidClass(valid) {\r\n    let stringClass = 'form-control form-control-lg form-control-solid';\r\n    if (valid) {\r\n      stringClass += ' is-valid';\r\n    } else {\r\n      stringClass += ' is-invalid';\r\n    }\r\n    return stringClass;\r\n  }\r\n\r\n  public formatDate(date) {\r\n    const d = new Date(date);\r\n    let month = '' + (d.getMonth() + 1);\r\n    let day = '' + d.getDate();\r\n    const year = d.getFullYear();\r\n    let hours = '' + d.getHours();\r\n    let minutes = '' + d.getMinutes();\r\n    let seconds = '' + d.getSeconds();\r\n\r\n    if (month.length < 2) {\r\n      month = '0' + month;\r\n    }\r\n    if (day.length < 2) {\r\n      day = '0' + day;\r\n    }\r\n\r\n    if (hours.length < 2) {\r\n      hours = '0' + hours;\r\n    }\r\n\r\n    if (minutes.length < 2) {\r\n      minutes = '0' + minutes;\r\n    }\r\n\r\n    if (seconds.length < 2) {\r\n      seconds = '0' + seconds;\r\n    }\r\n\r\n    return [year, month, day].join('-');\r\n  }\r\n}\r\n","<div class=\"card card-custom gutter-b\">\r\n  <ng-container *ngIf=\"requesting\">\r\n    <div class=\"progress progress-modal\">\r\n      <div class=\"progress-bar progress-bar-striped progress-bar-animated bg-primary\" role=\"progressbar\"\r\n        style=\"width: 100%\" aria-valuenow=\"100\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\r\n    </div>\r\n  </ng-container>\r\n\r\n  <div class=\"card-header\">\r\n    <div class=\"card-title\">\r\n      <h3 class=\"card-label\">\r\n        <ng-container *ngIf=\"model\">\r\n          {{ (id ? 'COMMON.EDIT' : 'COMMON.NEW') | translate }}\r\n          <span *ngIf=\"model && model.id\">{{ model.id }} - {{ model.number_space }} </span>\r\n        </ng-container>\r\n      </h3>\r\n    </div>\r\n    <div class=\"card-toolbar\">\r\n      <a type=\"button\" class=\"btn btn-light\" routerLink=\"/spaces\">\r\n        <i class=\"fa fa-arrow-left\"></i>{{ 'COMMON.BACK' | translate }}\r\n      </a>\r\n      <button class=\"btn btn-secondary ml-2\" (click)=\"reset()\">\r\n        <i class=\"fa fa-redo\"></i>{{ 'COMMON.RESET' | translate }}\r\n      </button>\r\n    </div>\r\n  </div>\r\n  <div class=\"card-body\">\r\n    <ul class=\"nav nav-tabs nav-tabs-line\" role=\"tablist\">\r\n      <li *ngIf=\"model && model.id\" class=\"nav-item cursor-pointer\" (click)=\"changeTab(tabs.BASIC_TAB)\">\r\n        <a class=\"nav-link\" data-toggle=\"tab\" role=\"tab\" [attr.aria-selected]=\"activeTabId === tabs.BASIC_TAB\"\r\n          [class.active]=\"activeTabId === tabs.BASIC_TAB\" routerLink=\"{{parent}}/edit/{{model.id}}\">\r\n          {{ 'COMMON.BASIC_INFO' | translate }}\r\n        </a>\r\n      </li>\r\n      <li *ngIf=\"(model && model.id && authService.hasPermission('view_room'))\" class=\"nav-item cursor-pointer\" (click)=\"changeTab(tabs.ROOMS_TAB)\">\r\n        <a class=\"nav-link\" data-toggle=\"tab\" role=\"button\" [attr.aria-selected]=\"activeTabId === tabs.ROOMS_TAB\"\r\n          [class.active]=\"activeTabId === tabs.ROOMS_TAB\" routerLink=\"{{parent}}/edit/{{model.id}}/rooms\">{{ 'SPACE.ROOMS' | translate }}</a>\r\n      </li>\r\n    </ul>\r\n\r\n    <ng-container *ngIf=\"activeTabId === tabs.BASIC_TAB\">\r\n      <div class=\"mt-5\" *ngIf=\"model\">\r\n        <form action=\"#\" class=\"form form-label-right\" [formGroup]=\"formGroup\">\r\n          <div class=\"form-group row\">\r\n            <div class=\"col-lg-4\">\r\n              <label>{{ 'COMMON.ENTER' | translate }} {{ 'SPACE.FUNCTIONARY' | translate}}</label>\r\n              <app-functionary-autocomplete\r\n              name=\"functionary\" [valid]=\"isControlValid('functionary')\" [touched]=\"isControlTouched('functionary')\" [class.is-invalid]=\"isControlInvalid('functionary')\"\r\n              [class.is-valid]=\"isControlValid('functionary')\" formControlName=\"functionary\" id=\"functionary\" [model]=\"model.functionary\" [addFilters]=\"[{key: 'user.groups', value: 3}]\"></app-functionary-autocomplete>\r\n              <div class=\"feedback\" *ngIf=\"!isControlTouched('functionary')\">{{ 'COMMON.PLEASE_ENTER' | translate }} <b>{{ 'SPACE.FUNCTIONARY' | translate}}</b></div>\r\n              <div class=\"valid-feedback\" *ngIf=\"isControlValid('functionary')\">{{ 'SPACE.FUNCTIONARY' | translate}}  {{ 'COMMON.WAS_ENTERED_CORRECT' | translate }}</div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"controlHasError('required', 'functionary')\">{{ 'SPACE.FUNCTIONARY' | translate}}  {{ 'COMMON.IS_REQUIRED' | translate }}</div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"controlHasError('minlength', 'functionary')\">{{ 'SPACE.FUNCTIONARY' | translate}} {{ 'COMMON.SHOULD_HAVE_LEAST' | translate }} 3</div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"controlHasError('maxLength', 'functionary')\">{{ 'SPACE.FUNCTIONARY' | translate}} {{ 'COMMON.SHOULD_HAVE_MAXIMUM' | translate }} 30</div>\r\n            </div>  \r\n            <div class=\"col-lg-4 mb-3\">\r\n              <label>{{ 'COMMON.ENTER' | translate }} {{ 'SPACE.NAME' | translate }}</label>\r\n              <input type=\"text\" class=\"form-control form-control-lg form-control-solid\" autocomplete=\"off\"\r\n                name=\"name\" [class.is-invalid]=\"isControlInvalid('name')\"\r\n                [class.is-valid]=\"isControlValid('name')\" formControlName=\"name\" />\r\n              <div class=\"feedback\" *ngIf=\"!isControlTouched('name')\">{{ 'COMMON.PLEASE_ENTER' | translate }} <b>{{ 'SPACE.NAME' | translate }}</b></div>\r\n              <div class=\"valid-feedback\" *ngIf=\"isControlValid('name')\">{{ 'SPACE.NAME' | translate }}  {{ 'COMMON.WAS_ENTERED_CORRECT' | translate }}</div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"controlHasError('required', 'name')\">{{ 'SPACE.NAME' | translate }}  {{ 'COMMON.IS_REQUIRED' | translate }}</div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"controlHasError('minlength', 'name')\">{{ 'SPACE.NAME' | translate }} {{ 'COMMON.SHOULD_HAVE_LEAST' | translate }} 3</div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"controlHasError('maxLength', 'name')\">{{ 'SPACE.NAME' | translate }} {{ 'COMMON.SHOULD_HAVE_MAXIMUM' | translate }} 100</div>\r\n            </div>\r\n            <div class=\"col-lg-4 mb-3\">\r\n              <label>{{ 'COMMON.ENTER' | translate }} {{ 'SPACE.NUMBER_ROOM' | translate }}</label>\r\n              <input type=\"number\" class=\"form-control form-control-lg form-control-solid\" autocomplete=\"off\"\r\n                name=\"number_space\" [class.is-invalid]=\"isControlInvalid('number_space')\"\r\n                [class.is-valid]=\"isControlValid('number_space')\" formControlName=\"number_space\" />\r\n              <div class=\"feedback\" *ngIf=\"!isControlTouched('number_space')\">{{ 'COMMON.PLEASE_ENTER' | translate }} <b>{{ 'SPACE.NUMBER_ROOM' | translate }}</b></div>\r\n              <div class=\"valid-feedback\" *ngIf=\"isControlValid('number_space')\">{{ 'SPACE.NUMBER_ROOM' | translate }}  {{ 'COMMON.WAS_ENTERED_CORRECT' | translate }}</div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"controlHasError('required', 'number_space')\">{{ 'SPACE.NUMBER_ROOM' | translate }}  {{ 'COMMON.IS_REQUIRED' | translate }}</div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"controlHasError('minlength', 'number_space')\">{{ 'SPACE.NUMBER_ROOM' | translate }} {{ 'COMMON.SHOULD_HAVE_LEAST' | translate }} 3</div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"controlHasError('maxLength', 'number_space')\">{{ 'SPACE.NUMBER_ROOM' | translate }} {{ 'COMMON.SHOULD_HAVE_MAXIMUM' | translate }} 100</div>\r\n            </div>\r\n            <div class=\"col-lg-4 mb-3\">\r\n              <label>{{ 'COMMON.ENTER' | translate }} {{ 'SPACE.DESCRIPTION' | translate }}</label>\r\n              <input type=\"text\" class=\"form-control form-control-lg form-control-solid\" autocomplete=\"off\"\r\n                name=\"description\" [class.is-invalid]=\"isControlInvalid('description')\"\r\n                [class.is-valid]=\"isControlValid('description')\" formControlName=\"description\" />\r\n              <div class=\"feedback\" *ngIf=\"!isControlTouched('description')\">{{ 'COMMON.PLEASE_ENTER' | translate }} <b>{{ 'SPACE.DESCRIPTION' | translate }}</b></div>\r\n              <div class=\"valid-feedback\" *ngIf=\"isControlValid('description')\">{{ 'SPACE.DESCRIPTION' | translate }}  {{ 'COMMON.WAS_ENTERED_CORRECT' | translate }}</div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"controlHasError('required', 'description')\">{{ 'SPACE.DESCRIPTION' | translate }}  {{ 'COMMON.IS_REQUIRED' | translate }}</div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"controlHasError('minlength', 'description')\">{{ 'SPACE.DESCRIPTION' | translate }} {{ 'COMMON.SHOULD_HAVE_LEAST' | translate }} 3</div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"controlHasError('maxLength', 'description')\">{{ 'SPACE.DESCRIPTION' | translate }} {{ 'COMMON.SHOULD_HAVE_MAXIMUM' | translate }} 100</div>\r\n            </div>\r\n            <div class=\"col-lg-4 mb-3\">\r\n              <label>{{ 'COMMON.ENTER' | translate }} {{ 'SPACE.ACTIVE' | translate}}</label>\r\n              <p-toggleButton class=\"form-control form-control-lg form-control-solid\" formControlName=\"active\" onLabel=\"{{ 'COMMON.YES' | translate}}\" offLabel=\"{{ 'COMMON.NO' | translate}}\"></p-toggleButton>\r\n              <div class=\"feedback\" *ngIf=\"!isControlTouched('active')\">{{ 'COMMON.PLEASE_ENTER' | translate }} <b>{{ 'SPACE.ACTIVE' | translate}}</b></div>\r\n              <div class=\"valid-feedback\" *ngIf=\"isControlValid('active')\">{{ 'SPACE.ACTIVE' | translate}}  {{ 'COMMON.WAS_ENTERED_CORRECT' | translate }}</div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"controlHasError('required', 'active')\">{{ 'SPACE.ACTIVE' | translate}}  {{ 'COMMON.IS_REQUIRED' | translate }}</div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"controlHasError('minlength', 'active')\">{{ 'SPACE.ACTIVE' | translate}} {{ 'COMMON.SHOULD_HAVE_LEAST' | translate }} 3</div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"controlHasError('maxLength', 'active')\">{{ 'SPACE.ACTIVE' | translate}} {{ 'COMMON.SHOULD_HAVE_MAXIMUM' | translate }} 100</div>\r\n            </div>\r\n            <div class=\"col-lg-4\">\r\n              <label>{{ 'COMMON.ENTER' | translate }} {{ 'SPACE.FUNCTIONARYS' | translate }}</label>\r\n              <app-functionary-multiselect\r\n              name=\"functionarys\" [valid]=\"isControlValid('functionarys')\" [touched]=\"isControlTouched('functionarys')\" [class.is-invalid]=\"isControlInvalid('functionarys')\"\r\n              [class.is-valid]=\"isControlValid('functionarys')\" formControlName=\"functionarys\" id=\"functionarys\" [model]=\"model.functionarys\" [addFilters]=\"[{key: 'user.groups', value: 2}]\"></app-functionary-multiselect>\r\n              <div class=\"feedback\" *ngIf=\"!isControlTouched('functionarys')\">{{ 'COMMON.PLEASE_ENTER' | translate }} <b>{{ 'SPACE.FUNCTIONARYS' | translate }}</b></div>\r\n              <div class=\"valid-feedback\" *ngIf=\"isControlValid('functionarys')\">{{ 'SPACE.FUNCTIONARYS' | translate }}  {{ 'COMMON.WAS_ENTERED_CORRECT' | translate }}</div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"controlHasError('required', 'functionarys')\">{{ 'SPACE.FUNCTIONARYS' | translate }}  {{ 'COMMON.IS_REQUIRED' | translate }}</div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"controlHasError('minlength', 'functionarys')\">{{ 'SPACE.FUNCTIONARYS' | translate }} {{ 'COMMON.SHOULD_HAVE_LEAST' | translate }} 3</div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"controlHasError('maxLength', 'functionarys')\">{{ 'SPACE.FUNCTIONARYS' | translate }} {{ 'COMMON.SHOULD_HAVE_MAXIMUM' | translate }} 30</div>\r\n            </div>\r\n          </div>\r\n          <div class=\"float-right\">\r\n            <a class=\"btn btn-default font-weight-bold mr-2\" routerLink=\"/spaces\">{{ 'COMMON.CANCEL' | translate }}</a>\r\n            <button type=\"submit\" class=\"btn btn-primary font-weight-bold mr-2\"\r\n              [disabled]=\"formGroup.invalid\" (click)=\"save(false)\">{{ 'COMMON.SAVE' | translate }}</button>\r\n            <button type=\"submit\" class=\"btn btn-primary font-weight-bold mr-2\"\r\n              [disabled]=\"formGroup.invalid\" (click)=\"save(true)\">{{ 'COMMON.SAVE_AND_EXIT' | translate }}</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </ng-container>\r\n\r\n    <ng-container *ngIf=\"activeTabId === tabs.ROOMS_TAB\">\r\n      <div class=\"mt-5\" *ngIf=\"model && model.id\">\r\n        <app-room></app-room>\r\n      </div>\r\n    </ng-container>\r\n  </div>\r\n</div>","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { AbstractControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Observable, of, Subscription } from 'rxjs';\r\nimport { catchError, switchMap, tap } from 'rxjs/operators';\r\nimport { ToastService } from 'src/app/modules/toast/_services/toast.service';\r\nimport { AuthService } from 'src/app/modules/auth';\r\nimport { GroupModel as Model } from '../../_models/group.model';\r\nimport { GroupService as ModelsService } from '../../_services/group.service';\r\n\r\n@Component({\r\n  selector: 'app-group-edit',\r\n  templateUrl: './group-edit.component.html',\r\n  styleUrls: ['./group-edit.component.scss']\r\n})\r\nexport class GroupEditComponent implements OnInit, OnDestroy {\r\n  public id: number;\r\n  public model: Model;\r\n  public previous: Model;\r\n  public formGroup: FormGroup;\r\n  public requesting: boolean = false;\r\n\r\n  public tabs = {\r\n    BASIC_TAB: 0,\r\n  };\r\n\r\n  public name: AbstractControl;\r\n  public permissions: AbstractControl;\r\n\r\n  public activeTabId: number;\r\n  private subscriptions: Subscription[] = [];\r\n\r\n  public saveAndExit;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private modelsService: ModelsService,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private toastService: ToastService\r\n  ) {\r\n    this.activeTabId = this.tabs.BASIC_TAB; // 0 => Basic info | 1 => Profile\r\n    this.saveAndExit = false;\r\n    this.requesting = false;\r\n\r\n    this.formGroup = this.fb.group({\r\n      name: ['', Validators.compose([Validators.required, Validators.minLength(3), Validators.maxLength(30)])],\r\n      permissions: [''],\r\n    });\r\n    this.name = this.formGroup.controls['name'];\r\n    this.permissions = this.formGroup.controls['permissions'];\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.id = undefined;\r\n    this.model = undefined;\r\n    this.previous = undefined;\r\n    this.get();\r\n  }\r\n\r\n  get() {\r\n    this.requesting = true;\r\n    const sb = this.route.paramMap.pipe(\r\n      switchMap(params => {\r\n        // get id from URL\r\n        this.id = Number(params.get('id'));\r\n        if (this.id || this.id > 0) {\r\n          return this.modelsService.getById(this.id);\r\n        }\r\n        return of({ 'group': new Model() });\r\n      }),\r\n      catchError((error) => {\r\n        this.requesting = false;\r\n        let messageError = [];\r\n        if (!Array.isArray(error.error)) {\r\n          messageError.push(error.error);\r\n        } else {\r\n          messageError = error.error;\r\n        }\r\n        Object.entries(messageError).forEach(\r\n          ([key, value]) => this.toastService.growl('error', key + ': ' + value)\r\n        );\r\n        return of({ 'group': new Model() });\r\n      }),\r\n    ).subscribe((response: any) => {\r\n      this.requesting = false;\r\n      if (response) {\r\n        this.model = response.group;\r\n        if (response.permissions) {\r\n          this.model.permissions = response.permissions;\r\n        }\r\n        this.previous = Object.assign({}, this.model);\r\n        this.loadForm();\r\n      }\r\n    });\r\n    this.subscriptions.push(sb);\r\n  }\r\n\r\n  loadForm() {\r\n    if (this.model.id) {\r\n      this.name.setValue(this.model.name);\r\n      if (this.model.permissions) {\r\n        this.permissions.setValue(this.model.permissions);\r\n      }\r\n    }\r\n    this.formGroup.markAllAsTouched();\r\n  }\r\n\r\n  reset() {\r\n    if (this.previous) {\r\n      this.model = Object.assign({}, this.previous);\r\n      this.loadForm();\r\n    }\r\n  }\r\n\r\n  save(saveAndExit) {\r\n    this.saveAndExit = saveAndExit;\r\n    this.formGroup.markAllAsTouched();\r\n    if (this.formGroup.valid) {\r\n      const formValues = this.formGroup.value;\r\n      this.model = Object.assign(this.model, formValues);\r\n      if (this.id) {\r\n        this.edit();\r\n      } else {\r\n        this.create();\r\n      }\r\n    }\r\n  }\r\n\r\n  edit() {\r\n    this.requesting = true;\r\n    let model = this.model;\r\n\r\n    let permissions = [];\r\n    this.model.permissions.forEach(element => {\r\n      permissions.push(element.id);\r\n    });\r\n    model.permissions = permissions;\r\n\r\n    const sbUpdate = this.modelsService.patch(this.id, model).pipe(\r\n      tap(() => {\r\n        this.toastService.growl('success', 'success');\r\n        if (this.saveAndExit) {\r\n          this.router.navigate(['/groups']);\r\n        }\r\n      }),\r\n      catchError((error) => {\r\n        this.requesting = false;\r\n        let messageError = [];\r\n        if (!Array.isArray(error.error)) {\r\n          messageError.push(error.error);\r\n        } else {\r\n          messageError = error.error;\r\n        }\r\n        Object.entries(messageError).forEach(\r\n          ([key, value]) => this.toastService.growl('error', key + ': ' + value)\r\n        );\r\n        return of(this.model);\r\n      })\r\n    ).subscribe(response => {\r\n      this.requesting = false;\r\n      this.model = response.group\r\n    });\r\n    this.subscriptions.push(sbUpdate);\r\n  }\r\n\r\n  create() {\r\n    this.requesting = true;\r\n    let model = this.model;\r\n\r\n    let permissions = [];\r\n    this.model.permissions.forEach(element => {\r\n      permissions.push(element.id);\r\n    });\r\n    model.permissions = permissions;\r\n\r\n    const sbCreate = this.modelsService.post(model).pipe(\r\n      tap(() => {\r\n        this.toastService.growl('success', 'success');\r\n        if (this.saveAndExit) {\r\n          this.router.navigate(['/groups']);\r\n        } else {\r\n          this.formGroup.reset()\r\n        }\r\n      }),\r\n      catchError((error) => {\r\n        this.requesting = false;\r\n        let messageError = [];\r\n        if (!Array.isArray(error.error)) {\r\n          messageError.push(error.error);\r\n        } else {\r\n          messageError = error.error;\r\n        }\r\n        Object.entries(messageError).forEach(\r\n          ([key, value]) => this.toastService.growl('error', key + ': ' + value)\r\n        );\r\n        return of(this.model);\r\n      })\r\n    ).subscribe(response => {\r\n      this.requesting = false;\r\n      this.model = response.group as Model\r\n    });\r\n    this.subscriptions.push(sbCreate);\r\n  }\r\n\r\n  changeTab(tabId: number) {\r\n    this.activeTabId = tabId;\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscriptions.forEach(sb => sb.unsubscribe());\r\n  }\r\n\r\n  // helpers for View\r\n  isControlValid(controlName: string): boolean {\r\n    const control = this.formGroup.controls[controlName];\r\n    return control.valid && (control.dirty || control.touched);\r\n  }\r\n\r\n  isControlInvalid(controlName: string): boolean {\r\n    const control = this.formGroup.controls[controlName];\r\n    return control.invalid && (control.dirty || control.touched);\r\n  }\r\n\r\n  controlHasError(validation: string, controlName: string) {\r\n    const control = this.formGroup.controls[controlName];\r\n    return control.hasError(validation) && (control.dirty || control.touched);\r\n  }\r\n\r\n  isControlTouched(controlName: string): boolean {\r\n    const control = this.formGroup.controls[controlName];\r\n    return control.dirty || control.touched;\r\n  }\r\n}\r\n","<div class=\"card card-custom gutter-b\">\r\n  <ng-container *ngIf=\"requesting\">\r\n    <div class=\"progress progress-modal\">\r\n      <div class=\"progress-bar progress-bar-striped progress-bar-animated bg-primary\" role=\"progressbar\"\r\n        style=\"width: 100%\" aria-valuenow=\"100\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\r\n    </div>\r\n  </ng-container>\r\n\r\n  <div class=\"card-header\">\r\n    <div class=\"card-title\">\r\n      <h3 class=\"card-label\">\r\n        <ng-container *ngIf=\"model\">\r\n          {{ (id ? 'COMMON.EDIT' : 'COMMON.NEW') | translate }}\r\n          <span *ngIf=\"model && model.id\">{{ 'GROUP.GROUP' | translate }} : {{ model.id }}</span>\r\n        </ng-container>\r\n      </h3>\r\n    </div>\r\n    <div class=\"card-toolbar\">\r\n      <a type=\"button\" class=\"btn btn-light\" routerLink=\"/groups\">\r\n        <i class=\"fa fa-arrow-left\"></i>{{ 'COMMON.BACK' | translate }}\r\n      </a>\r\n      <button class=\"btn btn-secondary ml-2\" (click)=\"reset()\">\r\n        <i class=\"fa fa-redo\"></i>{{ 'COMMON.RESET' | translate }}\r\n      </button>\r\n    </div>\r\n  </div>\r\n  <div class=\"card-body\">\r\n    <ul class=\"nav nav-tabs nav-tabs-line\" role=\"tablist\">\r\n      <li class=\"nav-item cursor-pointer\" (click)=\"changeTab(tabs.BASIC_TAB)\">\r\n        <a class=\"nav-link\" data-toggle=\"tab\" role=\"tab\" [attr.aria-selected]=\"activeTabId === tabs.BASIC_TAB\"\r\n          [class.active]=\"activeTabId === tabs.BASIC_TAB\">\r\n          {{ 'COMMON.BASIC_INFO' | translate }}\r\n        </a>\r\n      </li>\r\n      <!-- <li *ngIf=\"model && model.id\" class=\"nav-item cursor-pointer\" (click)=\"changeTab(tabs.PROFILE)\">\r\n        <a class=\"nav-link\" data-toggle=\"tab\" role=\"button\" [attr.aria-selected]=\"activeTabId === tabs.PROFILE\"\r\n          [class.active]=\"activeTabId === tabs.PROFILE\">Profile</a>\r\n      </li> -->\r\n    </ul>\r\n\r\n    <ng-container *ngIf=\"activeTabId === tabs.BASIC_TAB\">\r\n      <div class=\"mt-5\" *ngIf=\"model\">\r\n        <form action=\"#\" class=\"form form-label-right\" [formGroup]=\"formGroup\">\r\n          <div class=\"form-group row\">\r\n            <div class=\"col-lg-6\">\r\n              <label>{{ 'COMMON.ENTER' | translate }} {{ 'GROUP.NAME' | translate }}</label>\r\n              <input type=\"text\" class=\"form-control form-control-lg form-control-solid\" autocomplete=\"off\"\r\n                name=\"name\" [class.is-invalid]=\"isControlInvalid('name')\"\r\n                [class.is-valid]=\"isControlValid('name')\" formControlName=\"name\" />\r\n              <div class=\"feedback\" *ngIf=\"!isControlTouched('name')\">{{ 'COMMON.PLEASE_ENTER' | translate }} <b>{{ 'GROUP.NAME' | translate }}</b></div>\r\n              <div class=\"valid-feedback\" *ngIf=\"isControlValid('name')\">{{ 'GROUP.NAME' | translate }}  {{ 'COMMON.WAS_ENTERED_CORRECT' | translate }}</div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"controlHasError('required', 'name')\">{{ 'GROUP.NAME' | translate }}  {{ 'COMMON.IS_REQUIRED' | translate }}</div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"controlHasError('minlength', 'name')\">{{ 'GROUP.NAME' | translate }} {{ 'COMMON.SHOULD_HAVE_LEAST' | translate }} 3</div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"controlHasError('maxLength', 'name')\">{{ 'GROUP.NAME' | translate }} {{ 'COMMON.SHOULD_HAVE_MAXIMUM' | translate }} 100</div>\r\n            </div>\r\n            <div class=\"col-lg-6\">\r\n              <label>{{ 'COMMON.ENTER' | translate }} {{ 'GROUP.PERMISSIONS' | translate }}</label>\r\n              <app-permission-multiselect\r\n              name=\"permissions\" [valid]=\"isControlValid('permissions')\" [touched]=\"isControlTouched('permissions')\" [class.is-invalid]=\"isControlInvalid('permissions')\"\r\n              [class.is-valid]=\"isControlValid('permissions')\" formControlName=\"permissions\" id=\"permissions\" [model]=\"model.permissions\"></app-permission-multiselect>\r\n              <div class=\"feedback\" *ngIf=\"!isControlTouched('permissions')\">{{ 'COMMON.PLEASE_ENTER' | translate }} <b>{{ 'GROUP.PERMISSIONS' | translate }}</b></div>\r\n              <div class=\"valid-feedback\" *ngIf=\"isControlValid('permissions')\">{{ 'GROUP.PERMISSIONS' | translate }}  {{ 'COMMON.WAS_ENTERED_CORRECT' | translate }}</div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"controlHasError('required', 'permissions')\">{{ 'GROUP.PERMISSIONS' | translate }}  {{ 'COMMON.IS_REQUIRED' | translate }}</div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"controlHasError('minlength', 'permissions')\">{{ 'GROUP.PERMISSIONS' | translate }} {{ 'COMMON.SHOULD_HAVE_LEAST' | translate }} 3</div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"controlHasError('maxLength', 'permissions')\">{{ 'GROUP.PERMISSIONS' | translate }} {{ 'COMMON.SHOULD_HAVE_MAXIMUM' | translate }} 30</div>\r\n            </div>\r\n          </div>\r\n          <div class=\"float-right\">\r\n            <a class=\"btn btn-default font-weight-bold mr-2\" routerLink=\"/groups\">{{ 'COMMON.CANCEL' | translate }}</a>\r\n            <button type=\"submit\" class=\"btn btn-primary font-weight-bold mr-2\"\r\n              [disabled]=\"formGroup.invalid\" (click)=\"save(false)\">{{ 'COMMON.SAVE' | translate }}</button>\r\n            <button type=\"submit\" class=\"btn btn-primary font-weight-bold mr-2\"\r\n              [disabled]=\"formGroup.invalid\" (click)=\"save(true)\">{{ 'COMMON.SAVE_AND_EXIT' | translate }}</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </ng-container>\r\n  </div>\r\n</div>","import { Component, forwardRef, Renderer2, ViewChild, Input, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { ContentTypeService as ModelsService } from '../../_services/content-type.service';\r\nimport { LazyLoadEvent } from 'primeng/api';\r\nimport { ToastService } from 'src/app/modules/toast/_services/toast.service';\r\nimport { AuthService } from 'src/app/modules/auth';\r\nexport const EPANDED_TEXTAREA_VALUE_ACCESSOR: any = {\r\n    provide: NG_VALUE_ACCESSOR,\r\n    useExisting: forwardRef(() => ContentTypeSelectComponent),\r\n    multi: true,\r\n};\r\n\r\n@Component({\r\n    selector: 'app-content-type-select',\r\n    templateUrl: './content-type-select.component.html',\r\n    styleUrls: ['./content-type-select.component.scss'],\r\n    providers: [EPANDED_TEXTAREA_VALUE_ACCESSOR],\r\n})\r\nexport class ContentTypeSelectComponent implements ControlValueAccessor, OnInit {\r\n    @Input() model: any;\r\n    @Input() valid: boolean;\r\n    @Input() touched: boolean;\r\n    @Input() required: boolean;\r\n    @Input() disabled: boolean;\r\n    @Input() placeholder: string;\r\n    @Input() addFilters: { key: string, value: string }[];\r\n\r\n    public models: any[];\r\n\r\n    public onChange;\r\n    public onTouched;\r\n\r\n    public totalRecords: number;\r\n    public page: number;\r\n    public per_page: number;\r\n    public sort: string;\r\n    public query: string;\r\n    public filters: { key: string, value: string }[];\r\n    public _with: { key: string, value: string }[];\r\n\r\n    public value: any;\r\n\r\n    constructor(\r\n        public modelsService: ModelsService,\r\n        public toastService: ToastService\r\n    ) {\r\n        this.page = 1;\r\n        this.per_page = 100;\r\n    }\r\n\r\n    public ngOnInit() {\r\n        if (!this.placeholder) {\r\n            this.placeholder = 'Content Type';\r\n        }\r\n        this.load();\r\n    }\r\n\r\n    writeValue(value: any) {\r\n        // const div = this.textarea.nativeElement;\r\n        // this.renderer.setProperty(div, 'textContent', value);\r\n        this.value = value;\r\n    }\r\n\r\n    registerOnChange(fn: any) {\r\n        this.onChange = fn;\r\n    }\r\n\r\n    registerOnTouched(fn: any) {\r\n        this.onTouched = fn;\r\n    }\r\n\r\n    setDisabledState(isDisabled: boolean) {\r\n        this.disabled = isDisabled;\r\n    }\r\n\r\n    public change($event) {\r\n        this.onChange(this.value);\r\n        this.onTouched(this.value);\r\n    }\r\n\r\n    public load() {\r\n        this.filters = [];\r\n        if (this.addFilters) {\r\n            this.addFilters.forEach(element => {\r\n                this.filters.push({ key: 'filter{' + element.key + '}', value: element.value })\r\n            });\r\n        }\r\n        this.getModels();\r\n    }\r\n\r\n    getModels() {\r\n        this.modelsService.get(this.page, this.per_page, this.sort, this.query, this.filters, this._with).subscribe(\r\n            response => {\r\n                this.models = response.content_types;\r\n                this.totalRecords = response.meta.total_results;\r\n                // if (this.model) {\r\n                //     if (this.model.id) {\r\n                //         this.model.id = undefined;\r\n                //         this.value = this.models[0];\r\n                //         this.filters = [];\r\n                //     }\r\n                // }\r\n            },\r\n            error => {\r\n                let messageError = [];\r\n                if (!Array.isArray(error.error)) {\r\n                    messageError.push(error.error);\r\n                } else {\r\n                    messageError = error.error;\r\n                }\r\n                Object.entries(messageError).forEach(\r\n                    ([key, value]) => this.toastService.growl('error', key + ': ' + value)\r\n                );\r\n            }\r\n        );\r\n    }\r\n\r\n    public isValid() {\r\n        let stringClass = 'form-control form-control-lg form-control-solid';\r\n        if (this.touched) {\r\n            if (this.valid) {\r\n                stringClass += ' is-valid';\r\n            } else {\r\n                stringClass += ' is-invalid';\r\n            }\r\n        }\r\n        return stringClass;\r\n    }\r\n}\r\n","<div>\r\n    <p-dropdown [styleClass]=\"isValid()\" [options]=\"models\" (onChange)=\"change($event)\" [(ngModel)]=\"value\" optionLabel=\"model\" placeholder=\"{{placeholder}}\" [disabled]=\"disabled\" [required]=\"required\">\r\n    </p-dropdown>\r\n</div>","export { UserService } from './user.service'; // You have to uncomment this, when your real back-end is done\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\nimport { InlineSVGModule } from 'ng-inline-svg';\r\n\r\nimport { TableModule }  from 'primeng/table';\r\nimport { ToggleButtonModule } from 'primeng/togglebutton';\r\nimport { ConfirmDialogModule } from 'primeng/confirmdialog';\r\nimport { FileUploadModule } from 'primeng/fileupload';\r\nimport { DialogModule } from 'primeng/dialog';\r\nimport { CalendarModule } from 'primeng/calendar';\r\nimport { DropdownModule } from 'primeng/dropdown';\r\nimport { AutoCompleteModule } from 'primeng/autocomplete';\r\nimport { BadgeModule } from 'primeng/badge';\r\nimport { ChipsModule } from 'primeng/chips';\r\nimport { MultiSelectModule } from 'primeng/multiselect';\r\nimport { EditorModule } from 'primeng/editor';\r\nimport { FieldsetModule } from 'primeng/fieldset';\r\n\r\nimport { ImageCropperModule } from 'ngx-image-cropper';\r\n\r\nimport { CurrencyMaskModule } from \"ng2-currency-mask\";\r\n\r\nimport { TranslateModule } from '@ngx-translate/core';\r\n\r\n// import { CompanyModule } from './company/company.module';\r\n// import { TypeCompanyModule } from './type-company/type-company.module';\r\n\r\n// Users\r\nimport { UsersComponent } from './user/users/users.component';\r\nimport { UserComponent } from './user/user.component';\r\nimport { UserEditComponent } from './user/users/user-edit/user-edit.component';\r\nimport { UserAutocompleteComponent } from './user/users/user-autocomplete/user-autocomplete.component';\r\n\r\n// Functionarys\r\nimport { FunctionarysComponent } from './functionary/functionarys/functionarys.component';\r\nimport { FunctionaryComponent } from './functionary/functionary.component';\r\nimport { FunctionaryEditComponent } from './functionary/functionarys/functionary-edit/functionary-edit.component';\r\nimport { FunctionaryAutocompleteComponent } from './functionary/functionarys/functionary-autocomplete/functionary-autocomplete.component';\r\nimport { FunctionaryMultiselectComponent } from './functionary/functionarys/functionary-multiselect/functionary-multiselect.component';\r\n\r\n// Spaces\r\nimport { SpacesComponent } from './space/spaces/spaces.component';\r\nimport { SpaceComponent } from './space/space.component';\r\nimport { SpaceEditComponent } from './space/spaces/space-edit/space-edit.component';\r\nimport { SpaceAutocompleteComponent } from './space/spaces/space-autocomplete/space-autocomplete.component';\r\n\r\n// Rooms\r\nimport { RoomsComponent } from './room/rooms/rooms.component';\r\nimport { RoomComponent } from './room/room.component';\r\nimport { RoomEditComponent } from './room/rooms/room-edit/room-edit.component';\r\nimport { RoomAutocompleteComponent } from './room/rooms/room-autocomplete/room-autocomplete.component';\r\n\r\n// Folders\r\nimport { FoldersComponent } from './folder/folders/folders.component';\r\nimport { FolderComponent } from './folder/folder.component';\r\nimport { FolderEditComponent } from './folder/folders/folder-edit/folder-edit.component';\r\nimport { FolderAutocompleteComponent } from './folder/folders/folder-autocomplete/folder-autocomplete.component';\r\n\r\n// Evidences\r\nimport { EvidencesComponent } from './evidence/evidences/evidences.component';\r\nimport { EvidenceComponent } from './evidence/evidence.component';\r\nimport { EvidenceEditComponent } from './evidence/evidences/evidence-edit/evidence-edit.component';\r\nimport { EvidenceAutocompleteComponent } from './evidence/evidences/evidence-autocomplete/evidence-autocomplete.component';\r\n\r\n// Permission\r\nimport { PermissionsComponent } from './permission/permissions/permissions.component';\r\nimport { PermissionComponent } from './permission/permission.component';\r\nimport { PermissionEditComponent } from './permission/permissions/permission-edit/permission-edit.component';\r\nimport { PermissionAutocompleteComponent } from './permission/permissions/permission-autocomplete/permission-autocomplete.component';\r\nimport { PermissionMultiselectComponent } from './permission/permissions/permission-multiselect/permission-multiselect.component';\r\n\r\n// Groups\r\nimport { GroupsComponent } from './group/groups/groups.component';\r\nimport { GroupComponent } from './group/group.component';\r\nimport { GroupEditComponent } from './group/groups/group-edit/group-edit.component';\r\nimport { GroupAutocompleteComponent } from './group/groups/group-autocomplete/group-autocomplete.component';\r\nimport { GroupMultiselectComponent } from './group/groups/group-multiselect/group-multiselect.component';\r\n\r\n// ContentTypes\r\nimport { ContentTypesComponent } from './content-type/content-types/content-types.component';\r\nimport { ContentTypeComponent } from './content-type/content-type.component';\r\nimport { ContentTypeEditComponent } from './content-type/content-types/content-type-edit/content-type-edit.component';\r\nimport { ContentTypeSelectComponent } from './content-type/content-types/content-type-select/content-type-select.component';\r\nimport { ContentTypeAutocompleteComponent } from './content-type/content-types/content-type-autocomplete/content-type-autocomplete.component';\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    TableModule,\r\n    FileUploadModule,\r\n    DialogModule,\r\n    ConfirmDialogModule,\r\n    AutoCompleteModule,\r\n    BadgeModule,\r\n    ChipsModule,\r\n    MultiSelectModule,\r\n    EditorModule,\r\n    FieldsetModule,\r\n    CurrencyMaskModule,\r\n    ToggleButtonModule,\r\n    CalendarModule,\r\n    DropdownModule,\r\n    ImageCropperModule,\r\n    // CompanyModule,\r\n    // TypeCompanyModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    RouterModule,\r\n    InlineSVGModule,\r\n    TranslateModule.forRoot(),\r\n  ],\r\n  declarations: [\r\n    UsersComponent,\r\n    UserComponent,\r\n    UserEditComponent,\r\n    UserAutocompleteComponent,\r\n    FunctionarysComponent,\r\n    FunctionaryComponent,\r\n    FunctionaryEditComponent,\r\n    FunctionaryAutocompleteComponent,\r\n    FunctionaryMultiselectComponent,\r\n    SpacesComponent,\r\n    SpaceComponent,\r\n    SpaceEditComponent,\r\n    SpaceAutocompleteComponent,\r\n    RoomsComponent,\r\n    RoomComponent,\r\n    RoomEditComponent,\r\n    RoomAutocompleteComponent,\r\n    FoldersComponent,\r\n    FolderComponent,\r\n    FolderEditComponent,\r\n    FolderAutocompleteComponent,\r\n    PermissionsComponent,\r\n    PermissionComponent,\r\n    PermissionEditComponent,\r\n    PermissionAutocompleteComponent,\r\n    PermissionMultiselectComponent,\r\n    GroupsComponent,\r\n    GroupComponent,\r\n    GroupEditComponent,\r\n    GroupAutocompleteComponent,\r\n    GroupMultiselectComponent,\r\n    ContentTypesComponent,\r\n    ContentTypeComponent,\r\n    ContentTypeEditComponent,\r\n    ContentTypeSelectComponent,\r\n    ContentTypeAutocompleteComponent,\r\n    EvidencesComponent,\r\n    EvidenceComponent,\r\n    EvidenceEditComponent,\r\n    EvidenceAutocompleteComponent\r\n  ]\r\n})\r\nexport class PagesModule { }\r\n","// Localization is based on '@ngx-translate/core';\r\n// Please be familiar with official documentations first => https://github.com/ngx-translate/core\r\n\r\nimport { Injectable } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\nexport interface Locale {\r\n  lang: string;\r\n  data: any;\r\n}\r\n\r\nconst LOCALIZATION_LOCAL_STORAGE_KEY = 'language';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class TranslationService {\r\n  // Private properties\r\n  private langIds: any = [];\r\n\r\n  constructor(private translate: TranslateService) {\r\n    // add new langIds to the list\r\n    this.translate.addLangs(['en']);\r\n\r\n    // this language will be used as a fallback when a translation isn't found in the current language\r\n    this.translate.setDefaultLang('es');\r\n  }\r\n\r\n  loadTranslations(...args: Locale[]): void {\r\n    const locales = [...args];\r\n\r\n    locales.forEach((locale) => {\r\n      // use setTranslation() with the third argument set to true\r\n      // to append translations instead of replacing them\r\n      this.translate.setTranslation(locale.lang, locale.data, true);\r\n\r\n      this.langIds.push(locale.lang);\r\n    });\r\n\r\n    // add new languages to the list\r\n    this.translate.addLangs(this.langIds);\r\n  }\r\n\r\n  setLanguage(lang) {\r\n    if (lang) {\r\n      this.translate.use(this.translate.getDefaultLang());\r\n      this.translate.use(lang);\r\n      localStorage.setItem(LOCALIZATION_LOCAL_STORAGE_KEY, lang);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Returns selected language\r\n   */\r\n  getSelectedLanguage(): any {\r\n    return (\r\n      localStorage.getItem(LOCALIZATION_LOCAL_STORAGE_KEY) ||\r\n      this.translate.getDefaultLang()\r\n    );\r\n  }\r\n}\r\n","import { Component, forwardRef, Renderer2, ViewChild, Input, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { FunctionaryService as ModelsService } from '../../_services/functionary.service';\r\nimport { LazyLoadEvent } from 'primeng/api';\r\nimport { ToastService } from 'src/app/modules/toast/_services/toast.service';\r\nimport { AuthService } from 'src/app/modules/auth';\r\nexport const EPANDED_TEXTAREA_VALUE_ACCESSOR: any = {\r\n    provide: NG_VALUE_ACCESSOR,\r\n    useExisting: forwardRef(() => FunctionaryAutocompleteComponent),\r\n    multi: true,\r\n};\r\n\r\n@Component({\r\n    selector: 'app-functionary-autocomplete',\r\n    templateUrl: './functionary-autocomplete.component.html',\r\n    styleUrls: ['./functionary-autocomplete.component.scss'],\r\n    providers: [EPANDED_TEXTAREA_VALUE_ACCESSOR],\r\n})\r\nexport class FunctionaryAutocompleteComponent implements ControlValueAccessor, OnInit {\r\n    @Input() model: any;\r\n    @Input() valid: boolean;\r\n    @Input() touched: boolean;\r\n    @Input() required: boolean;\r\n    @Input() disabled: boolean;\r\n    @Input() placeholder: string;\r\n    @Input() addFilters: { key: string, value: string }[];\r\n\r\n    public models: any[];\r\n\r\n    public onChange;\r\n    public onTouched;\r\n\r\n    public firstTime: boolean;\r\n    public totalRecords: number;\r\n    public page: number;\r\n    public per_page: number;\r\n    public sort: string;\r\n    public query: string;\r\n    public filters: { key: string, value: string }[];\r\n    public _with: { key: string, value: string }[];\r\n\r\n    public value: any;\r\n\r\n    constructor(\r\n        public modelsService: ModelsService,\r\n        public toastService: ToastService\r\n    ) {\r\n        this.page = 1;\r\n        this.per_page = 100;\r\n        this.firstTime = true;\r\n    }\r\n\r\n    public ngOnInit() {\r\n        if (!this.placeholder) {\r\n            this.placeholder = '';\r\n        }\r\n    }\r\n\r\n    writeValue(value: any) {\r\n        // const div = this.textarea.nativeElement;\r\n        // this.renderer.setProperty(div, 'textContent', value);\r\n        this.value = value;\r\n    }\r\n\r\n    registerOnChange(fn: any) {\r\n        this.onChange = fn;\r\n    }\r\n\r\n    registerOnTouched(fn: any) {\r\n        this.onTouched = fn;\r\n    }\r\n\r\n    setDisabledState(isDisabled: boolean) {\r\n        this.disabled = isDisabled;\r\n    }\r\n\r\n    public change($event) {\r\n        this.onChange(this.value);\r\n        this.onTouched(this.value);\r\n    }\r\n\r\n    public loadLazy(event) {\r\n        this.filters = [];\r\n        if (event.sortField) {\r\n            if (event.sortOrder === -1) {\r\n                this.sort = '-' + event.sortField;\r\n            } else {\r\n                this.sort = event.sortField;\r\n            }\r\n        } else {\r\n            this.sort = '-id';\r\n        }\r\n\r\n        if (this.addFilters) {\r\n            this.addFilters.forEach(element => {\r\n                this.filters.push({ key: 'filter{' + element.key + '}', value: element.value })\r\n            });\r\n        }\r\n\r\n        if (event.query) {\r\n            this.filters.push({ key: 'filter{identification_number.icontains}', value: event.query })\r\n        } else {\r\n            this.query = undefined;\r\n        }\r\n\r\n        if (event.rows) {\r\n            this.per_page = event.rows;\r\n        }\r\n\r\n\r\n        if (!this.firstTime) {\r\n            this.getModels();\r\n        }\r\n        this.firstTime = false;\r\n    }\r\n\r\n    getModels() {\r\n        this.modelsService.get(this.page, this.per_page, this.sort, this.query, this.filters, this._with).toPromise().then(\r\n            response => {\r\n                this.models = response.functionaries;\r\n                this.totalRecords = response.meta.total_results;\r\n\r\n                // response.users.forEach(user => {\r\n                //     this.models.forEach(element => {\r\n                //         if (element.user === user.id) {\r\n                //             element.user = user;\r\n                //         }\r\n                //     });\r\n                // });\r\n\r\n                // if (this.model) {\r\n                //     if (this.model.id) {\r\n                //         this.model.id = undefined;\r\n                //         this.value = this.models[0];\r\n                //         this.filters = [];\r\n                //     }\r\n                // }\r\n            },\r\n            error => {\r\n                let messageError = [];\r\n                if (!Array.isArray(error.error)) {\r\n                    messageError.push(error.error);\r\n                } else {\r\n                    messageError = error.error;\r\n                }\r\n                Object.entries(messageError).forEach(\r\n                    ([key, value]) => this.toastService.growl('error', key + ': ' + value)\r\n                );\r\n            }\r\n        );\r\n    }\r\n\r\n    public isValid() {\r\n        let stringClass = 'form-control form-control-lg form-control-solid';\r\n        if (this.touched) {\r\n            if (this.valid) {\r\n                stringClass += ' is-valid';\r\n            } else {\r\n                stringClass += ' is-invalid';\r\n            }\r\n        }\r\n        return stringClass;\r\n    }\r\n}\r\n","<div>\r\n    <p-autoComplete [inputStyleClass]=\"isValid()\" [suggestions]=\"models\" (completeMethod)=\"loadLazy($event)\" (change)=\"change($event)\" (paste)=\"change($event)\" (onSelect)=\"change($event)\" [forceSelection]=\"true\" delay=\"0\" [(ngModel)]=\"value\" field=\"name\" placeholder=\"{{placeholder}}\" [disabled]=\"disabled\" [required]=\"required\">\r\n    </p-autoComplete>\r\n</div>","import { Component, forwardRef, Renderer2, ViewChild, Input, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { GroupService as ModelsService } from '../../_services/group.service';\r\nimport { LazyLoadEvent } from 'primeng/api';\r\nimport { ToastService } from 'src/app/modules/toast/_services/toast.service';\r\nimport { AuthService } from 'src/app/modules/auth';\r\nexport const EPANDED_TEXTAREA_VALUE_ACCESSOR: any = {\r\n    provide: NG_VALUE_ACCESSOR,\r\n    useExisting: forwardRef(() => GroupAutocompleteComponent),\r\n    multi: true,\r\n};\r\n\r\n@Component({\r\n    selector: 'app-group-autocomplete',\r\n    templateUrl: './group-autocomplete.component.html',\r\n    styleUrls: ['./group-autocomplete.component.scss'],\r\n    providers: [EPANDED_TEXTAREA_VALUE_ACCESSOR],\r\n})\r\nexport class GroupAutocompleteComponent implements ControlValueAccessor, OnInit {\r\n    @Input() model: any;\r\n    @Input() valid: boolean;\r\n    @Input() touched: boolean;\r\n    @Input() required: boolean;\r\n    @Input() disabled: boolean;\r\n    @Input() placeholder: string;\r\n    @Input() addFilters: { key: string, value: string }[];\r\n\r\n    public models: any[];\r\n\r\n    public onChange;\r\n    public onTouched;\r\n\r\n    public firstTime: boolean;\r\n    public totalRecords: number;\r\n    public page: number;\r\n    public per_page: number;\r\n    public sort: string;\r\n    public query: string;\r\n    public filters: { key: string, value: string }[];\r\n    public _with: { key: string, value: string }[];\r\n\r\n    public value: any;\r\n\r\n    constructor(\r\n        public modelsService: ModelsService,\r\n        public toastService: ToastService\r\n    ) {\r\n        this.page = 1;\r\n        this.per_page = 100;\r\n        this.firstTime = true;\r\n    }\r\n\r\n    public ngOnInit() {\r\n        if (!this.placeholder) {\r\n            this.placeholder = '';\r\n        }\r\n    }\r\n\r\n    writeValue(value: any) {\r\n        // const div = this.textarea.nativeElement;\r\n        // this.renderer.setProperty(div, 'textContent', value);\r\n        this.value = value;\r\n    }\r\n\r\n    registerOnChange(fn: any) {\r\n        this.onChange = fn;\r\n    }\r\n\r\n    registerOnTouched(fn: any) {\r\n        this.onTouched = fn;\r\n    }\r\n\r\n    setDisabledState(isDisabled: boolean) {\r\n        this.disabled = isDisabled;\r\n    }\r\n\r\n    public change($event) {\r\n        this.onChange(this.value);\r\n        this.onTouched(this.value);\r\n    }\r\n\r\n    public loadLazy(event?) {\r\n        this.filters = [];\r\n        if (event && event.sortField) {\r\n            if (event.sortOrder === -1) {\r\n                this.sort = '-' + event.sortField;\r\n            } else {\r\n                this.sort = event.sortField;\r\n            }\r\n        } else {\r\n            this.sort = '-id';\r\n        }\r\n\r\n        if (this.addFilters) {\r\n            this.addFilters.forEach(element => {\r\n                this.filters.push({ key: 'filter{' + element.key + '}', value: element.value })\r\n            });\r\n        }\r\n\r\n        if (event.query) {\r\n            this.filters.push({ key: 'filter{name.icontains}', value: event.query })\r\n        } else {\r\n            this.query = undefined;\r\n        }\r\n\r\n        if (event && event.rows) {\r\n            this.per_page = event.rows;\r\n        }\r\n\r\n\r\n        if (!this.firstTime) {\r\n            this.getModels();\r\n        }\r\n        this.firstTime = false;\r\n    }\r\n\r\n    getModels() {\r\n        this.modelsService.get(this.page, this.per_page, this.sort, this.query, this.filters, this._with).subscribe(\r\n            response => {\r\n                this.models = response.groups;\r\n                this.totalRecords = response.meta.total_results;\r\n                // if (this.model) {\r\n                //     if (this.model.id) {\r\n                //         this.model.id = undefined;\r\n                //         this.value = this.models[0];\r\n                //         this.filters = [];\r\n                //     }\r\n                // }\r\n            },\r\n            error => {\r\n                let messageError = [];\r\n                if (!Array.isArray(error.error)) {\r\n                    messageError.push(error.error);\r\n                } else {\r\n                    messageError = error.error;\r\n                }\r\n                Object.entries(messageError).forEach(\r\n                    ([key, value]) => this.toastService.growl('error', key + ': ' + value)\r\n                );\r\n            }\r\n        );\r\n    }\r\n\r\n    public isValid() {\r\n        let stringClass = 'form-control form-control-lg form-control-solid';\r\n        if (this.touched) {\r\n            if (this.valid) {\r\n                stringClass += ' is-valid';\r\n            } else {\r\n                stringClass += ' is-invalid';\r\n            }\r\n        }\r\n        return stringClass;\r\n    }\r\n}\r\n","<div>\r\n    <p-autoComplete [inputStyleClass]=\"isValid()\" [suggestions]=\"models\" (completeMethod)=\"loadLazy($event)\" (change)=\"change($event)\" (paste)=\"change($event)\" (onSelect)=\"change($event)\" [forceSelection]=\"true\" delay=\"0\" [(ngModel)]=\"value\" field=\"name\" placeholder=\"{{placeholder}}\" [disabled]=\"disabled\" [required]=\"required\">\r\n    </p-autoComplete>\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { UserModel } from '../../_models/user.model';\r\nimport { environment } from '../../../../../environments/environment';\r\nimport { AuthModel } from '../../_models/auth.model';\r\n\r\nconst API_AUTH_URL = `${environment.apiUrl}`;\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AuthHTTPService {\r\n  constructor(private http: HttpClient) { }\r\n\r\n  // public methods\r\n  login(username: string, password: string): Observable<any> {\r\n    return this.http.post<AuthModel>(`${API_AUTH_URL}auth/token`,   { username, password });\r\n  }\r\n\r\n  // CREATE =>  POST: add a new user to the server\r\n  createUser(user: UserModel): Observable<UserModel> {\r\n    return this.http.post<UserModel>(API_AUTH_URL, user);\r\n  }\r\n\r\n  // Your server should check username => If username exists send link to the user and return true | If username doesn't exist return false\r\n  forgotPassword(username: string): Observable<boolean> {\r\n    return this.http.post<boolean>(`${API_AUTH_URL}auth/forgot-password`, {\r\n      username,\r\n    });\r\n  }\r\n\r\n  getUserByToken(): Observable<UserModel> {\r\n    return this.http.get<UserModel>(`${API_AUTH_URL}auth/user`);\r\n  }\r\n}\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { AbstractControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Observable, of, Subscription } from 'rxjs';\r\nimport { catchError, switchMap, tap } from 'rxjs/operators';\r\nimport { ToastService } from 'src/app/modules/toast/_services/toast.service';\r\nimport { AuthService } from 'src/app/modules/auth';\r\nimport { PermissionModel as Model } from '../../_models/permission.model';\r\nimport { PermissionService as ModelsService } from '../../_services/permission.service';\r\n\r\n@Component({\r\n  selector: 'app-permission-edit',\r\n  templateUrl: './permission-edit.component.html',\r\n  styleUrls: ['./permission-edit.component.scss']\r\n})\r\nexport class PermissionEditComponent implements OnInit, OnDestroy {\r\n  public id: number;\r\n  public model: Model;\r\n  public previous: Model;\r\n  public formGroup: FormGroup;\r\n  public requesting: boolean = false;\r\n\r\n  public tabs = {\r\n    BASIC_TAB: 0,\r\n  };\r\n\r\n  public name: AbstractControl;\r\n  public codename: AbstractControl;\r\n  public content_type: AbstractControl;\r\n\r\n  public activeTabId: number;\r\n  private subscriptions: Subscription[] = [];\r\n\r\n  public saveAndExit;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private modelsService: ModelsService,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private toastService: ToastService\r\n  ) {\r\n    this.activeTabId = this.tabs.BASIC_TAB; // 0 => Basic info | 1 => Profile\r\n    this.saveAndExit = false;\r\n    this.requesting = false;\r\n\r\n    this.formGroup = this.fb.group({\r\n      name: ['', Validators.compose([Validators.required, Validators.minLength(3)\r\n      ])],\r\n      codename: ['', Validators.compose([Validators.minLength(3)])],\r\n      content_type: ['', Validators.compose([Validators.required])],\r\n    });\r\n    this.name = this.formGroup.controls['name'];\r\n    this.codename = this.formGroup.controls['codename'];\r\n    this.content_type = this.formGroup.controls['content_type'];\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.id = undefined;\r\n    this.model = undefined;\r\n    this.previous = undefined;\r\n    this.get();\r\n  }\r\n\r\n  get() {\r\n    this.requesting = true;\r\n    const sb = this.route.paramMap.pipe(\r\n      switchMap(params => {\r\n        // get id from URL\r\n        this.id = Number(params.get('id'));\r\n        if (this.id || this.id > 0) {\r\n          return this.modelsService.getById(this.id);\r\n        }\r\n        return of({ 'permission': new Model() });\r\n      }),\r\n      catchError((error) => {\r\n        this.requesting = false;\r\n        let messageError = [];\r\n        if (!Array.isArray(error.error)) {\r\n          messageError.push(error.error);\r\n        } else {\r\n          messageError = error.error;\r\n        }\r\n        Object.entries(messageError).forEach(\r\n          ([key, value]) => this.toastService.growl('error', key + ': ' + value)\r\n        );\r\n        return of({ 'permission': new Model() });\r\n      }),\r\n    ).subscribe((response: any) => {\r\n      this.requesting = false;\r\n      if (response) {\r\n        this.model = response.permission;\r\n        if (response.content_types) {\r\n          this.model.content_type = response.content_types[0];\r\n        }\r\n        this.previous = Object.assign({}, this.model);\r\n        this.loadForm();\r\n      }\r\n    });\r\n    this.subscriptions.push(sb);\r\n  }\r\n\r\n  loadForm() {\r\n    if (this.model.id) {\r\n      this.name.setValue(this.model.name);\r\n      this.codename.setValue(this.model.codename);\r\n      if (this.model.content_type) {\r\n        this.content_type.setValue(this.model.content_type);\r\n      }\r\n    }\r\n    this.formGroup.markAllAsTouched();\r\n  }\r\n\r\n  reset() {\r\n    if (this.previous) {\r\n      this.model = Object.assign({}, this.previous);\r\n      this.loadForm();\r\n    }\r\n  }\r\n\r\n  save(saveAndExit) {\r\n    this.saveAndExit = saveAndExit;\r\n    this.formGroup.markAllAsTouched();\r\n    if (this.formGroup.valid) {\r\n      const formValues = this.formGroup.value;\r\n      this.model = Object.assign(this.model, formValues);\r\n      if (this.id) {\r\n        this.edit();\r\n      } else {\r\n        this.create();\r\n      }\r\n    }\r\n  }\r\n\r\n  edit() {\r\n    this.requesting = true;\r\n    let model = this.model;\r\n    model.content_type = this.model.content_type.id;\r\n\r\n    const sbUpdate = this.modelsService.patch(this.id, model).pipe(\r\n      tap(() => {\r\n        this.toastService.growl('success', 'success');\r\n        if (this.saveAndExit) {\r\n          this.router.navigate(['/permissions']);\r\n        }\r\n      }),\r\n      catchError((error) => {\r\n        this.requesting = false;\r\n        let messageError = [];\r\n        if (!Array.isArray(error.error)) {\r\n          messageError.push(error.error);\r\n        } else {\r\n          messageError = error.error;\r\n        }\r\n        Object.entries(messageError).forEach(\r\n          ([key, value]) => this.toastService.growl('error', key + ': ' + value)\r\n        );\r\n        return of(this.model);\r\n      })\r\n    ).subscribe(response => {\r\n      this.requesting = false;\r\n      this.model = response.content_type\r\n      this.model = response.permission\r\n    });\r\n    this.subscriptions.push(sbUpdate);\r\n  }\r\n\r\n  create() {\r\n    this.requesting = true;\r\n\r\n    let model = this.model;\r\n    model.content_type = this.model.content_type.id;\r\n\r\n    const sbCreate = this.modelsService.post(model).pipe(\r\n      tap(() => {\r\n        this.toastService.growl('success', 'success');\r\n        if (this.saveAndExit) {\r\n          this.router.navigate(['/permissions']);\r\n        } else {\r\n          this.formGroup.reset()\r\n        }\r\n      }),\r\n      catchError((error) => {\r\n        this.requesting = false;\r\n        let messageError = [];\r\n        if (!Array.isArray(error.error)) {\r\n          messageError.push(error.error);\r\n        } else {\r\n          messageError = error.error;\r\n        }\r\n        Object.entries(messageError).forEach(\r\n          ([key, value]) => this.toastService.growl('error', key + ': ' + value)\r\n        );\r\n        return of(this.model);\r\n      })\r\n    ).subscribe(response => {\r\n      this.requesting = false;\r\n      this.model = response.permission as Model\r\n    });\r\n    this.subscriptions.push(sbCreate);\r\n  }\r\n\r\n  changeTab(tabId: number) {\r\n    this.activeTabId = tabId;\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscriptions.forEach(sb => sb.unsubscribe());\r\n  }\r\n\r\n  // helpers for View\r\n  isControlValid(controlName: string): boolean {\r\n    const control = this.formGroup.controls[controlName];\r\n    return control.valid && (control.dirty || control.touched);\r\n  }\r\n\r\n  isControlInvalid(controlName: string): boolean {\r\n    const control = this.formGroup.controls[controlName];\r\n    return control.invalid && (control.dirty || control.touched);\r\n  }\r\n\r\n  controlHasError(validation: string, controlName: string) {\r\n    const control = this.formGroup.controls[controlName];\r\n    return control.hasError(validation) && (control.dirty || control.touched);\r\n  }\r\n\r\n  isControlTouched(controlName: string): boolean {\r\n    const control = this.formGroup.controls[controlName];\r\n    return control.dirty || control.touched;\r\n  }\r\n}\r\n","<div class=\"card card-custom gutter-b\">\r\n  <ng-container *ngIf=\"requesting\">\r\n    <div class=\"progress progress-modal\">\r\n      <div class=\"progress-bar progress-bar-striped progress-bar-animated bg-primary\" role=\"progressbar\"\r\n        style=\"width: 100%\" aria-valuenow=\"100\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\r\n    </div>\r\n  </ng-container>\r\n\r\n  <div class=\"card-header\">\r\n    <div class=\"card-title\">\r\n      <h3 class=\"card-label\">\r\n        <ng-container *ngIf=\"model\">\r\n          {{ (id ? 'COMMON.EDIT' : 'COMMON.NEW') | translate }}\r\n          <span *ngIf=\"model && model.id\">{{ 'PERMISSION.PERMISSION' | translate }} : {{ model.id }}</span>\r\n        </ng-container>\r\n      </h3>\r\n    </div>\r\n    <div class=\"card-toolbar\">\r\n      <a type=\"button\" class=\"btn btn-light\" routerLink=\"/permissions\">\r\n        <i class=\"fa fa-arrow-left\"></i>{{ 'COMMON.BACK' | translate }}\r\n      </a>\r\n      <button class=\"btn btn-secondary ml-2\" (click)=\"reset()\">\r\n        <i class=\"fa fa-redo\"></i>{{ 'COMMON.RESET' | translate }}\r\n      </button>\r\n    </div>\r\n  </div>\r\n  <div class=\"card-body\">\r\n    <ul class=\"nav nav-tabs nav-tabs-line\" role=\"tablist\">\r\n      <li class=\"nav-item cursor-pointer\" (click)=\"changeTab(tabs.BASIC_TAB)\">\r\n        <a class=\"nav-link\" data-toggle=\"tab\" role=\"tab\" [attr.aria-selected]=\"activeTabId === tabs.BASIC_TAB\"\r\n          [class.active]=\"activeTabId === tabs.BASIC_TAB\">\r\n          {{ 'COMMON.BASIC_INFO' | translate }}\r\n        </a>\r\n      </li>\r\n      <!-- <li *ngIf=\"model && model.id\" class=\"nav-item cursor-pointer\" (click)=\"changeTab(tabs.PROFILE)\">\r\n        <a class=\"nav-link\" data-toggle=\"tab\" role=\"button\" [attr.aria-selected]=\"activeTabId === tabs.PROFILE\"\r\n          [class.active]=\"activeTabId === tabs.PROFILE\">Profile</a>\r\n      </li> -->\r\n    </ul>\r\n\r\n    <ng-container *ngIf=\"activeTabId === tabs.BASIC_TAB\">\r\n      <div class=\"mt-5\" *ngIf=\"model\">\r\n        <form action=\"#\" class=\"form form-label-right\" [formGroup]=\"formGroup\">\r\n          <div class=\"form-group row\">\r\n            <div class=\"col-lg-6\">\r\n              <label>{{ 'COMMON.ENTER' | translate }} {{ 'PERMISSION.NAME' | translate }}</label>\r\n              <input type=\"text\" class=\"form-control form-control-lg form-control-solid\" autocomplete=\"off\"\r\n                name=\"name\" [class.is-invalid]=\"isControlInvalid('name')\"\r\n                [class.is-valid]=\"isControlValid('name')\" formControlName=\"name\" />\r\n              <div class=\"feedback\" *ngIf=\"!isControlTouched('name')\">{{ 'COMMON.PLEASE_ENTER' | translate }} <b>{{ 'PERMISSION.NAME' | translate }}</b></div>\r\n              <div class=\"valid-feedback\" *ngIf=\"isControlValid('name')\">{{ 'PERMISSION.NAME' | translate }}  {{ 'COMMON.WAS_ENTERED_CORRECT' | translate }}</div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"controlHasError('required', 'name')\">{{ 'PERMISSION.NAME' | translate }}  {{ 'COMMON.IS_REQUIRED' | translate }}</div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"controlHasError('minlength', 'name')\">{{ 'PERMISSION.NAME' | translate }} {{ 'COMMON.SHOULD_HAVE_LEAST' | translate }} 3</div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"controlHasError('maxLength', 'name')\">{{ 'PERMISSION.NAME' | translate }} {{ 'COMMON.SHOULD_HAVE_MAXIMUM' | translate }} 100</div>\r\n            </div>\r\n            <div class=\"col-lg-6\">\r\n              <label>{{ 'COMMON.ENTER' | translate }} {{ 'PERMISSION.CONTENT_TYPE' | translate }}</label>\r\n              <app-content-type-select\r\n              name=\"content_type\" [valid]=\"isControlValid('content_type')\" [touched]=\"isControlTouched('content_type')\" [class.is-invalid]=\"isControlInvalid('content_type')\"\r\n              [class.is-valid]=\"isControlValid('content_type')\" formControlName=\"content_type\" id=\"content_type\" [model]=\"model.content_type\"></app-content-type-select>\r\n              <div class=\"feedback\" *ngIf=\"!isControlTouched('content_type')\">{{ 'COMMON.PLEASE_ENTER' | translate }} <b>{{ 'PERMISSION.CONTENT_TYPE' | translate }}</b></div>\r\n              <div class=\"valid-feedback\" *ngIf=\"isControlValid('content_type')\">{{ 'PERMISSION.CONTENT_TYPE' | translate }}  {{ 'COMMON.WAS_ENTERED_CORRECT' | translate }}</div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"controlHasError('required', 'content_type')\">{{ 'PERMISSION.CONTENT_TYPE' | translate }}  {{ 'COMMON.IS_REQUIRED' | translate }}</div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"controlHasError('minlength', 'content_type')\">{{ 'PERMISSION.CONTENT_TYPE' | translate }} {{ 'COMMON.SHOULD_HAVE_LEAST' | translate }} 3</div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"controlHasError('maxLength', 'content_type')\">{{ 'PERMISSION.CONTENT_TYPE' | translate }} {{ 'COMMON.SHOULD_HAVE_MAXIMUM' | translate }} 30</div>\r\n            </div>\r\n            <div class=\"col-lg-6\">\r\n              <label>{{ 'COMMON.ENTER' | translate }} {{ 'PERMISSION.CODENAME' | translate }}</label>\r\n              <input type=\"text\" class=\"form-control form-control-lg form-control-solid\" autocomplete=\"off\"\r\n                name=\"codename\" [class.is-invalid]=\"isControlInvalid('codename')\"\r\n                [class.is-valid]=\"isControlValid('codename')\" formControlName=\"codename\" />\r\n              <div class=\"feedback\" *ngIf=\"!isControlTouched('codename')\">{{ 'COMMON.PLEASE_ENTER' | translate }} <b>{{ 'PERMISSION.CODENAME' | translate }}</b></div>\r\n              <div class=\"valid-feedback\" *ngIf=\"isControlValid('codename')\">{{ 'PERMISSION.CODENAME' | translate }}  {{ 'COMMON.WAS_ENTERED_CORRECT' | translate }}</div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"controlHasError('required', 'codename')\">{{ 'PERMISSION.CODENAME' | translate }}  {{ 'COMMON.IS_REQUIRED' | translate }}</div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"controlHasError('minlength', 'codename')\">{{ 'PERMISSION.CODENAME' | translate }} {{ 'COMMON.SHOULD_HAVE_LEAST' | translate }} 3</div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"controlHasError('maxLength', 'codename')\">{{ 'PERMISSION.CODENAME' | translate }} {{ 'COMMON.SHOULD_HAVE_MAXIMUM' | translate }} 100</div>\r\n            </div>\r\n            <!-- <div class=\"col-lg-6\">\r\n              <label>{{ 'COMMON.ENTER' | translate }} {{ 'PERMISSION.POSITION' | translate }}</label>\r\n              <app-position-autocomplete\r\n              name=\"position\" [valid]=\"isControlValid('position')\" [touched]=\"isControlTouched('position')\" [class.is-invalid]=\"isControlInvalid('position')\"\r\n              [class.is-valid]=\"isControlValid('position')\" formControlName=\"position\" id=\"position\" [model]=\"model.position\"></app-position-autocomplete>\r\n              <div class=\"feedback\" *ngIf=\"!isControlTouched('position')\">{{ 'COMMON.PLEASE_ENTER' | translate }} <b>{{ 'PERMISSION.POSITION' | translate }}</b></div>\r\n              <div class=\"valid-feedback\" *ngIf=\"isControlValid('position')\">{{ 'PERMISSION.POSITION' | translate }}  {{ 'COMMON.WAS_ENTERED_CORRECT' | translate }}</div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"controlHasError('required', 'position')\">{{ 'PERMISSION.POSITION' | translate }}  {{ 'COMMON.IS_REQUIRED' | translate }}</div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"controlHasError('minlength', 'position')\">{{ 'PERMISSION.POSITION' | translate }} {{ 'COMMON.SHOULD_HAVE_LEAST' | translate }} 3</div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"controlHasError('maxLength', 'position')\">{{ 'PERMISSION.POSITION' | translate }} {{ 'COMMON.SHOULD_HAVE_MAXIMUM' | translate }} 30</div>\r\n            </div> -->\r\n          </div>\r\n          <div class=\"float-right\">\r\n            <a class=\"btn btn-default font-weight-bold mr-2\" routerLink=\"/permissions\">{{ 'COMMON.CANCEL' | translate }}</a>\r\n            <button type=\"submit\" class=\"btn btn-primary font-weight-bold mr-2\"\r\n              [disabled]=\"formGroup.invalid\" (click)=\"save(false)\">{{ 'COMMON.SAVE' | translate }}</button>\r\n            <button type=\"submit\" class=\"btn btn-primary font-weight-bold mr-2\"\r\n              [disabled]=\"formGroup.invalid\" (click)=\"save(true)\">{{ 'COMMON.SAVE_AND_EXIT' | translate }}</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </ng-container>\r\n  </div>\r\n</div>","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { AbstractControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Observable, of, Subscription } from 'rxjs';\r\nimport { catchError, switchMap, tap } from 'rxjs/operators';\r\nimport { ToastService } from 'src/app/modules/toast/_services/toast.service';\r\nimport { AuthService } from 'src/app/modules/auth';\r\nimport { RoomModel as Model } from '../../_models/room.model';\r\nimport { RoomService as ModelsService } from '../../_services/room.service';\r\nimport { SpaceService } from 'src/app/pages/space/_services';\r\n\r\n@Component({\r\n  selector: 'app-room-edit',\r\n  templateUrl: './room-edit.component.html',\r\n  styleUrls: ['./room-edit.component.scss']\r\n})\r\nexport class RoomEditComponent implements OnInit, OnDestroy {\r\n  public id: number;\r\n  public model: Model;\r\n  public previous: Model;\r\n  public formGroup: FormGroup;\r\n  public requesting: boolean;\r\n\r\n  public tabs = {\r\n    BASIC_TAB: 0,\r\n    FOLDER_TAB: 1,\r\n  };\r\n\r\n  public name: AbstractControl;\r\n  public number_room: AbstractControl;\r\n  public description: AbstractControl;\r\n  public active: AbstractControl;\r\n  public functionary: AbstractControl;\r\n  public space: AbstractControl;\r\n   \r\n  public activeTabId: number;\r\n  private subscriptions: Subscription[] = [];\r\n\r\n  public saveAndExit;\r\n\r\n  public spaceId: number;\r\n  public parent: string;\r\n  public showFolderTab: boolean;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private modelsService: ModelsService,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    public authService: AuthService,\r\n    private toastService: ToastService,\r\n    private spaceService: SpaceService,\r\n  ) {\r\n    this.activeTabId = this.tabs.BASIC_TAB; // 0 => Basic info | 1 => Profile\r\n    this.saveAndExit = false;\r\n    this.requesting = false;\r\n    this.showFolderTab = true;\r\n\r\n    this.formGroup = this.fb.group({\r\n      name: ['', Validators.compose([Validators.required, Validators.minLength(3), Validators.maxLength(30)])],\r\n      number_room: ['', Validators.compose([Validators.required, Validators.minLength(3), Validators.maxLength(30)])],\r\n      description: ['', Validators.compose([Validators.required, Validators.minLength(3), Validators.maxLength(30)])],\r\n      active: ['', Validators.compose([Validators.required, Validators.minLength(3), Validators.maxLength(30)])],\r\n      functionary: ['', Validators.compose([Validators.required, Validators.minLength(1), Validators.maxLength(30)])],\r\n      space: ['', Validators.compose([Validators.required, Validators.minLength(1), Validators.maxLength(30)])],\r\n    });\r\n    this.name = this.formGroup.controls['name'];\r\n    this.number_room = this.formGroup.controls['number_room'];\r\n    this.description = this.formGroup.controls['description'];\r\n    this.active = this.formGroup.controls['active'];\r\n    this.functionary = this.formGroup.controls['functionary'];\r\n    this.space = this.formGroup.controls['space'];\r\n\r\n    this.parent = '/rooms';\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.id = undefined;\r\n    this.model = undefined;\r\n    this.previous = undefined;\r\n\r\n    this.route.parent.parent.parent.params.subscribe((params) => {\r\n      if (this.route.parent.parent.parent.parent.parent.snapshot.url.length > 0) {\r\n        this.showFolderTab = false\r\n        this.spaceId = params.id;\r\n        this.parent = '/' + this.route.parent.parent.parent.parent.parent.snapshot.url[0].path + '/edit/' + this.spaceId;\r\n      }\r\n      this.get();\r\n    });\r\n\r\n  }\r\n\r\n  get() {\r\n    this.requesting = true;\r\n    const sb = this.route.paramMap.pipe(\r\n      switchMap(params => {\r\n        // get id from URL\r\n        this.id = Number(params.get('id'));\r\n        if (this.id || this.id > 0) {\r\n          return this.modelsService.getById(this.id);\r\n        }\r\n        return of({ 'room': new Model() });\r\n      }),\r\n      catchError((error) => {\r\n        this.requesting = false;\r\n        let messageError = [];\r\n        if (!Array.isArray(error.error)) {\r\n          messageError.push(error.error);\r\n        } else {\r\n          messageError = error.error;\r\n        }\r\n        Object.entries(messageError).forEach(\r\n          ([key, value]) => this.toastService.growl('error', key + ': ' + value)\r\n        );\r\n        return of({ 'room': new Model() });\r\n      }),\r\n    ).subscribe((response: any) => {\r\n      this.requesting = false;\r\n      if (response) {\r\n        this.model = response.room;\r\n        if (response.functionaries) {\r\n          this.model.functionary = response.functionaries[0];\r\n        }\r\n        // let rooms = response['+rooms'];\r\n        if (response.spaces) {\r\n          this.model.space = response.spaces[0];\r\n        }\r\n        this.previous = Object.assign({}, this.model);\r\n        this.loadForm();\r\n      }\r\n    });\r\n    this.subscriptions.push(sb);\r\n  }\r\n\r\n  loadForm() {\r\n    this.active.setValue(true);\r\n    \r\n    if (this.model.id) {\r\n      this.name.setValue(this.model.name);\r\n      this.number_room.setValue(this.model.number_room);\r\n      this.description.setValue(this.model.description);\r\n      this.active.setValue(this.model.active);\r\n      if (this.model.functionary) {\r\n        this.functionary.setValue(this.model.functionary);\r\n      }\r\n      if (this.model.space) {\r\n        this.space.setValue(this.model.space);\r\n      }\r\n    } else {\r\n      if (this.spaceId) {\r\n        this.GetSpaceById(this.spaceId);\r\n      }\r\n      this.functionary.setValue(this.authService.currentUserValue.functionary);\r\n    }\r\n    this.formGroup.markAllAsTouched();\r\n  }\r\n\r\n  reset() {\r\n    if (this.previous) {\r\n      this.model = Object.assign({}, this.previous);\r\n      this.loadForm();\r\n    }\r\n  }\r\n\r\n  save(saveAndExit) {\r\n    this.saveAndExit = saveAndExit;\r\n    this.formGroup.markAllAsTouched();\r\n    if (this.formGroup.valid) {\r\n      const formValues = this.formGroup.value;\r\n      this.model = Object.assign(this.model, formValues);\r\n      if (this.id) {\r\n        this.edit();\r\n      } else {\r\n        this.create();\r\n      }\r\n    }\r\n  }\r\n\r\n  edit() {\r\n    this.requesting = true;\r\n    let model = this.model;\r\n    model.active = this.model.active;\r\n    if (this.model.functionary) {\r\n      model.functionary = this.model.functionary.id;\r\n    }\r\n    if (this.model.space) {\r\n      model.space = this.model.space.id;\r\n    }\r\n\r\n    const sbUpdate = this.modelsService.patch(this.id, model).pipe(\r\n      tap(() => {\r\n        this.toastService.growl('success', 'success');\r\n        if (this.saveAndExit) {\r\n          if(this.parent){\r\n            this.router.navigate([this.parent + '/rooms']);\r\n          } else {\r\n            this.router.navigate(['/rooms']);\r\n          }\r\n        }\r\n      }),\r\n      catchError((error) => {\r\n        this.requesting = false;\r\n        let messageError = [];\r\n        if (!Array.isArray(error.error)) {\r\n          messageError.push(error.error);\r\n        } else {\r\n          messageError = error.error;\r\n        }\r\n        Object.entries(messageError).forEach(\r\n          ([key, value]) => this.toastService.growl('error', key + ': ' + value)\r\n        );\r\n        return of(this.model);\r\n      })\r\n    ).subscribe(response => {\r\n      this.requesting = false;\r\n      this.model = response.room\r\n    });\r\n    this.subscriptions.push(sbUpdate);\r\n  }\r\n\r\n  create() {\r\n    this.requesting = true;\r\n\r\n    let model = this.model;\r\n    model.active = this.active.value;\r\n\r\n    if (this.model.functionary) {\r\n      model.functionary = this.model.functionary.id;\r\n    }\r\n\r\n    model.space = this.model.space.id;\r\n    \r\n    const sbCreate = this.modelsService.post(model).pipe(\r\n      tap(() => {\r\n        this.toastService.growl('success', 'success');\r\n        if (this.saveAndExit) {\r\n          if(this.parent){\r\n            this.router.navigate([this.parent + '/rooms']);\r\n          } else {\r\n            this.router.navigate(['/rooms']);\r\n          }\r\n        } else {\r\n          this.formGroup.reset()\r\n        }\r\n      }),\r\n      catchError((error) => {\r\n        this.requesting = false;\r\n        let messageError = [];\r\n        if (!Array.isArray(error.error)) {\r\n          messageError.push(error.error);\r\n        } else {\r\n          messageError = error.error;\r\n        }\r\n        Object.entries(messageError).forEach(\r\n          ([key, value]) => this.toastService.growl('error', key + ': ' + value)\r\n        );\r\n        return of(this.model);\r\n      })\r\n    ).subscribe(response => {\r\n      this.requesting = false;\r\n      this.model = response.room as Model\r\n    });\r\n    this.subscriptions.push(sbCreate);\r\n  }\r\n\r\n  changeTab(tabId: number) {\r\n    this.activeTabId = tabId;\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscriptions.forEach(sb => sb.unsubscribe());\r\n  }\r\n\r\n  // helpers for View\r\n  isControlValid(controlName: string): boolean {\r\n    const control = this.formGroup.controls[controlName];\r\n    return control.valid && (control.dirty || control.touched);\r\n  }\r\n\r\n  isControlInvalid(controlName: string): boolean {\r\n    const control = this.formGroup.controls[controlName];\r\n    return control.invalid && (control.dirty || control.touched);\r\n  }\r\n\r\n  controlHasError(validation: string, controlName: string) {\r\n    const control = this.formGroup.controls[controlName];\r\n    return control.hasError(validation) && (control.dirty || control.touched);\r\n  }\r\n\r\n  isControlTouched(controlName: string): boolean {\r\n    const control = this.formGroup.controls[controlName];\r\n    return control.dirty || control.touched;\r\n  }\r\n\r\n  public getValidClass(valid) {\r\n    let stringClass = 'form-control form-control-lg form-control-solid';\r\n    if (valid) {\r\n      stringClass += ' is-valid';\r\n    } else {\r\n      stringClass += ' is-invalid';\r\n    }\r\n    return stringClass;\r\n  }\r\n\r\n  public formatDate(date) {\r\n    const d = new Date(date);\r\n    let month = '' + (d.getMonth() + 1);\r\n    let day = '' + d.getDate();\r\n    const year = d.getFullYear();\r\n    let hours = '' + d.getHours();\r\n    let minutes = '' + d.getMinutes();\r\n    let seconds = '' + d.getSeconds();\r\n\r\n    if (month.length < 2) {\r\n      month = '0' + month;\r\n    }\r\n    if (day.length < 2) {\r\n      day = '0' + day;\r\n    }\r\n\r\n    if (hours.length < 2) {\r\n      hours = '0' + hours;\r\n    }\r\n\r\n    if (minutes.length < 2) {\r\n      minutes = '0' + minutes;\r\n    }\r\n\r\n    if (seconds.length < 2) {\r\n      seconds = '0' + seconds;\r\n    }\r\n\r\n    return [year, month, day].join('-');\r\n  }\r\n\r\n  GetSpaceById(id) {\r\n    this.spaceService.getById(id).toPromise().then(\r\n      response => {\r\n        this.space.setValue(response.space)\r\n      },\r\n      error => {\r\n        console.log('error getting space');\r\n      }\r\n    );\r\n  }\r\n}\r\n","<div class=\"card card-custom gutter-b\">\r\n  <ng-container *ngIf=\"requesting\">\r\n    <div class=\"progress progress-modal\">\r\n      <div class=\"progress-bar progress-bar-striped progress-bar-animated bg-primary\" role=\"progressbar\"\r\n        style=\"width: 100%\" aria-valuenow=\"100\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\r\n    </div>\r\n  </ng-container>\r\n\r\n  <div class=\"card-header\">\r\n    <div class=\"card-title\">\r\n      <h3 class=\"card-label\">\r\n        <ng-container *ngIf=\"model\">\r\n          {{ (id ? 'COMMON.EDIT' : 'COMMON.NEW') | translate }}\r\n          <span *ngIf=\"model && model.id\">{{ model.id }} - {{ model.number_room }} </span>\r\n        </ng-container>\r\n      </h3>\r\n    </div>\r\n    <div class=\"card-toolbar\">\r\n      <a type=\"button\" class=\"btn btn-light\" routerLink=\"/rooms\">\r\n        <i class=\"fa fa-arrow-left\"></i>{{ 'COMMON.BACK' | translate }}\r\n      </a>\r\n      <button class=\"btn btn-secondary ml-2\" (click)=\"reset()\">\r\n        <i class=\"fa fa-redo\"></i>{{ 'COMMON.RESET' | translate }}\r\n      </button>\r\n    </div>\r\n  </div>\r\n  <div class=\"card-body\">\r\n    <ul class=\"nav nav-tabs nav-tabs-line\" role=\"tablist\">\r\n      <li class=\"nav-item cursor-pointer\" (click)=\"changeTab(tabs.BASIC_TAB)\">\r\n        <a class=\"nav-link\" data-toggle=\"tab\" role=\"tab\" [attr.aria-selected]=\"activeTabId === tabs.BASIC_TAB\"\r\n          [class.active]=\"activeTabId === tabs.BASIC_TAB\">\r\n          {{ 'COMMON.BASIC_INFO' | translate }}\r\n        </a>\r\n      </li>\r\n      <li *ngIf=\"model && model.id && authService.hasPermission('view_folder') && showFolderTab\" class=\"nav-item cursor-pointer\" (click)=\"changeTab(tabs.FOLDER_TAB)\">\r\n        <a class=\"nav-link\" data-toggle=\"tab\" role=\"button\" [attr.aria-selected]=\"activeTabId === tabs.FOLDER_TAB\"\r\n          [class.active]=\"activeTabId === tabs.FOLDER_TAB\" routerLink=\"{{parent}}/edit/{{model.id}}/folders\">{{ 'ROOM.FOLDERS' | translate }}</a>\r\n      </li>\r\n    </ul>\r\n\r\n    <ng-container *ngIf=\"activeTabId === tabs.BASIC_TAB\">\r\n      <div class=\"mt-5\" *ngIf=\"model\">\r\n        <form action=\"#\" class=\"form form-label-right\" [formGroup]=\"formGroup\">\r\n          <div class=\"form-group row\">\r\n            <div class=\"col-lg-4\">\r\n              <label>{{ 'COMMON.ENTER' | translate }} {{ 'ROOM.FUNCTIONARY' | translate}}</label>\r\n              <app-functionary-autocomplete\r\n              name=\"functionary\" [valid]=\"isControlValid('functionary')\" [touched]=\"isControlTouched('functionary')\" [class.is-invalid]=\"isControlInvalid('functionary')\"\r\n              [class.is-valid]=\"isControlValid('functionary')\" formControlName=\"functionary\" id=\"functionary\" [model]=\"model.functionary\" [addFilters]=\"[{key: 'user.groups', value: 3}]\"></app-functionary-autocomplete>\r\n              <div class=\"feedback\" *ngIf=\"!isControlTouched('functionary')\">{{ 'COMMON.PLEASE_ENTER' | translate }} <b>{{ 'ROOM.FUNCTIONARY' | translate}}</b></div>\r\n              <div class=\"valid-feedback\" *ngIf=\"isControlValid('functionary')\">{{ 'ROOM.FUNCTIONARY' | translate}}  {{ 'COMMON.WAS_ENTERED_CORRECT' | translate }}</div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"controlHasError('required', 'functionary')\">{{ 'ROOM.FUNCTIONARY' | translate}}  {{ 'COMMON.IS_REQUIRED' | translate }}</div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"controlHasError('minlength', 'functionary')\">{{ 'ROOM.FUNCTIONARY' | translate}} {{ 'COMMON.SHOULD_HAVE_LEAST' | translate }} 3</div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"controlHasError('maxLength', 'functionary')\">{{ 'ROOM.FUNCTIONARY' | translate}} {{ 'COMMON.SHOULD_HAVE_MAXIMUM' | translate }} 30</div>\r\n            </div>  \r\n            <div class=\"col-lg-4 mb-3\">\r\n              <label>{{ 'COMMON.ENTER' | translate }} {{ 'ROOM.NAME' | translate }}</label>\r\n              <input type=\"text\" class=\"form-control form-control-lg form-control-solid\" autocomplete=\"off\"\r\n                name=\"name\" [class.is-invalid]=\"isControlInvalid('name')\"\r\n                [class.is-valid]=\"isControlValid('name')\" formControlName=\"name\" />\r\n              <div class=\"feedback\" *ngIf=\"!isControlTouched('name')\">{{ 'COMMON.PLEASE_ENTER' | translate }} <b>{{ 'ROOM.NAME' | translate }}</b></div>\r\n              <div class=\"valid-feedback\" *ngIf=\"isControlValid('name')\">{{ 'ROOM.NAME' | translate }}  {{ 'COMMON.WAS_ENTERED_CORRECT' | translate }}</div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"controlHasError('required', 'name')\">{{ 'ROOM.NAME' | translate }}  {{ 'COMMON.IS_REQUIRED' | translate }}</div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"controlHasError('minlength', 'name')\">{{ 'ROOM.NAME' | translate }} {{ 'COMMON.SHOULD_HAVE_LEAST' | translate }} 3</div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"controlHasError('maxLength', 'name')\">{{ 'ROOM.NAME' | translate }} {{ 'COMMON.SHOULD_HAVE_MAXIMUM' | translate }} 100</div>\r\n            </div>\r\n            <div class=\"col-lg-4 mb-3\">\r\n              <label>{{ 'COMMON.ENTER' | translate }} {{ 'ROOM.NUMBER_ROOM' | translate }}</label>\r\n              <input type=\"number\" class=\"form-control form-control-lg form-control-solid\" autocomplete=\"off\"\r\n                name=\"number_room\" [class.is-invalid]=\"isControlInvalid('number_room')\"\r\n                [class.is-valid]=\"isControlValid('number_room')\" formControlName=\"number_room\" />\r\n              <div class=\"feedback\" *ngIf=\"!isControlTouched('number_room')\">{{ 'COMMON.PLEASE_ENTER' | translate }} <b>{{ 'ROOM.NUMBER_ROOM' | translate }}</b></div>\r\n              <div class=\"valid-feedback\" *ngIf=\"isControlValid('number_room')\">{{ 'ROOM.NUMBER_ROOM' | translate }}  {{ 'COMMON.WAS_ENTERED_CORRECT' | translate }}</div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"controlHasError('required', 'number_room')\">{{ 'ROOM.NUMBER_ROOM' | translate }}  {{ 'COMMON.IS_REQUIRED' | translate }}</div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"controlHasError('minlength', 'number_room')\">{{ 'ROOM.NUMBER_ROOM' | translate }} {{ 'COMMON.SHOULD_HAVE_LEAST' | translate }} 3</div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"controlHasError('maxLength', 'number_room')\">{{ 'ROOM.NUMBER_ROOM' | translate }} {{ 'COMMON.SHOULD_HAVE_MAXIMUM' | translate }} 100</div>\r\n            </div>\r\n            <div class=\"col-lg-4 mb-3\">\r\n              <label>{{ 'COMMON.ENTER' | translate }} {{ 'ROOM.DESCRIPTION' | translate }}</label>\r\n              <input type=\"text\" class=\"form-control form-control-lg form-control-solid\" autocomplete=\"off\"\r\n                name=\"description\" [class.is-invalid]=\"isControlInvalid('description')\"\r\n                [class.is-valid]=\"isControlValid('description')\" formControlName=\"description\" />\r\n              <div class=\"feedback\" *ngIf=\"!isControlTouched('description')\">{{ 'COMMON.PLEASE_ENTER' | translate }} <b>{{ 'ROOM.DESCRIPTION' | translate }}</b></div>\r\n              <div class=\"valid-feedback\" *ngIf=\"isControlValid('description')\">{{ 'ROOM.DESCRIPTION' | translate }}  {{ 'COMMON.WAS_ENTERED_CORRECT' | translate }}</div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"controlHasError('required', 'description')\">{{ 'ROOM.DESCRIPTION' | translate }}  {{ 'COMMON.IS_REQUIRED' | translate }}</div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"controlHasError('minlength', 'description')\">{{ 'ROOM.DESCRIPTION' | translate }} {{ 'COMMON.SHOULD_HAVE_LEAST' | translate }} 3</div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"controlHasError('maxLength', 'description')\">{{ 'ROOM.DESCRIPTION' | translate }} {{ 'COMMON.SHOULD_HAVE_MAXIMUM' | translate }} 100</div>\r\n            </div>\r\n            <div class=\"col-lg-4 mb-3\">\r\n              <label>{{ 'COMMON.ENTER' | translate }} {{ 'ROOM.ACTIVE' | translate}}</label>\r\n              <p-toggleButton class=\"form-control form-control-lg form-control-solid\" formControlName=\"active\" onLabel=\"{{ 'COMMON.YES' | translate}}\" offLabel=\"{{ 'COMMON.NO' | translate}}\"></p-toggleButton>\r\n              <div class=\"feedback\" *ngIf=\"!isControlTouched('active')\">{{ 'COMMON.PLEASE_ENTER' | translate }} <b>{{ 'ROOM.ACTIVE' | translate}}</b></div>\r\n              <div class=\"valid-feedback\" *ngIf=\"isControlValid('active')\">{{ 'ROOM.ACTIVE' | translate}}  {{ 'COMMON.WAS_ENTERED_CORRECT' | translate }}</div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"controlHasError('required', 'active')\">{{ 'ROOM.ACTIVE' | translate}}  {{ 'COMMON.IS_REQUIRED' | translate }}</div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"controlHasError('minlength', 'active')\">{{ 'ROOM.ACTIVE' | translate}} {{ 'COMMON.SHOULD_HAVE_LEAST' | translate }} 3</div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"controlHasError('maxLength', 'active')\">{{ 'ROOM.ACTIVE' | translate}} {{ 'COMMON.SHOULD_HAVE_MAXIMUM' | translate }} 100</div>\r\n            </div>\r\n            <div class=\"col-lg-4\">\r\n              <label>{{ 'COMMON.ENTER' | translate }} {{ 'ROOM.SPACE' | translate}}</label>\r\n              <app-space-autocomplete\r\n              name=\"space\" [valid]=\"isControlValid('space')\" [touched]=\"isControlTouched('space')\" [class.is-invalid]=\"isControlInvalid('space')\"\r\n              [class.is-valid]=\"isControlValid('space')\" formControlName=\"space\" id=\"space\" [model]=\"model.space\" [disabled]=\"model && model.id\"></app-space-autocomplete>\r\n              <div class=\"feedback\" *ngIf=\"!isControlTouched('space')\">{{ 'COMMON.PLEASE_ENTER' | translate }} <b>{{ 'ROOM.SPACE' | translate}}</b></div>\r\n              <div class=\"valid-feedback\" *ngIf=\"isControlValid('space')\">{{ 'ROOM.SPACE' | translate}}  {{ 'COMMON.WAS_ENTERED_CORRECT' | translate }}</div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"controlHasError('required', 'space')\">{{ 'ROOM.SPACE' | translate}}  {{ 'COMMON.IS_REQUIRED' | translate }}</div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"controlHasError('minlength', 'space')\">{{ 'ROOM.SPACE' | translate}} {{ 'COMMON.SHOULD_HAVE_LEAST' | translate }} 3</div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"controlHasError('maxLength', 'space')\">{{ 'ROOM.SPACE' | translate}} {{ 'COMMON.SHOULD_HAVE_MAXIMUM' | translate }} 30</div>\r\n            </div>\r\n          </div>\r\n          <div class=\"float-right\">\r\n            <a class=\"btn btn-default font-weight-bold mr-2\" routerLink=\"{{parent}}/rooms\">{{ 'COMMON.CANCEL' | translate }}</a>\r\n            <button type=\"submit\" class=\"btn btn-primary font-weight-bold mr-2\"\r\n              [disabled]=\"formGroup.invalid\" (click)=\"save(false)\">{{ 'COMMON.SAVE' | translate }}</button>\r\n            <button type=\"submit\" class=\"btn btn-primary font-weight-bold mr-2\"\r\n              [disabled]=\"formGroup.invalid\" (click)=\"save(true)\">{{ 'COMMON.SAVE_AND_EXIT' | translate }}</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </ng-container>\r\n\r\n    <ng-container *ngIf=\"activeTabId === tabs.FOLDER_TAB\">\r\n      <div class=\"mt-5\" *ngIf=\"model && model.id\">\r\n        <app-folder></app-folder>\r\n      </div>\r\n    </ng-container>\r\n  </div>\r\n</div>","import { Component, forwardRef, Renderer2, ViewChild, Input, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { SpaceService as ModelsService } from '../../_services/space.service';\r\nimport { LazyLoadEvent } from 'primeng/api';\r\nimport { ToastService } from 'src/app/modules/toast/_services/toast.service';\r\nimport { AuthService } from 'src/app/modules/auth';\r\nexport const EPANDED_TEXTAREA_VALUE_ACCESSOR: any = {\r\n    provide: NG_VALUE_ACCESSOR,\r\n    useExisting: forwardRef(() => SpaceAutocompleteComponent),\r\n    multi: true,\r\n};\r\n\r\n@Component({\r\n    selector: 'app-space-autocomplete',\r\n    templateUrl: './space-autocomplete.component.html',\r\n    styleUrls: ['./space-autocomplete.component.scss'],\r\n    providers: [EPANDED_TEXTAREA_VALUE_ACCESSOR],\r\n})\r\nexport class SpaceAutocompleteComponent implements ControlValueAccessor, OnInit {\r\n    @Input() model: any;\r\n    @Input() valid: boolean;\r\n    @Input() touched: boolean;\r\n    @Input() required: boolean;\r\n    @Input() disabled: boolean;\r\n    @Input() placeholder: string;\r\n    @Input() addFilters: { key: string, value: string }[];\r\n\r\n    public models: any[];\r\n\r\n    public onChange;\r\n    public onTouched;\r\n\r\n    public firstTime: boolean;\r\n    public totalRecords: number;\r\n    public page: number;\r\n    public per_page: number;\r\n    public sort: string;\r\n    public query: string;\r\n    public filters: { key: string, value: string }[];\r\n    public _with: { key: string, value: string }[];\r\n\r\n    public value: any;\r\n\r\n    constructor(\r\n        public modelsService: ModelsService,\r\n        public toastService: ToastService\r\n    ) {\r\n        this.page = 1;\r\n        this.per_page = 100;\r\n        this.firstTime = true;\r\n    }\r\n\r\n    public ngOnInit() {\r\n        if (!this.placeholder) {\r\n            this.placeholder = '';\r\n        }\r\n    }\r\n\r\n    writeValue(value: any) {\r\n        // const div = this.textarea.nativeElement;\r\n        // this.renderer.setProperty(div, 'textContent', value);\r\n        this.value = value;\r\n    }\r\n\r\n    registerOnChange(fn: any) {\r\n        this.onChange = fn;\r\n    }\r\n\r\n    registerOnTouched(fn: any) {\r\n        this.onTouched = fn;\r\n    }\r\n\r\n    setDisabledState(isDisabled: boolean) {\r\n        this.disabled = isDisabled;\r\n    }\r\n\r\n    public change($event) {\r\n        this.onChange(this.value);\r\n        this.onTouched(this.value);\r\n    }\r\n\r\n    public loadLazy(event) {\r\n        this.filters = [];\r\n        if (event.sortField) {\r\n            if (event.sortOrder === -1) {\r\n                this.sort = '-' + event.sortField;\r\n            } else {\r\n                this.sort = event.sortField;\r\n            }\r\n        } else {\r\n            this.sort = '-id';\r\n        }\r\n\r\n        if (this.addFilters) {\r\n            this.addFilters.forEach(element => {\r\n                this.filters.push({ key: 'filter{' + element.key + '}', value: element.value })\r\n            });\r\n        }\r\n\r\n        if (event.query) {\r\n            this.filters.push({ key: 'filter{number_space.icontains}', value: event.query })\r\n        } else {\r\n            this.query = undefined;\r\n        }\r\n\r\n        if (event.rows) {\r\n            this.per_page = event.rows;\r\n        }\r\n\r\n\r\n        if (!this.firstTime) {\r\n            this.getModels();\r\n        }\r\n        this.firstTime = false;\r\n    }\r\n\r\n    getModels() {\r\n        this.modelsService.get(this.page, this.per_page, this.sort, this.query, this.filters, this._with).toPromise().then(\r\n            response => {\r\n                this.models = response.spaces;\r\n                this.totalRecords = response.meta.total_results;\r\n                // if (this.model) {\r\n                //     if (this.model.id) {\r\n                //         this.model.id = undefined;\r\n                //         this.value = this.models[0];\r\n                //         this.filters = [];\r\n                //     }\r\n                // }\r\n            },\r\n            error => {\r\n                let messageError = [];\r\n                if (!Array.isArray(error.error)) {\r\n                    messageError.push(error.error);\r\n                } else {\r\n                    messageError = error.error;\r\n                }\r\n                Object.entries(messageError).forEach(\r\n                    ([key, value]) => this.toastService.growl('error', key + ': ' + value)\r\n                );\r\n            }\r\n        );\r\n    }\r\n\r\n    public isValid() {\r\n        let stringClass = 'form-control form-control-lg form-control-solid';\r\n        if (this.touched) {\r\n            if (this.valid) {\r\n                stringClass += ' is-valid';\r\n            } else {\r\n                stringClass += ' is-invalid';\r\n            }\r\n        }\r\n        return stringClass;\r\n    }\r\n}\r\n","<div>\r\n    <p-autoComplete [inputStyleClass]=\"isValid()\" [suggestions]=\"models\" (completeMethod)=\"loadLazy($event)\" (change)=\"change($event)\" (paste)=\"change($event)\" (onSelect)=\"change($event)\" [forceSelection]=\"true\" delay=\"0\" [(ngModel)]=\"value\" field=\"number_space\" placeholder=\"{{placeholder}}\" [disabled]=\"disabled\" [required]=\"required\">\r\n    </p-autoComplete>\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable, of, Subscription } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from '../../../../environments/environment';\r\nimport { catchError, finalize, tap } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class RoomService {\r\n    API_URL = `${environment.apiUrl}rooms`;\r\n    private _subscriptions: Subscription[] = [];\r\n\r\n    constructor(public http: HttpClient) { }\r\n\r\n    get subscriptions() {\r\n        return this._subscriptions;\r\n    }\r\n    \r\n    public get (page?: number, per_page?: number, sort?: string, query?: string, filters?: any[], _with?: any[]): Observable<any> {\r\n        let params: URLSearchParams = new URLSearchParams();\r\n\r\n        if (page !== null && page !== undefined) {\r\n            params.append('_page', String(page));\r\n        } else {\r\n            params.append('_page', '1');\r\n        }\r\n\r\n        if (per_page !== null && per_page !== undefined) {\r\n            params.append('_per_page', String(per_page));\r\n        } else {\r\n            params.append('_per_page', '10');\r\n        }\r\n\r\n        if (sort !== null && sort !== undefined) {\r\n            params.append('sort[]', String(sort));\r\n        }\r\n\r\n        if (query !== null && query !== undefined && query !== '') {\r\n            params.append('filter{id}[]', String(query));\r\n        }\r\n\r\n        if (filters !== null && filters !== undefined && filters.length > 0) {\r\n            filters.forEach(element => {\r\n                params.append(element.key, String(element.value));\r\n            });\r\n        }\r\n\r\n        if (_with !== null && _with !== undefined && _with.length > 0) {\r\n            _with.forEach(element => {\r\n                params.append(element.key, String(element.value));\r\n            });\r\n        }\r\n\r\n        return this.http.get(`${this.API_URL}?${params}`);\r\n    }\r\n\r\n    public post(body: Object): Observable<any> {\r\n        return this.http.post(`${this.API_URL}`, JSON.stringify(body));\r\n    }\r\n\r\n    public patch(id: number, body: Object): Observable<any> {\r\n        return this.http.patch(`${this.API_URL}/${id}`, JSON.stringify(body));\r\n    }\r\n\r\n    public delete(id: number): Observable<any> {\r\n        return this.http.delete(`${this.API_URL}/${id}`);\r\n    }\r\n\r\n    public getById(id: number): Observable<any> {\r\n        return this.http.get(`${this.API_URL}/${id}/?include[]=functionary.*&include[]=space.*`);\r\n    }\r\n}\r\n","import { Component, forwardRef, Renderer2, ViewChild, Input, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { FolderService as ModelsService } from '../../_services/folder.service';\r\nimport { LazyLoadEvent } from 'primeng/api';\r\nimport { ToastService } from 'src/app/modules/toast/_services/toast.service';\r\nimport { AuthService } from 'src/app/modules/auth';\r\nexport const EPANDED_TEXTAREA_VALUE_ACCESSOR: any = {\r\n    provide: NG_VALUE_ACCESSOR,\r\n    useExisting: forwardRef(() => FolderAutocompleteComponent),\r\n    multi: true,\r\n};\r\n\r\n@Component({\r\n    selector: 'app-folder-autocomplete',\r\n    templateUrl: './folder-autocomplete.component.html',\r\n    styleUrls: ['./folder-autocomplete.component.scss'],\r\n    providers: [EPANDED_TEXTAREA_VALUE_ACCESSOR],\r\n})\r\nexport class FolderAutocompleteComponent implements ControlValueAccessor, OnInit {\r\n    @Input() model: any;\r\n    @Input() valid: boolean;\r\n    @Input() touched: boolean;\r\n    @Input() required: boolean;\r\n    @Input() disabled: boolean;\r\n    @Input() placeholder: string;\r\n    @Input() addFilters: { key: string, value: string }[];\r\n\r\n    public models: any[];\r\n\r\n    public onChange;\r\n    public onTouched;\r\n\r\n    public firstTime: boolean;\r\n    public totalRecords: number;\r\n    public page: number;\r\n    public per_page: number;\r\n    public sort: string;\r\n    public query: string;\r\n    public filters: { key: string, value: string }[];\r\n    public _with: { key: string, value: string }[];\r\n\r\n    public value: any;\r\n\r\n    constructor(\r\n        public modelsService: ModelsService,\r\n        public toastService: ToastService\r\n    ) {\r\n        this.page = 1;\r\n        this.per_page = 100;\r\n        this.firstTime = true;\r\n    }\r\n\r\n    public ngOnInit() {\r\n        if (!this.placeholder) {\r\n            this.placeholder = '';\r\n        }\r\n    }\r\n\r\n    writeValue(value: any) {\r\n        // const div = this.textarea.nativeElement;\r\n        // this.renderer.setProperty(div, 'textContent', value);\r\n        this.value = value;\r\n    }\r\n\r\n    registerOnChange(fn: any) {\r\n        this.onChange = fn;\r\n    }\r\n\r\n    registerOnTouched(fn: any) {\r\n        this.onTouched = fn;\r\n    }\r\n\r\n    setDisabledState(isDisabled: boolean) {\r\n        this.disabled = isDisabled;\r\n    }\r\n\r\n    public change($event) {\r\n        this.onChange(this.value);\r\n        this.onTouched(this.value);\r\n    }\r\n\r\n    public loadLazy(event) {\r\n        this.filters = [];\r\n        if (event.sortField) {\r\n            if (event.sortOrder === -1) {\r\n                this.sort = '-' + event.sortField;\r\n            } else {\r\n                this.sort = event.sortField;\r\n            }\r\n        } else {\r\n            this.sort = '-id';\r\n        }\r\n\r\n        if (this.addFilters) {\r\n            this.addFilters.forEach(element => {\r\n                this.filters.push({ key: 'filter{' + element.key + '}', value: element.value })\r\n            });\r\n        }\r\n\r\n        if (event.query) {\r\n            this.filters.push({ key: 'filter{name.icontains}', value: event.query })\r\n        } else {\r\n            this.query = undefined;\r\n        }\r\n\r\n        if (event.rows) {\r\n            this.per_page = event.rows;\r\n        }\r\n\r\n\r\n        if (!this.firstTime) {\r\n            this.getModels();\r\n        }\r\n        this.firstTime = false;\r\n    }\r\n\r\n    getModels() {\r\n        this.modelsService.get(this.page, this.per_page, this.sort, this.query, this.filters, this._with).toPromise().then(\r\n            response => {\r\n                this.models = response.folders;\r\n                this.totalRecords = response.meta.total_results;\r\n                // if (this.model) {\r\n                //     if (this.model.id) {\r\n                //         this.model.id = undefined;\r\n                //         this.value = this.models[0];\r\n                //         this.filters = [];\r\n                //     }\r\n                // }\r\n            },\r\n            error => {\r\n                let messageError = [];\r\n                if (!Array.isArray(error.error)) {\r\n                    messageError.push(error.error);\r\n                } else {\r\n                    messageError = error.error;\r\n                }\r\n                Object.entries(messageError).forEach(\r\n                    ([key, value]) => this.toastService.growl('error', key + ': ' + value)\r\n                );\r\n            }\r\n        );\r\n    }\r\n\r\n    public isValid() {\r\n        let stringClass = 'form-control form-control-lg form-control-solid';\r\n        if (this.touched) {\r\n            if (this.valid) {\r\n                stringClass += ' is-valid';\r\n            } else {\r\n                stringClass += ' is-invalid';\r\n            }\r\n        }\r\n        return stringClass;\r\n    }\r\n}\r\n","<div>\r\n    <p-autoComplete [inputStyleClass]=\"isValid()\" [suggestions]=\"models\" (completeMethod)=\"loadLazy($event)\" (change)=\"change($event)\" (paste)=\"change($event)\" (onSelect)=\"change($event)\" [forceSelection]=\"true\" delay=\"0\" [(ngModel)]=\"value\" field=\"name\" placeholder=\"{{placeholder}}\" [disabled]=\"disabled\" [required]=\"required\">\r\n    </p-autoComplete>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-content-type',\r\n  templateUrl: './content-type.component.html',\r\n})\r\nexport class ContentTypeComponent implements OnInit {\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n}\r\n","<router-outlet></router-outlet>\r\n","import { UserModel } from \"../../user/_models/user.model\";\r\n\r\nexport class GroupModel {\r\n  id: number;\r\n  name: string;\r\n  permissions: any[];\r\n}\r\n","export { FunctionaryService } from './functionary.service';","export { RoomService } from './room.service';","import { Injectable } from '@angular/core';\r\nimport {\r\n  Router,\r\n  CanActivate,\r\n  ActivatedRouteSnapshot,\r\n  RouterStateSnapshot,\r\n} from '@angular/router';\r\nimport { TokenStorageService } from './auth-http/token-storage.service';\r\nimport { AuthService } from './auth.service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(private authService: AuthService, \r\n    private token: TokenStorageService) {}\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n    if (this.token.getUser() && this.token.getToken()) {\r\n      // logged in so return true\r\n      return true;\r\n    }\r\n\r\n    // not logged in so redirect to login page with the return url\r\n    this.authService.logout();\r\n    return false;\r\n  }\r\n}\r\n","import { AuthModel } from './auth.model';\r\nimport { AddressModel } from './address.model';\r\nimport { SocialNetworksModel } from './social-networks.model';\r\n\r\nexport class UserModel extends AuthModel {\r\n  id: number;\r\n  username: string;\r\n  password: string;\r\n  fullname: string;\r\n  email: string;\r\n  userprofile: {\r\n    id: number;\r\n    bio: string;\r\n    avatar: string;\r\n    phone: string;\r\n    address?: AddressModel;\r\n    location: string;\r\n    birth_date: string;\r\n    occupation: string;\r\n    socialNetworks?: SocialNetworksModel;\r\n    website: string;\r\n  }\r\n  groups: any[];\r\n  functionary: any;\r\n  companyName: string;\r\n  // personal information\r\n  first_name: string;\r\n  last_name: string;\r\n  // account information\r\n  language: string;\r\n  timeZone: string;\r\n  communication: {\r\n    email: boolean,\r\n    sms: boolean,\r\n    phone: boolean\r\n  };\r\n  // email settings\r\n  emailSettings: {\r\n    emailNotification: boolean,\r\n    sendCopyToPersonalEmail: boolean,\r\n    activityRelatesEmail: {\r\n      youHaveNewNotifications: boolean,\r\n      youAreSentADirectMessage: boolean,\r\n      someoneAddsYouAsAsAConnection: boolean,\r\n      uponNewOrder: boolean,\r\n      newMembershipApproval: boolean,\r\n      memberRegistration: boolean\r\n    },\r\n    updatesFromKeenthemes: {\r\n      newsAboutKeenthemesProductsAndFeatureUpdates: boolean,\r\n      tipsOnGettingMoreOutOfKeen: boolean,\r\n      thingsYouMissedSindeYouLastLoggedIntoKeen: boolean,\r\n      newsAboutMetronicOnPartnerProductsAndOtherServices: boolean,\r\n      tipsOnMetronicBusinessProducts: boolean\r\n    }\r\n  };\r\n\r\n  setUser(user: any) {\r\n    this.id = user.id;\r\n    this.username = user.username || '';\r\n    this.password = user.password || '';\r\n    this.fullname = user.firstname || '';\r\n    this.email = user.email || '';\r\n    this.userprofile.avatar = user.pic || './assets/media/users/default.jpg';\r\n    this.groups = user.roles || [];\r\n    this.userprofile.occupation = user.occupation || '';\r\n    this.companyName = user.companyName || '';\r\n    this.userprofile.phone = user.phone || '';\r\n    this.userprofile.address = user.address;\r\n    this.userprofile.socialNetworks = user.socialNetworks;\r\n  }\r\n}\r\n","export class ContentTypeModel {\r\n  id: number;\r\n  app_label: string;\r\n  model: string;\r\n}\r\n","// Germany\r\nexport const locale = {\r\n  lang: 'de',\r\n  data: {\r\n    TRANSLATOR: {\r\n      SELECT: 'Wähle deine Sprache',\r\n    },\r\n    MENU: {\r\n      NEW: 'Neu',\r\n      ACTIONS: 'Aktionen',\r\n      CREATE_POST: 'Erstellen Sie einen neuen Beitrag',\r\n      PAGES: 'Pages',\r\n      FEATURES: 'Eigenschaften',\r\n      APPS: 'Apps',\r\n      DASHBOARD: 'Instrumententafel'\r\n    },\r\n    AUTH: {\r\n      GENERAL: {\r\n        OR: 'Oder',\r\n        SUBMIT_BUTTON: 'einreichen',\r\n        NO_ACCOUNT: 'Hast du kein Konto?',\r\n        SIGNUP_BUTTON: 'Anmelden',\r\n        FORGOT_BUTTON: 'Passwort vergessen',\r\n        BACK_BUTTON: 'Zurück',\r\n        PRIVACY: 'Privatsphäre',\r\n        LEGAL: 'Legal',\r\n        CONTACT: 'Kontakt',\r\n      },\r\n      LOGIN: {\r\n        TITLE: 'Create Account',\r\n        BUTTON: 'Sign In',\r\n      },\r\n      FORGOT: {\r\n        TITLE: 'Forgotten Password?',\r\n        DESC: 'Enter your email to reset your password',\r\n        SUCCESS: 'Your account has been successfully reset.'\r\n      },\r\n      REGISTER: {\r\n        TITLE: 'Sign Up',\r\n        DESC: 'Enter your details to create your account',\r\n        SUCCESS: 'Your account has been successfuly registered.'\r\n      },\r\n      INPUT: {\r\n        EMAIL: 'Email',\r\n        FULLNAME: 'Fullname',\r\n        PASSWORD: 'Password',\r\n        CONFIRM_PASSWORD: 'Confirm Password',\r\n        USERNAME: 'Nutzername'\r\n      },\r\n      VALIDATION: {\r\n        INVALID: '{{name}} is not valid',\r\n        REQUIRED: '{{name}} is required',\r\n        MIN_LENGTH: '{{name}} minimum length is {{min}}',\r\n        AGREEMENT_REQUIRED: 'Accepting terms & conditions are required',\r\n        NOT_FOUND: 'The requested {{name}} is not found',\r\n        INVALID_LOGIN: 'The login detail is incorrect',\r\n        REQUIRED_FIELD: 'Required field',\r\n        MIN_LENGTH_FIELD: 'Minimum field length:',\r\n        MAX_LENGTH_FIELD: 'Maximum field length:',\r\n        INVALID_FIELD: 'Field is not valid',\r\n      }\r\n    },\r\n    ECOMMERCE: {\r\n      COMMON: {\r\n        SELECTED_RECORDS_COUNT: 'Selected records count: ',\r\n        ALL: 'All',\r\n        SUSPENDED: 'Suspended',\r\n        ACTIVE: 'Active',\r\n        FILTER: 'Filter',\r\n        BY_STATUS: 'by Status',\r\n        BY_TYPE: 'by Type',\r\n        BUSINESS: 'Business',\r\n        INDIVIDUAL: 'Individual',\r\n        SEARCH: 'Search',\r\n        IN_ALL_FIELDS: 'in all fields'\r\n      },\r\n      ECOMMERCE: 'eCommerce',\r\n      CUSTOMERS: {\r\n        CUSTOMERS: 'Customers',\r\n        CUSTOMERS_LIST: 'Customers list',\r\n        NEW_CUSTOMER: 'New Customer',\r\n        DELETE_CUSTOMER_SIMPLE: {\r\n          TITLE: 'Customer Delete',\r\n          DESCRIPTION: 'Are you sure to permanently delete this customer?',\r\n          WAIT_DESCRIPTION: 'Customer is deleting...',\r\n          MESSAGE: 'Customer has been deleted'\r\n        },\r\n        DELETE_CUSTOMER_MULTY: {\r\n          TITLE: 'Customers Delete',\r\n          DESCRIPTION: 'Are you sure to permanently delete selected customers?',\r\n          WAIT_DESCRIPTION: 'Customers are deleting...',\r\n          MESSAGE: 'Selected customers have been deleted'\r\n        },\r\n        UPDATE_STATUS: {\r\n          TITLE: 'Status has been updated for selected customers',\r\n          MESSAGE: 'Selected customers status have successfully been updated'\r\n        },\r\n        EDIT: {\r\n          UPDATE_MESSAGE: 'Customer has been updated',\r\n          ADD_MESSAGE: 'Customer has been created'\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FolderService as ModelService } from '../_services/folder.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { FolderModel as Model } from '../_models/folder.model';\r\nimport { FormGroup, AbstractControl, FormBuilder, Validators, FormControl } from '@angular/forms';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { Observable } from 'rxjs';\r\nimport { LazyLoadEvent } from 'primeng/api';\r\nimport { ConfirmationService } from 'primeng/api';\r\nimport { debounceTime, distinctUntilChanged } from 'rxjs/operators';\r\nimport { ToastService } from 'src/app/modules/toast/_services/toast.service';\r\nimport { AuthService } from 'src/app/modules/auth';\r\n\r\n@Component({\r\n    selector: 'app-folders',\r\n    templateUrl: './folders.component.html',\r\n    styleUrls: ['./folders.component.scss']\r\n})\r\nexport class FoldersComponent implements OnInit {\r\n\r\n    public promiseForm: Promise<any>;\r\n\r\n    public models: Model[];\r\n    public selectedModels: Model[];\r\n\r\n    public page: number;\r\n    public total_page: number;\r\n    public per_page: number;\r\n    public totalRecords: number;\r\n\r\n    public sort: string;\r\n    public query: string;\r\n    public filters: { key: string, value: string }[];\r\n    public _with: { key: string, value: string }[];\r\n\r\n    public formGroup: FormGroup;\r\n    public folder_id_filter: AbstractControl;\r\n    public department_id_filter: AbstractControl;\r\n    public venue_id_filter: AbstractControl;\r\n\r\n    searchGroup: FormGroup;\r\n\r\n    public requesting: boolean;\r\n\r\n    public confirmDialogPosition: string;\r\n    public message_confirm_delete: string;\r\n\r\n    public showTableCheckbox: boolean;\r\n\r\n    public roomId: number;\r\n    public parent: string;\r\n\r\n    constructor(\r\n        public modelsService: ModelService,\r\n        public translate: TranslateService,\r\n        private router: Router,\r\n        private route: ActivatedRoute,\r\n        private confirmationService: ConfirmationService,\r\n        private toastService: ToastService,\r\n        public authService: AuthService,\r\n        fb: FormBuilder) {\r\n        this.formGroup = fb.group({\r\n            'folder_id_filter': [''],\r\n            'department_id_filter': [''],\r\n            'venue_id_filter': [''],\r\n        });\r\n        this.folder_id_filter = this.formGroup.controls['folder_id_filter'];\r\n        this.department_id_filter = this.formGroup.controls['department_id_filter'];\r\n        this.venue_id_filter = this.formGroup.controls['venue_id_filter'];\r\n\r\n        this.searchGroup = fb.group({\r\n            searchTerm: [''],\r\n        });\r\n\r\n        this.translate.get('COMMON.MESSAGE_CONFIRM_DELETE').subscribe((res: string) => {\r\n            this.message_confirm_delete = res;\r\n        });\r\n\r\n        this.showTableCheckbox = false;\r\n        this.parent = '';\r\n\r\n        this.page = 1;\r\n        this.total_page = 0;\r\n        this.per_page = 100\r\n        this.totalRecords = 0;\r\n\r\n        this.requesting = false;\r\n\r\n        this.confirmDialogPosition = 'right';\r\n\r\n        this.models = [];\r\n        this.selectedModels = [];\r\n        // this.getModels();\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.requesting = false;\r\n\r\n        this._with = [];\r\n        this._with.push({key: 'include[]', value: 'functionary.*'})\r\n    }\r\n\r\n    public loadLazy(event?: LazyLoadEvent) {\r\n        if (event) {\r\n            this.page = (event.first / this.per_page) + 1;\r\n            if (event.sortField) {\r\n                if (event.sortOrder === -1) {\r\n                    this.sort = '-' + event.sortField;\r\n                } else {\r\n                    this.sort = event.sortField;\r\n                }\r\n            } else {\r\n                this.sort = '-id';\r\n            }\r\n\r\n            if (event.globalFilter) {\r\n                this.query = event.globalFilter;\r\n            } else {\r\n                this.query = undefined;\r\n            }\r\n\r\n            if (event.rows) {\r\n                this.per_page = event.rows;\r\n            }    \r\n        }\r\n\r\n        this.filters = [];\r\n        if (this.route.parent.parent.parent.snapshot.url.length > 0) {\r\n            this.route.parent.parent.parent.params.subscribe((params) => {\r\n                if (this.route.parent.parent.parent.parent.parent.snapshot.url.length > 0) {\r\n                    this.roomId = params.id;\r\n                    this.parent = '/' + this.route.parent.parent.parent.parent.parent.snapshot.url[0].path + '/edit/' + this.roomId;\r\n                    this.filters.push({ key: 'filter{room}', value: this.roomId.toString() })\r\n                }\r\n                this.getModels();\r\n            });\r\n        } else {\r\n            this.getModels();\r\n        }\r\n    }\r\n\r\n    public getModels() {\r\n        this.requesting = true;\r\n        this.modelsService.get(this.page, this.per_page, this.sort, this.query, this.filters, this._with).toPromise().then(\r\n            response => {\r\n                this.requesting = false;\r\n                // this.models = response.folders;\r\n                this.models = [];\r\n                response.folders.forEach(element => {\r\n                    this.models.push(element);\r\n                });\r\n                if(response.functionaries){\r\n                    response.functionaries.forEach(functionary => {\r\n                        this.models.forEach(element => {\r\n                            if (element.functionary === functionary.id) {\r\n                                element.functionary = functionary;\r\n                            }\r\n                        });\r\n                    });\r\n                }\r\n                this.totalRecords = response.meta.total_results;\r\n            },\r\n            error => {\r\n                this.requesting = false;\r\n                if (error.status == 404) {\r\n                    this.toastService.growl('error', 'Not Found')\r\n                } else {\r\n                    let messageError = [];\r\n                    if (!Array.isArray(error.error)) {\r\n                        messageError.push(error.error);\r\n                    } else {\r\n                        messageError = error.error;\r\n                    }\r\n                    Object.entries(messageError).forEach(\r\n                        ([key, value]) => this.toastService.growl('error', key + ': ' + value)\r\n                    );\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n    // public showDeleteDialog(user: Model) {\r\n    //     let message;\r\n    //     this.translate.get('Do you want to delete?').subscribe((res: string) => {\r\n    //         message = res;\r\n    //     });\r\n\r\n    //     let header;\r\n    //     this.translate.get('Delete Confirmation').subscribe((res: string) => {\r\n    //         header = res;\r\n    //     });\r\n\r\n    //     this.confirmationService.confirm({\r\n    //         message: message,\r\n    //         header: header,\r\n    //         icon: 'fa fa-trash',\r\n    //         accept: () => {\r\n    //             this.delete(user);\r\n    //         }\r\n    //     });\r\n    // }\r\n\r\n    public delete(id) {\r\n        this.modelsService.delete(id).toPromise().then(\r\n            response => {\r\n                this.toastService.growl('success', 'Delete');\r\n                this.getModels();\r\n            },\r\n            error => {\r\n                if (error.status == 404) {\r\n                    this.toastService.growl('error', 'Not Found')\r\n                } else {\r\n                    let messageError = [];\r\n                    if (!Array.isArray(error.error)) {\r\n                        messageError.push(error.error);\r\n                    } else {\r\n                        messageError = error.error;\r\n                    }\r\n                    Object.entries(messageError).forEach(\r\n                        ([key, value]) => this.toastService.growl('error', key + ': ' + value)\r\n                    );\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n    public patch(values: Model) {\r\n        const param = {\r\n            // 'activated': values.activated\r\n        };\r\n        if (values) {\r\n            const promise = this.modelsService.patch(values.id, param);\r\n            this.promiseForm = promise.toPromise().then(\r\n                response => {\r\n                    this.toastService.growl('success', 'Patch');\r\n                },\r\n                error => {\r\n                    if (error.status == 404) {\r\n                        this.toastService.growl('error', 'Not Found')\r\n                    } else {\r\n                        let messageError = [];\r\n                        if (!Array.isArray(error.error)) {\r\n                            messageError.push(error.error);\r\n                        } else {\r\n                            messageError = error.error;\r\n                        }\r\n                        Object.entries(messageError).forEach(\r\n                            ([key, value]) => this.toastService.growl('error', key + ': ' + value)\r\n                        );\r\n                    }\r\n                }\r\n            );\r\n        }\r\n    }\r\n\r\n    confirm(id, folder: string) {\r\n        this.confirmDialogPosition = folder;\r\n        this.confirmationService.confirm({\r\n            message: 'Are you sure that you want to delete?',\r\n            accept: () => {\r\n                this.delete(id);\r\n            }\r\n        });\r\n    }\r\n}\r\n","<div class=\"card card-custom gutter-b\">\r\n  <div class=\"card-header\">\r\n    <div class=\"card-title\">\r\n      <h3 class=\"card-label\">{{ 'COMMON.LIST' | translate }}</h3>\r\n    </div>\r\n    <div class=\"card-toolbar\">\r\n      <a type=\"button\" class=\"btn btn-primary\" *ngIf=\"authService.hasPermission('add_folder')\" routerLink=\"{{parent}}/folders/add\">{{ 'COMMON.NEW' | translate }}</a>\r\n    </div>\r\n  </div>\r\n  <div class=\"card-body\">\r\n    <!-- begin: Filtration form -->\r\n    <div class=\"form form-label-right\">\r\n      <div class=\"form-group row\">\r\n        <div class=\"col-lg-6\">\r\n          {{ 'COMMON.FILTER' | translate }}\r\n        </div>\r\n        <div class=\"col-lg-6\" [formGroup]=\"searchGroup\">\r\n          <input type=\"text\" class=\"form-control\" name=\"searchText\" placeholder=\"{{ 'COMMON.SEARCH' | translate }}\" value=\"\" (input)=\"dt.filterGlobal($event.target.value, 'contains')\"\r\n            formControlName=\"searchTerm\" /><small class=\"form-text text-muted\"><b>{{ 'COMMON.SEARCH' | translate }}</b> {{ 'COMMON.IN' | translate }} id</small>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <!-- end: Filtration form -->\r\n\r\n    <!-- begin:Table -->\r\n    <p-table #dt [value]=\"models\" [(selection)]=\"selectedModels\" dataKey=\"id\" styleClass=\"p-datatable-striped p-datatable-sm\" [rowHover]=\"true\"\r\n    [rows]=\"per_page\" [showCurrentPageReport]=\"true\" [rowsPerPageOptions]=\"[5,10,25,50,100]\"\r\n    [paginator]=\"true\" currentPageReportTemplate=\"{{ 'COMMON.SHOWING' | translate }} {{ 'COMMON.FROM' | translate }} {first} {{ 'COMMON.TO' | translate }} {last} {{ 'COMMON.OF' | translate }} {totalRecords} {{ 'COMMON.RECORDS' | translate }}\"\r\n    [filterDelay]=\"1000\" [globalFilterFields]=\"['id']\" [lazy]=\"true\" (onLazyLoad)=\"loadLazy($event)\"\r\n    [totalRecords]=\"totalRecords\" [showJumpToPageDropdown]=\"false\" [minBufferPx]=\"1\" [showLoader]=\"true\" [loading]=\"requesting\">\r\n      <ng-template pTemplate=\"header\">\r\n        <tr>\r\n          <th style=\"width: 3rem\" *ngIf=\"showTableCheckbox\">\r\n            <p-tableHeaderCheckbox></p-tableHeaderCheckbox>\r\n          </th>\r\n          <th pSortableColumn=\"id\">\r\n            <div class=\"p-d-flex p-jc-between p-ai-center\">\r\n              {{ 'FOLDER.ID' | translate }}\r\n            </div>\r\n          </th>\r\n          <th pSortableColumn=\"name\">\r\n            <div class=\"p-d-flex p-jc-between p-ai-center\">\r\n              {{ 'FOLDER.NAME' | translate }} \r\n            </div>\r\n          </th>\r\n          <th pSortableColumn=\"functionary\">\r\n            <div class=\"p-d-flex p-jc-between p-ai-center\">\r\n              {{ 'FOLDER.FUNCTIONARY' | translate }}\r\n            </div>\r\n          </th>\r\n          <th pSortableColumn=\"expiration_date\">\r\n            <div class=\"p-d-flex p-jc-between p-ai-center\">\r\n              {{ 'FOLDER.EXPIRATION_DATE' | translate }}\r\n              <!-- <p-sortIcon field=\"date_joined\"></p-sortIcon>\r\n              <p-columnFilter type=\"date_joined\" field=\"date_joined\" display=\"menu\" class=\"p-ml-auto\"></p-columnFilter> -->\r\n            </div>\r\n          </th>\r\n          <th pSortableColumn=\"created_at\">\r\n            <div class=\"p-d-flex p-jc-between p-ai-center\">\r\n              {{ 'COMMON.CREATED_AT' | translate }}\r\n              <!-- <p-sortIcon field=\"date_joined\"></p-sortIcon>\r\n              <p-columnFilter type=\"date_joined\" field=\"date_joined\" display=\"menu\" class=\"p-ml-auto\"></p-columnFilter> -->\r\n            </div>\r\n          </th>\r\n          <th style=\"width: 10rem\" *ngIf=\"authService.hasPermission('change_folder') || authService.hasPermission('delete_folchange_folder')\">\r\n            <div class=\"p-d-flex p-jc-between p-ai-center\">\r\n              {{ 'COMMON.ACTION' | translate }}\r\n              <!-- <p-sortIcon field=\"date_joined\"></p-sortIcon>\r\n              <p-columnFilter type=\"date_joined\" field=\"date_joined\" display=\"menu\" class=\"p-ml-auto\"></p-columnFilter> -->\r\n            </div>\r\n          </th>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"body\" let-value>\r\n        <tr class=\"p-selectable-row\">\r\n          <td *ngIf=\"showTableCheckbox\">\r\n            <p-tableCheckbox [value]=\"value\"></p-tableCheckbox>\r\n          </td>\r\n          <td>\r\n            {{value.id}}\r\n          </td>\r\n          <td>\r\n            {{value.name}}\r\n          </td>\r\n          <td>\r\n            {{value.functionary?.name}}\r\n          </td>\r\n          <td>\r\n            {{value.expiration_date | date: 'MM/dd/yyyy'}}\r\n          </td>\r\n          <td>\r\n            {{value.created_at | date: 'MM/dd/yyyy'}}\r\n          </td>\r\n          <td style=\"text-align: right\" *ngIf=\"authService.hasPermission('change_folder') || authService.hasPermission('delete_folchange_folder')\">\r\n            <a title=\"{{ 'COMMON.EDIT' | translate }}\" class=\"btn btn-icon btn-light btn-hover-primary btn-sm\" style=\"margin-right: 5px;\"\r\n              routerLink=\"{{parent}}/folders/edit/{{value.id}}\"  *ngIf=\"authService.hasPermission('change_folder')\">\r\n              <span [inlineSVG]=\"'./assets/media/svg/icons/Communication/Write.svg'\" cacheSVG=\"true\"\r\n                class=\"svg-icon svg-icon-md svg-icon-primary\">\r\n              </span>\r\n            </a>\r\n            <a title=\"{{ 'COMMON.DELETE' | translate }}\" class=\"btn btn-icon btn-light btn-hover-danger btn-sm\"\r\n              (click)=\"confirm(value.id, 'right')\" *ngIf=\"authService.hasPermission('delete_folder')\">\r\n              <span [inlineSVG]=\"'./assets/media/svg/icons/General/Trash.svg'\" cacheSVG=\"true\"\r\n                class=\"svg-icon svg-icon-md svg-icon-danger\">\r\n              </span>\r\n            </a>\r\n          </td>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"emptymessage\">\r\n        <tr>\r\n          <td colspan=\"6\" class=\"text-center\">{{ 'COMMON.NO_ITEMS_FOUND' | translate }}</td>\r\n        </tr>\r\n      </ng-template>\r\n    </p-table>\r\n    <!-- end: Table -->\r\n  </div>\r\n</div>\r\n\r\n<p-confirmDialog header=\"{{ 'COMMON.CONFIRMATION' | translate }}\" icon=\"pi pi-exclamation-triangle\" [position]=\"confirmDialogPosition\"></p-confirmDialog>","// models\r\nexport * from './_models/user.model';\r\n// services\r\nexport * from './_services/auth.service';\r\n// validators\r\nexport * from './registration/confirm-password.validator';\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable, of, Subscription } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from '../../../../environments/environment';\r\nimport { catchError, finalize, tap } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class ContentTypeService {\r\n    API_URL = `${environment.apiUrl}contenttypes`;\r\n    private _subscriptions: Subscription[] = [];\r\n\r\n    constructor(public http: HttpClient) { }\r\n\r\n    get subscriptions() {\r\n        return this._subscriptions;\r\n    }\r\n    \r\n    public get (page?: number, per_page?: number, sort?: string, query?: string, filters?: any[], _with?: any[]): Observable<any> {\r\n        let params: URLSearchParams = new URLSearchParams();\r\n\r\n        if (page !== null && page !== undefined) {\r\n            params.append('_page', String(page));\r\n        } else {\r\n            params.append('_page', '1');\r\n        }\r\n\r\n        if (per_page !== null && per_page !== undefined) {\r\n            params.append('_per_page', String(per_page));\r\n        } else {\r\n            params.append('_per_page', '10');\r\n        }\r\n\r\n        if (sort !== null && sort !== undefined) {\r\n            params.append('sort[]', String(sort));\r\n        }\r\n\r\n        if (query !== null && query !== undefined && query !== '') {\r\n            params.append('filter', String(query));\r\n        }\r\n\r\n        if (filters !== null && filters !== undefined && filters.length > 0) {\r\n            filters.forEach(element => {\r\n                params.append(element.key, String(element.value));\r\n            });\r\n        }\r\n\r\n        if (_with !== null && _with !== undefined && _with.length > 0) {\r\n            _with.forEach(element => {\r\n                params.append(element.key, String(element.value));\r\n            });\r\n        }\r\n\r\n        return this.http.get(`${this.API_URL}?${params}`);\r\n    }\r\n\r\n    public post(body: Object): Observable<any> {\r\n        return this.http.post(`${this.API_URL}`, JSON.stringify(body));\r\n    }\r\n\r\n    public patch(id: number, body: Object): Observable<any> {\r\n        return this.http.patch(`${this.API_URL}/${id}`, JSON.stringify(body));\r\n    }\r\n\r\n    public delete(id: number): Observable<any> {\r\n        return this.http.delete(`${this.API_URL}/${id}`);\r\n    }\r\n\r\n    public getById(id: number): Observable<any> {\r\n        return this.http.get(`${this.API_URL}/${id}`);\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AuthGuard } from './modules/auth/_services/auth.guard';\r\n\r\nexport const routes: Routes = [\r\n  {\r\n    path: 'auth',\r\n    loadChildren: () =>\r\n      import('./modules/auth/auth.module').then((m) => m.AuthModule),\r\n  },\r\n  {\r\n    path: 'error',\r\n    loadChildren: () =>\r\n      import('./modules/errors/errors.module').then((m) => m.ErrorsModule),\r\n  },\r\n  {\r\n    path: '',\r\n    canActivate: [AuthGuard],\r\n    loadChildren: () =>\r\n      import('./pages/layout.module').then((m) => m.LayoutModule),\r\n  },\r\n  { path: '**', redirectTo: 'errors/404', pathMatch: 'full' },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule {}\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { AbstractControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Observable, of, Subscription } from 'rxjs';\r\nimport { catchError, switchMap, tap } from 'rxjs/operators';\r\nimport { ToastService } from 'src/app/modules/toast/_services/toast.service';\r\nimport { AuthService } from 'src/app/modules/auth';\r\nimport { UserModel as Model } from '../../_models/user.model';\r\nimport { UserService as ModelsService } from '../../_services/user.service';\r\n\r\n@Component({\r\n  selector: 'app-user-edit',\r\n  templateUrl: './user-edit.component.html',\r\n  styleUrls: ['./user-edit.component.scss']\r\n})\r\nexport class UserEditComponent implements OnInit, OnDestroy {\r\n  public id: number;\r\n  public model: Model;\r\n  public previous: Model;\r\n  public formGroup: FormGroup;\r\n  public requesting: boolean = false;\r\n\r\n  public tabs = {\r\n    BASIC_TAB: 0,\r\n    PROFILE: 1,\r\n  };\r\n\r\n  public username: AbstractControl;\r\n  public first_name: AbstractControl;\r\n  public last_name: AbstractControl;\r\n  public email: AbstractControl;\r\n  public password: AbstractControl;\r\n  public user_permissions: AbstractControl;\r\n  public groups: AbstractControl;\r\n  public is_active: AbstractControl;\r\n  public is_staff: AbstractControl;\r\n  public is_superuser: AbstractControl;\r\n\r\n  public activeTabId: number;\r\n  private subscriptions: Subscription[] = [];\r\n\r\n  public saveAndExit;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private modelsService: ModelsService,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private toastService: ToastService\r\n  ) {\r\n    this.activeTabId = this.tabs.BASIC_TAB; // 0 => Basic info | 1 => Profile\r\n    this.saveAndExit = false;\r\n    this.requesting = false;\r\n\r\n    this.formGroup = this.fb.group({\r\n      username: ['', Validators.compose([Validators.required, Validators.minLength(3), Validators.maxLength(100)])],\r\n      first_name: ['', Validators.compose([Validators.required, Validators.minLength(3), Validators.maxLength(100)])],\r\n      last_name: ['', Validators.compose([Validators.required, Validators.minLength(3), Validators.maxLength(100)])],\r\n      email: ['', Validators.compose([Validators.required, Validators.minLength(3), Validators.maxLength(100)])],\r\n      password: ['', Validators.compose([Validators.required, Validators.minLength(3), Validators.maxLength(100)])],\r\n      user_permissions: ['', Validators.compose([Validators.required])],\r\n      groups: ['', Validators.compose([Validators.required])],\r\n      is_active: [''],\r\n      is_staff: [''],\r\n      is_superuser: ['']\r\n    });\r\n    this.username = this.formGroup.controls['username'];\r\n    this.first_name = this.formGroup.controls['first_name'];\r\n    this.last_name = this.formGroup.controls['last_name'];\r\n    this.email = this.formGroup.controls['email'];\r\n    this.password = this.formGroup.controls['password'];\r\n    this.user_permissions = this.formGroup.controls['user_permissions'];\r\n    this.groups = this.formGroup.controls['groups'];\r\n    this.is_active = this.formGroup.controls['is_active'];\r\n    this.is_staff = this.formGroup.controls['is_staff'];\r\n    this.is_superuser = this.formGroup.controls['is_superuser'];\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.id = undefined;\r\n    this.model = undefined;\r\n    this.previous = undefined;\r\n    this.get();\r\n  }\r\n\r\n  get() {\r\n    this.requesting = true;\r\n    const sb = this.route.paramMap.pipe(\r\n      switchMap(params => {\r\n        // get id from URL\r\n        this.id = Number(params.get('id'));\r\n        if (this.id || this.id > 0) {\r\n          return this.modelsService.getById(this.id);\r\n        }\r\n        return of({ 'user': new Model() });\r\n      }),\r\n      catchError((error) => {\r\n        this.requesting = false;\r\n        let messageError = [];\r\n        if (!Array.isArray(error.error)) {\r\n          messageError.push(error.error);\r\n        } else {\r\n          messageError = error.error;\r\n        }\r\n        Object.entries(messageError).forEach(\r\n          ([key, value]) => this.toastService.growl('error', key + ': ' + value)\r\n        );\r\n        return of({ 'user': new Model() });\r\n      }),\r\n    ).subscribe((response: any) => {\r\n      this.requesting = false;\r\n      if (response) {\r\n        this.model = response.user;\r\n        if (response.permissions) {\r\n          this.model.user_permissions = response.permissions;\r\n        }\r\n        if (response.groups) {\r\n          this.model.groups = response.groups;\r\n        }\r\n        this.previous = Object.assign({}, this.model);\r\n        this.loadForm();\r\n      }\r\n    });\r\n    this.subscriptions.push(sb);\r\n  }\r\n\r\n  loadForm() {\r\n    if (this.model.id) {\r\n      this.username.setValue(this.model.username);\r\n      this.first_name.setValue(this.model.first_name);\r\n      this.last_name.setValue(this.model.last_name);\r\n      this.email.setValue(this.model.email);\r\n      this.password.setValue(this.model.password);\r\n      this.is_active.setValue(this.model.is_active);\r\n      this.is_staff.setValue(this.model.is_staff);\r\n      this.is_superuser.setValue(this.model.is_superuser);\r\n      if (this.model.user_permissions) {\r\n        this.user_permissions.setValue(this.model.user_permissions);\r\n      }\r\n      if (this.model.groups) {\r\n        this.groups.setValue(this.model.groups);\r\n      }\r\n    } else {\r\n      this.is_active.setValue(false);\r\n      this.is_staff.setValue(false);\r\n      this.is_superuser.setValue(false);\r\n    }\r\n    this.formGroup.markAllAsTouched();\r\n  }\r\n\r\n  reset() {\r\n    if (this.previous) {\r\n      this.model = Object.assign({}, this.previous);\r\n      this.loadForm();\r\n    }\r\n  }\r\n\r\n  save(saveAndExit) {\r\n    this.saveAndExit = saveAndExit;\r\n    this.formGroup.markAllAsTouched();\r\n    if (this.formGroup.valid) {\r\n      const formValues = this.formGroup.value;\r\n      this.model = Object.assign(this.model, formValues);\r\n      if (this.id) {\r\n        this.edit();\r\n      } else {\r\n        this.create();\r\n      }\r\n    }\r\n  }\r\n\r\n  edit() {\r\n    this.requesting = true;\r\n    let model = this.model;\r\n    model.username = this.model.username;\r\n    model.first_name = this.model.first_name;\r\n    model.last_name = this.model.last_name;\r\n    model.email = this.model.email;\r\n    model.password = this.model.password;\r\n\r\n    let user_permissions = [];\r\n    this.model.user_permissions.forEach(element => {\r\n      user_permissions.push(element.id);\r\n    });\r\n    model.user_permissions = user_permissions;\r\n\r\n    let groups = [];\r\n    this.model.groups.forEach(element => {\r\n      groups.push(element.id);\r\n    });\r\n    model.groups = groups;\r\n\r\n    const sbUpdate = this.modelsService.patch(this.id, this.model).pipe(\r\n      tap(() => {\r\n        this.toastService.growl('success', 'success');\r\n        if (this.saveAndExit) {\r\n          this.router.navigate(['/users']);\r\n        }\r\n      }),\r\n      catchError((error) => {\r\n        this.requesting = false;\r\n        let messageError = [];\r\n        if (!Array.isArray(error.error)) {\r\n          messageError.push(error.error);\r\n        } else {\r\n          messageError = error.error;\r\n        }\r\n        Object.entries(messageError).forEach(\r\n          ([key, value]) => this.toastService.growl('error', key + ': ' + value)\r\n        );\r\n        return of(this.model);\r\n      })\r\n    ).subscribe(response => {\r\n      this.requesting = false;\r\n      this.model = response.user\r\n    });\r\n    this.subscriptions.push(sbUpdate);\r\n  }\r\n\r\n  create() {\r\n    this.requesting = true;\r\n    let model = this.model;\r\n    model.username = this.model.username;\r\n    model.first_name = this.model.first_name;\r\n    model.last_name = this.model.last_name;\r\n    model.email = this.model.email;\r\n    model.password = this.model.password;\r\n\r\n    let user_permissions = [];\r\n    this.model.user_permissions.forEach(element => {\r\n      user_permissions.push(element.id);\r\n    });\r\n    model.user_permissions = user_permissions;\r\n\r\n    let groups = [];\r\n    this.model.groups.forEach(element => {\r\n      groups.push(element.id);\r\n    });\r\n    model.groups = groups;\r\n\r\n    const sbCreate = this.modelsService.post(this.model).pipe(\r\n      tap(() => {\r\n        this.toastService.growl('success', 'success');\r\n        if (this.saveAndExit) {\r\n          this.router.navigate(['/users']);\r\n        } else {\r\n          this.formGroup.reset()\r\n        }\r\n      }),\r\n      catchError((error) => {\r\n        this.requesting = false;\r\n        let messageError = [];\r\n        if (!Array.isArray(error.error)) {\r\n          messageError.push(error.error);\r\n        } else {\r\n          messageError = error.error;\r\n        }\r\n        Object.entries(messageError).forEach(\r\n          ([key, value]) => this.toastService.growl('error', key + ': ' + value)\r\n        );\r\n        return of(this.model);\r\n      })\r\n    ).subscribe(response => {\r\n      this.requesting = false;\r\n      this.model = response.user as Model\r\n    });\r\n    this.subscriptions.push(sbCreate);\r\n  }\r\n\r\n  changeTab(tabId: number) {\r\n    this.activeTabId = tabId;\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscriptions.forEach(sb => sb.unsubscribe());\r\n  }\r\n\r\n  // helpers for View\r\n  isControlValid(controlName: string): boolean {\r\n    const control = this.formGroup.controls[controlName];\r\n    return control.valid && (control.dirty || control.touched);\r\n  }\r\n\r\n  isControlInvalid(controlName: string): boolean {\r\n    const control = this.formGroup.controls[controlName];\r\n    return control.invalid && (control.dirty || control.touched);\r\n  }\r\n\r\n  controlHasError(validation: string, controlName: string) {\r\n    const control = this.formGroup.controls[controlName];\r\n    return control.hasError(validation) && (control.dirty || control.touched);\r\n  }\r\n\r\n  isControlTouched(controlName: string): boolean {\r\n    const control = this.formGroup.controls[controlName];\r\n    return control.dirty || control.touched;\r\n  }\r\n}\r\n","<div class=\"card card-custom gutter-b\">\r\n  <ng-container *ngIf=\"requesting\">\r\n    <div class=\"progress progress-modal\">\r\n      <div class=\"progress-bar progress-bar-striped progress-bar-animated bg-primary\" role=\"progressbar\"\r\n        style=\"width: 100%\" aria-valuenow=\"100\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\r\n    </div>\r\n  </ng-container>\r\n\r\n  <div class=\"card-header\">\r\n    <div class=\"card-title\">\r\n      <h3 class=\"card-label\">\r\n        <ng-container *ngIf=\"model\">\r\n          {{ (id ? 'COMMON.EDIT' : 'COMMON.NEW') | translate }}\r\n          <span *ngIf=\"model && model.id\">{{ 'USER.USER' | translate }} : {{ model.id }}</span>\r\n        </ng-container>\r\n        {{ model?.email }}\r\n      </h3>\r\n    </div>\r\n    <div class=\"card-toolbar\">\r\n      <a type=\"button\" class=\"btn btn-light\" routerLink=\"/users\">\r\n        <i class=\"fa fa-arrow-left\"></i>{{ 'COMMON.BACK' | translate }}\r\n      </a>\r\n      <button class=\"btn btn-secondary ml-2\" (click)=\"reset()\">\r\n        <i class=\"fa fa-redo\"></i>{{ 'COMMON.RESET' | translate }}\r\n      </button>\r\n    </div>\r\n  </div>\r\n  <div class=\"card-body\">\r\n    <ul class=\"nav nav-tabs nav-tabs-line\" role=\"tablist\">\r\n      <li class=\"nav-item cursor-pointer\" (click)=\"changeTab(tabs.BASIC_TAB)\">\r\n        <a class=\"nav-link\" data-toggle=\"tab\" role=\"tab\" [attr.aria-selected]=\"activeTabId === tabs.BASIC_TAB\"\r\n          [class.active]=\"activeTabId === tabs.BASIC_TAB\">\r\n          {{ 'COMMON.BASIC_INFO' | translate }}\r\n        </a>\r\n      </li>\r\n      <!-- <li *ngIf=\"model && model.id\" class=\"nav-item cursor-pointer\" (click)=\"changeTab(tabs.PROFILE)\">\r\n        <a class=\"nav-link\" data-toggle=\"tab\" role=\"button\" [attr.aria-selected]=\"activeTabId === tabs.PROFILE\"\r\n          [class.active]=\"activeTabId === tabs.PROFILE\">Profile</a>\r\n      </li> -->\r\n    </ul>\r\n\r\n    <ng-container *ngIf=\"activeTabId === tabs.BASIC_TAB\">\r\n      <div class=\"mt-5\" *ngIf=\"model\">\r\n        <form action=\"#\" class=\"form form-label-right\" [formGroup]=\"formGroup\">\r\n          <div class=\"form-group row\">\r\n            <div class=\"col-lg-4\">\r\n              <label>{{ 'COMMON.ENTER' | translate }} {{ 'USER.FIRST_NAME' | translate }}</label>\r\n              <input type=\"text\" class=\"form-control form-control-lg form-control-solid\" autocomplete=\"off\"\r\n                placeholder=\"{{ 'USER.FIRST_NAME' | translate }}\" name=\"first_name\" [class.is-invalid]=\"isControlInvalid('first_name')\"\r\n                [class.is-valid]=\"isControlValid('first_name')\" formControlName=\"first_name\" />\r\n              <div class=\"feedback\" *ngIf=\"!isControlTouched('first_name')\">{{ 'COMMON.PLEASE_ENTER' | translate }} <b>{{ 'USER.FIRST_NAME' | translate }}</b></div>\r\n              <div class=\"valid-feedback\" *ngIf=\"isControlValid('first_name')\">{{ 'USER.FIRST_NAME' | translate }}  {{ 'COMMON.WAS_ENTERED_CORRECT' | translate }}</div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"controlHasError('required', 'first_name')\">{{ 'USER.FIRST_NAME' | translate }}  {{ 'COMMON.IS_REQUIRED' | translate }}</div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"controlHasError('minlength', 'first_name')\">{{ 'USER.FIRST_NAME' | translate }} {{ 'COMMON.SHOULD_HAVE_LEAST' | translate }} 3</div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"controlHasError('maxLength', 'first_name')\">{{ 'USER.FIRST_NAME' | translate }} {{ 'COMMON.SHOULD_HAVE_MAXIMUM' | translate }} 100</div>\r\n            </div>\r\n            <div class=\"col-lg-4\">\r\n              <label>{{ 'COMMON.ENTER' | translate }} {{ 'USER.LAST_NAME' | translate }}</label>\r\n              <input type=\"text\" class=\"form-control form-control-lg form-control-solid\" autocomplete=\"off\"\r\n                placeholder=\"{{ 'USER.LAST_NAME' | translate }}\" name=\"last_name\" [class.is-invalid]=\"isControlInvalid('last_name')\"\r\n                [class.is-valid]=\"isControlValid('last_name')\" formControlName=\"last_name\" />\r\n              <div class=\"feedback\" *ngIf=\"!isControlTouched('last_name')\">{{ 'COMMON.PLEASE_ENTER' | translate }} <b>{{ 'USER.LAST_NAME' | translate }}</b></div>\r\n              <div class=\"valid-feedback\" *ngIf=\"isControlValid('last_name')\">{{ 'USER.LAST_NAME' | translate }}  {{ 'COMMON.WAS_ENTERED_CORRECT' | translate }}</div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"controlHasError('required', 'last_name')\">{{ 'USER.LAST_NAME' | translate }}  {{ 'COMMON.IS_REQUIRED' | translate }}</div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"controlHasError('minlength', 'last_name')\">{{ 'USER.LAST_NAME' | translate }} {{ 'COMMON.SHOULD_HAVE_LEAST' | translate }} 3</div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"controlHasError('maxLength', 'last_name')\">{{ 'USER.LAST_NAME' | translate }} {{ 'COMMON.SHOULD_HAVE_MAXIMUM' | translate }} 100</div>\r\n            </div>\r\n            <div class=\"col-lg-4\">\r\n              <label>{{ 'COMMON.ENTER' | translate }} {{ 'USER.USERNAME' | translate }}</label>\r\n              <input type=\"text\" class=\"form-control form-control-lg form-control-solid\" autocomplete=\"off\"\r\n                placeholder=\"{{ 'USER.USERNAME' | translate }}\" name=\"username\" [class.is-invalid]=\"isControlInvalid('username')\"\r\n                [class.is-valid]=\"isControlValid('username')\" formControlName=\"username\" />\r\n              <div class=\"feedback\" *ngIf=\"!isControlTouched('username')\">{{ 'COMMON.PLEASE_ENTER' | translate }} <b>{{ 'USER.USERNAME' | translate }}</b></div>\r\n              <div class=\"valid-feedback\" *ngIf=\"isControlValid('username')\">{{ 'USER.USERNAME' | translate }}  {{ 'COMMON.WAS_ENTERED_CORRECT' | translate }}</div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"controlHasError('required', 'username')\">{{ 'USER.USERNAME' | translate }}  {{ 'COMMON.IS_REQUIRED' | translate }}</div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"controlHasError('minlength', 'username')\">{{ 'USER.USERNAME' | translate }} {{ 'COMMON.SHOULD_HAVE_LEAST' | translate }} 3</div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"controlHasError('maxLength', 'username')\">{{ 'USER.USERNAME' | translate }} {{ 'COMMON.SHOULD_HAVE_MAXIMUM' | translate }} 100</div>\r\n            </div>\r\n            <div class=\"col-lg-4\">\r\n              <label>{{ 'COMMON.ENTER' | translate }} {{ 'USER.EMAIL' | translate }}</label>\r\n              <input type=\"text\" class=\"form-control form-control-lg form-control-solid\" autocomplete=\"off\"\r\n                placeholder=\"{{ 'USER.EMAIL' | translate }}\" name=\"email\" [class.is-invalid]=\"isControlInvalid('email')\"\r\n                [class.is-valid]=\"isControlValid('email')\" formControlName=\"email\" />\r\n              <div class=\"feedback\" *ngIf=\"!isControlTouched('email')\">{{ 'COMMON.PLEASE_ENTER' | translate }} <b>{{ 'USER.EMAIL' | translate }}</b></div>\r\n              <div class=\"valid-feedback\" *ngIf=\"isControlValid('email')\">{{ 'USER.EMAIL' | translate }}  {{ 'COMMON.WAS_ENTERED_CORRECT' | translate }}</div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"controlHasError('required', 'email')\">{{ 'USER.EMAIL' | translate }}  {{ 'COMMON.IS_REQUIRED' | translate }}</div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"controlHasError('minlength', 'email')\">{{ 'USER.EMAIL' | translate }} {{ 'COMMON.SHOULD_HAVE_LEAST' | translate }} 3</div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"controlHasError('maxLength', 'email')\">{{ 'USER.EMAIL' | translate }} {{ 'COMMON.SHOULD_HAVE_MAXIMUM' | translate }} 100</div>\r\n            </div>\r\n            <div class=\"col-lg-4\">\r\n              <label>{{ 'COMMON.ENTER' | translate }} {{ 'USER.GROUPS' | translate }}</label>\r\n              <app-group-multiselect\r\n              name=\"groups\" [valid]=\"isControlValid('groups')\" [touched]=\"isControlTouched('groups')\" [class.is-invalid]=\"isControlInvalid('groups')\"\r\n              [class.is-valid]=\"isControlValid('groups')\" formControlName=\"groups\" id=\"groups\" [model]=\"model.groups\"></app-group-multiselect>\r\n              <div class=\"feedback\" *ngIf=\"!isControlTouched('groups')\">{{ 'COMMON.PLEASE_ENTER' | translate }} <b>{{ 'USER.GROUPS' | translate }}</b></div>\r\n              <div class=\"valid-feedback\" *ngIf=\"isControlValid('groups')\">{{ 'USER.GROUPS' | translate }}  {{ 'COMMON.WAS_ENTERED_CORRECT' | translate }}</div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"controlHasError('required', 'groups')\">{{ 'USER.GROUPS' | translate }}  {{ 'COMMON.IS_REQUIRED' | translate }}</div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"controlHasError('minlength', 'groups')\">{{ 'USER.GROUPS' | translate }} {{ 'COMMON.SHOULD_HAVE_LEAST' | translate }} 3</div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"controlHasError('maxLength', 'groups')\">{{ 'USER.GROUPS' | translate }} {{ 'COMMON.SHOULD_HAVE_MAXIMUM' | translate }} 30</div>\r\n            </div>\r\n            <div class=\"col-lg-4\">\r\n              <label>{{ 'COMMON.ENTER' | translate }} {{ 'USER.PERMISSIONS' | translate }}</label>\r\n              <app-permission-multiselect\r\n              name=\"user_permissions\" [valid]=\"isControlValid('user_permissions')\" [touched]=\"isControlTouched('user_permissions')\" [class.is-invalid]=\"isControlInvalid('user_permissions')\"\r\n              [class.is-valid]=\"isControlValid('user_permissions')\" formControlName=\"user_permissions\" id=\"user_permissions\" [model]=\"model.user_permissions\"></app-permission-multiselect>\r\n              <div class=\"feedback\" *ngIf=\"!isControlTouched('user_permissions')\">{{ 'COMMON.PLEASE_ENTER' | translate }} <b>{{ 'USER.PERMISSIONS' | translate }}</b></div>\r\n              <div class=\"valid-feedback\" *ngIf=\"isControlValid('user_permissions')\">{{ 'USER.PERMISSIONS' | translate }}  {{ 'COMMON.WAS_ENTERED_CORRECT' | translate }}</div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"controlHasError('required', 'user_permissions')\">{{ 'USER.PERMISSIONS' | translate }}  {{ 'COMMON.IS_REQUIRED' | translate }}</div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"controlHasError('minlength', 'user_permissions')\">{{ 'USER.PERMISSIONS' | translate }} {{ 'COMMON.SHOULD_HAVE_LEAST' | translate }} 3</div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"controlHasError('maxLength', 'user_permissions')\">{{ 'USER.PERMISSIONS' | translate }} {{ 'COMMON.SHOULD_HAVE_MAXIMUM' | translate }} 30</div>\r\n            </div>\r\n            <div class=\"col-lg-4\">\r\n              <label>{{ 'COMMON.ENTER' | translate }} {{ 'USER.PASSWORD' | translate }}</label>\r\n              <input type=\"password\" class=\"form-control form-control-lg form-control-solid\" autocomplete=\"off\"\r\n                placeholder=\"{{ 'USER.PASSWORD' | translate }}\" name=\"password\" [class.is-invalid]=\"isControlInvalid('password')\"\r\n                [class.is-valid]=\"isControlValid('password')\" formControlName=\"password\" />\r\n              <div class=\"feedback\" *ngIf=\"!isControlTouched('password')\">{{ 'COMMON.PLEASE_ENTER' | translate }} <b>{{ 'USER.PASSWORD' | translate }}</b></div>\r\n              <div class=\"valid-feedback\" *ngIf=\"isControlValid('password')\">{{ 'USER.PASSWORD' | translate }}  {{ 'COMMON.WAS_ENTERED_CORRECT' | translate }}</div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"controlHasError('required', 'password')\">{{ 'USER.PASSWORD' | translate }}  {{ 'COMMON.IS_REQUIRED' | translate }}</div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"controlHasError('minlength', 'password')\">{{ 'USER.PASSWORD' | translate }} {{ 'COMMON.SHOULD_HAVE_LEAST' | translate }} 3</div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"controlHasError('maxLength', 'password')\">{{ 'USER.PASSWORD' | translate }} {{ 'COMMON.SHOULD_HAVE_MAXIMUM' | translate }} 100</div>\r\n            </div>\r\n            <div class=\"col-lg-2\">\r\n              <label>{{ 'USER.IS_ACTIVATE' | translate }}</label>\r\n              <p-toggleButton class=\"form-control form-control-lg form-control-solid\" formControlName=\"is_active\" onLabel=\"{{ 'COMMON.YES' | translate}}\" offLabel=\"{{ 'COMMON.NO' | translate}}\"></p-toggleButton>\r\n            </div>\r\n            <div class=\"col-lg-2\">\r\n              <label>{{ 'USER.IS_STAFF' | translate }}</label>\r\n              <p-toggleButton class=\"form-control form-control-lg form-control-solid\" formControlName=\"is_staff\" onLabel=\"{{ 'COMMON.YES' | translate}}\" offLabel=\"{{ 'COMMON.NO' | translate}}\"></p-toggleButton>\r\n            </div>\r\n            <div class=\"col-lg-2\">\r\n              <label>{{ 'USER.IS_SUPERUSER' | translate }}</label>\r\n              <p-toggleButton class=\"form-control form-control-lg form-control-solid\" formControlName=\"is_superuser\" onLabel=\"{{ 'COMMON.YES' | translate}}\" offLabel=\"{{ 'COMMON.NO' | translate}}\"></p-toggleButton>\r\n            </div>\r\n          </div>\r\n          <div class=\"float-right\">\r\n            <a class=\"btn btn-default font-weight-bold mr-2\" routerLink=\"/users\">{{ 'COMMON.CANCEL' | translate }}</a>\r\n            <button type=\"submit\" class=\"btn btn-primary font-weight-bold mr-2\"\r\n              [disabled]=\"formGroup.invalid\" (click)=\"save(false)\">{{ 'COMMON.SAVE' | translate }}</button>\r\n            <button type=\"submit\" class=\"btn btn-primary font-weight-bold mr-2\"\r\n              [disabled]=\"formGroup.invalid\" (click)=\"save(true)\">{{ 'COMMON.SAVE_AND_EXIT' | translate }}</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </ng-container>\r\n\r\n    <ng-container *ngIf=\"activeTabId === tabs.PROFILE && model && model.id\">\r\n      Profile\r\n    </ng-container>\r\n\r\n  </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { EvidenceService as ModelService } from '../_services/evidence.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { EvidenceModel as Model } from '../_models/evidence.model';\r\nimport { FormGroup, AbstractControl, FormBuilder, Validators, FormControl } from '@angular/forms';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { Observable } from 'rxjs';\r\nimport { LazyLoadEvent } from 'primeng/api';\r\nimport { ConfirmationService } from 'primeng/api';\r\nimport { debounceTime, distinctUntilChanged } from 'rxjs/operators';\r\nimport { ToastService } from 'src/app/modules/toast/_services/toast.service';\r\nimport { AuthService } from 'src/app/modules/auth';\r\n\r\n@Component({\r\n    selector: 'app-evidences',\r\n    templateUrl: './evidences.component.html',\r\n    styleUrls: ['./evidences.component.scss']\r\n})\r\nexport class EvidencesComponent implements OnInit {\r\n\r\n    public promiseForm: Promise<any>;\r\n\r\n    public models: Model[];\r\n    public selectedModels: Model[];\r\n\r\n    public page: number;\r\n    public total_page: number;\r\n    public per_page: number;\r\n    public totalRecords: number;\r\n\r\n    public sort: string;\r\n    public query: string;\r\n    public filters: { key: string, value: string }[];\r\n    public _with: { key: string, value: string }[];\r\n\r\n    public formGroup: FormGroup;\r\n    public evidence_id_filter: AbstractControl;\r\n    public department_id_filter: AbstractControl;\r\n    public venue_id_filter: AbstractControl;\r\n\r\n    searchGroup: FormGroup;\r\n\r\n    public requesting: boolean;\r\n\r\n    public confirmDialogPosition: string;\r\n    public message_confirm_delete: string;\r\n\r\n    public showTableCheckbox: boolean;\r\n\r\n    public folderId: number;\r\n    public parent: string;\r\n\r\n    constructor(\r\n        public modelsService: ModelService,\r\n        public translate: TranslateService,\r\n        private router: Router,\r\n        private route: ActivatedRoute,\r\n        private confirmationService: ConfirmationService,\r\n        private toastService: ToastService,\r\n        public authService: AuthService,\r\n        fb: FormBuilder) {\r\n        this.formGroup = fb.group({\r\n            'evidence_id_filter': [''],\r\n            'department_id_filter': [''],\r\n            'venue_id_filter': [''],\r\n        });\r\n        this.evidence_id_filter = this.formGroup.controls['evidence_id_filter'];\r\n        this.department_id_filter = this.formGroup.controls['department_id_filter'];\r\n        this.venue_id_filter = this.formGroup.controls['venue_id_filter'];\r\n\r\n        this.searchGroup = fb.group({\r\n            searchTerm: [''],\r\n        });\r\n\r\n        this.translate.get('COMMON.MESSAGE_CONFIRM_DELETE').subscribe((res: string) => {\r\n            this.message_confirm_delete = res;\r\n        });\r\n\r\n        this.showTableCheckbox = false;\r\n        this.parent = '';\r\n\r\n        this.page = 1;\r\n        this.total_page = 0;\r\n        this.per_page = 100\r\n        this.totalRecords = 0;\r\n\r\n        this.requesting = false;\r\n\r\n        this.confirmDialogPosition = 'right';\r\n\r\n        this.models = [];\r\n        this.selectedModels = [];\r\n        // this.getModels();\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.requesting = false;\r\n\r\n        this._with = [];\r\n        this._with.push({key: 'include[]', value: 'functionary.*'})\r\n        this._with.push({key: 'include[]', value: 'folder.*'})\r\n        this._with.push({key: 'include[]', value: 'teacher.*'})\r\n    }\r\n\r\n    public loadLazy(event?: LazyLoadEvent) {\r\n        if (event) {\r\n            this.page = (event.first / this.per_page) + 1;\r\n            if (event.sortField) {\r\n                if (event.sortOrder === -1) {\r\n                    this.sort = '-' + event.sortField;\r\n                } else {\r\n                    this.sort = event.sortField;\r\n                }\r\n            } else {\r\n                this.sort = '-id';\r\n            }\r\n\r\n            if (event.globalFilter) {\r\n                this.query = event.globalFilter;\r\n            } else {\r\n                this.query = undefined;\r\n            }\r\n\r\n            if (event.rows) {\r\n                this.per_page = event.rows;\r\n            }    \r\n        }\r\n\r\n        this.filters = [];\r\n\r\n\r\n        switch (this.authService.currentUserValue.groups[0].id) {\r\n            case 3:\r\n                this.filters.push({ key: 'filter{teacher}', value: this.authService.currentUserValue.functionary.id.toString() });\r\n                break;\r\n            case 2:\r\n                this.filters.push({ key: 'filter{functionary}', value: this.authService.currentUserValue.functionary.id.toString() });\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n\r\n        if (this.route.parent.parent.parent.snapshot.url.length > 0) {\r\n            this.route.parent.parent.parent.params.subscribe((params) => {\r\n                if (this.route.parent.parent.parent.parent.parent.snapshot.url.length > 0) {\r\n                    this.folderId = params.id;\r\n                    this.parent = '/' + this.route.parent.parent.parent.parent.parent.snapshot.url[0].path + '/edit/' + this.folderId;\r\n                    this.filters.push({ key: 'filter{folder}', value: this.folderId.toString() })\r\n                }\r\n                this.getModels();\r\n            });\r\n        } else {\r\n            this.getModels();\r\n        }\r\n    }\r\n\r\n    public getModels() {\r\n        this.requesting = true;\r\n        this.modelsService.get(this.page, this.per_page, this.sort, this.query, this.filters, this._with).toPromise().then(\r\n            response => {\r\n                this.requesting = false;\r\n                // this.models = response.evidences;\r\n                this.models = [];\r\n                response.evidences.forEach(element => {\r\n                    this.models.push(element);\r\n                });\r\n                if(response.functionaries){\r\n                    response.functionaries.forEach(functionary => {\r\n                        this.models.forEach(element => {\r\n                            if (element.functionary === functionary.id) {\r\n                                element.functionary = functionary;\r\n                            }\r\n                        });\r\n                    });\r\n                }\r\n                if(response.folders){\r\n                    response.folders.forEach(folder => {\r\n                        this.models.forEach(element => {\r\n                            if (element.folder === folder.id) {\r\n                                element.folder = folder;\r\n                            }\r\n                        });\r\n                    });\r\n                }\r\n                this.totalRecords = response.meta.total_results;\r\n            },\r\n            error => {\r\n                this.requesting = false;\r\n                if (error.status == 404) {\r\n                    this.toastService.growl('error', 'Not Found')\r\n                } else {\r\n                    let messageError = [];\r\n                    if (!Array.isArray(error.error)) {\r\n                        messageError.push(error.error);\r\n                    } else {\r\n                        messageError = error.error;\r\n                    }\r\n                    Object.entries(messageError).forEach(\r\n                        ([key, value]) => this.toastService.growl('error', key + ': ' + value)\r\n                    );\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n    // public showDeleteDialog(user: Model) {\r\n    //     let message;\r\n    //     this.translate.get('Do you want to delete?').subscribe((res: string) => {\r\n    //         message = res;\r\n    //     });\r\n\r\n    //     let header;\r\n    //     this.translate.get('Delete Confirmation').subscribe((res: string) => {\r\n    //         header = res;\r\n    //     });\r\n\r\n    //     this.confirmationService.confirm({\r\n    //         message: message,\r\n    //         header: header,\r\n    //         icon: 'fa fa-trash',\r\n    //         accept: () => {\r\n    //             this.delete(user);\r\n    //         }\r\n    //     });\r\n    // }\r\n\r\n    public delete(id) {\r\n        this.modelsService.delete(id).toPromise().then(\r\n            response => {\r\n                this.toastService.growl('success', 'Delete');\r\n                this.getModels();\r\n            },\r\n            error => {\r\n                if (error.status == 404) {\r\n                    this.toastService.growl('error', 'Not Found')\r\n                } else {\r\n                    let messageError = [];\r\n                    if (!Array.isArray(error.error)) {\r\n                        messageError.push(error.error);\r\n                    } else {\r\n                        messageError = error.error;\r\n                    }\r\n                    Object.entries(messageError).forEach(\r\n                        ([key, value]) => this.toastService.growl('error', key + ': ' + value)\r\n                    );\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n    public patch(values: Model) {\r\n        const param = {\r\n            // 'activated': values.activated\r\n        };\r\n        if (values) {\r\n            const promise = this.modelsService.patch(values.id, param);\r\n            this.promiseForm = promise.toPromise().then(\r\n                response => {\r\n                    this.toastService.growl('success', 'Patch');\r\n                },\r\n                error => {\r\n                    if (error.status == 404) {\r\n                        this.toastService.growl('error', 'Not Found')\r\n                    } else {\r\n                        let messageError = [];\r\n                        if (!Array.isArray(error.error)) {\r\n                            messageError.push(error.error);\r\n                        } else {\r\n                            messageError = error.error;\r\n                        }\r\n                        Object.entries(messageError).forEach(\r\n                            ([key, value]) => this.toastService.growl('error', key + ': ' + value)\r\n                        );\r\n                    }\r\n                }\r\n            );\r\n        }\r\n    }\r\n\r\n    confirm(id, evidence: string) {\r\n        this.confirmDialogPosition = evidence;\r\n        this.confirmationService.confirm({\r\n            message: 'Are you sure that you want to delete?',\r\n            accept: () => {\r\n                this.delete(id);\r\n            }\r\n        });\r\n    }\r\n}\r\n","<div class=\"card card-custom gutter-b\">\r\n  <div class=\"card-header\">\r\n    <div class=\"card-title\">\r\n      <h3 class=\"card-label\">{{ 'COMMON.LIST' | translate }}</h3>\r\n    </div>\r\n    <div class=\"card-toolbar\">\r\n      <a type=\"button\" class=\"btn btn-primary\" *ngIf=\"authService.hasPermission('add_evidence')\" routerLink=\"{{parent}}/evidences/add\">{{ 'COMMON.NEW' | translate }}</a>\r\n    </div>\r\n  </div>\r\n  <div class=\"card-body\">\r\n    <!-- begin: Filtration form -->\r\n    <div class=\"form form-label-right\">\r\n      <div class=\"form-group row\">\r\n        <div class=\"col-lg-6\">\r\n          {{ 'COMMON.FILTER' | translate }}\r\n        </div>\r\n        <div class=\"col-lg-6\" [formGroup]=\"searchGroup\">\r\n          <input type=\"text\" class=\"form-control\" name=\"searchText\" placeholder=\"{{ 'COMMON.SEARCH' | translate }}\" value=\"\" (input)=\"dt.filterGlobal($event.target.value, 'contains')\"\r\n            formControlName=\"searchTerm\" /><small class=\"form-text text-muted\"><b>{{ 'COMMON.SEARCH' | translate }}</b> {{ 'COMMON.IN' | translate }} id</small>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <!-- end: Filtration form -->\r\n\r\n    <!-- begin:Table -->\r\n    <p-table #dt [value]=\"models\" [(selection)]=\"selectedModels\" dataKey=\"id\" styleClass=\"p-datatable-striped p-datatable-sm\" [rowHover]=\"true\"\r\n    [rows]=\"per_page\" [showCurrentPageReport]=\"true\" [rowsPerPageOptions]=\"[5,10,25,50,100]\"\r\n    [paginator]=\"true\" currentPageReportTemplate=\"{{ 'COMMON.SHOWING' | translate }} {{ 'COMMON.FROM' | translate }} {first} {{ 'COMMON.TO' | translate }} {last} {{ 'COMMON.OF' | translate }} {totalRecords} {{ 'COMMON.RECORDS' | translate }}\"\r\n    [filterDelay]=\"1000\" [globalFilterFields]=\"['id']\" [lazy]=\"true\" (onLazyLoad)=\"loadLazy($event)\"\r\n    [totalRecords]=\"totalRecords\" [showJumpToPageDropdown]=\"false\" [minBufferPx]=\"1\" [showLoader]=\"true\" [loading]=\"requesting\">\r\n      <ng-template pTemplate=\"header\">\r\n        <tr>\r\n          <th style=\"width: 3rem\" *ngIf=\"showTableCheckbox\">\r\n            <p-tableHeaderCheckbox></p-tableHeaderCheckbox>\r\n          </th>\r\n          <th pSortableColumn=\"id\">\r\n            <div class=\"p-d-flex p-jc-between p-ai-center\">\r\n              {{ 'EVIDENCE.ID' | translate }}\r\n            </div>\r\n          </th>\r\n          <th pSortableColumn=\"functionary\">\r\n            <div class=\"p-d-flex p-jc-between p-ai-center\">\r\n              {{ 'EVIDENCE.FUNCTIONARY' | translate }}\r\n            </div>\r\n          </th>\r\n          <th pSortableColumn=\"folder\">\r\n            <div class=\"p-d-flex p-jc-between p-ai-center\">\r\n              {{ 'EVIDENCE.FOLDER' | translate }} \r\n            </div>\r\n          </th>\r\n          <th pSortableColumn=\"active\">\r\n            <div class=\"p-d-flex p-jc-between p-ai-center\">\r\n              {{ 'EVIDENCE.ACTIVE' | translate }}\r\n            </div>\r\n          </th>\r\n          <th pSortableColumn=\"re_expiration_date\">\r\n            <div class=\"p-d-flex p-jc-between p-ai-center\">\r\n              {{ 'EVIDENCE.RE_EXPIRATION_DATE' | translate }}\r\n              <!-- <p-sortIcon field=\"date_joined\"></p-sortIcon>\r\n              <p-columnFilter type=\"date_joined\" field=\"date_joined\" display=\"menu\" class=\"p-ml-auto\"></p-columnFilter> -->\r\n            </div>\r\n          </th>\r\n          <!-- <th pSortableColumn=\"created_at\">\r\n            <div class=\"p-d-flex p-jc-between p-ai-center\">\r\n              {{ 'COMMON.CREATED_AT' | translate }}\r\n            </div>\r\n          </th> -->\r\n          <th style=\"width: 10rem\" *ngIf=\"authService.hasPermission('change_evidence') || authService.hasPermission('delete_evidence')\">\r\n            <div class=\"p-d-flex p-jc-between p-ai-center\">\r\n              {{ 'COMMON.ACTION' | translate }}\r\n              <!-- <p-sortIcon field=\"date_joined\"></p-sortIcon>\r\n              <p-columnFilter type=\"date_joined\" field=\"date_joined\" display=\"menu\" class=\"p-ml-auto\"></p-columnFilter> -->\r\n            </div>\r\n          </th>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"body\" let-value>\r\n        <tr class=\"p-selectable-row\">\r\n          <td *ngIf=\"showTableCheckbox\">\r\n            <p-tableCheckbox [value]=\"value\"></p-tableCheckbox>\r\n          </td>\r\n          <td>\r\n            {{value.id}}\r\n          </td>\r\n          <td>\r\n            {{value.functionary?.name}}\r\n          </td>\r\n          <td>\r\n            {{value.folder?.name}}\r\n          </td>\r\n          <td>\r\n            <p-badge [value]=\"'SI'\"  severity=\"success\"  severity=\"success\" *ngIf=\"value.active == true\"></p-badge>\r\n            <p-badge [value]=\"'NO'\"  severity=\"danger\"  severity=\"warning\" *ngIf=\"value.active == false\"></p-badge>\r\n          </td>\r\n          <td>\r\n            {{value.re_expiration_date | date: 'MM/dd/yyyy'}}\r\n          </td>\r\n          <!-- <td>\r\n            {{value.created_at | date: 'MM/dd/yyyy'}}\r\n          </td> -->\r\n          <td style=\"text-align: right\" *ngIf=\"authService.hasPermission('change_evidence') || authService.hasPermission('delete_evidence')\">\r\n            <a title=\"{{ 'COMMON.EDIT' | translate }}\" class=\"btn btn-icon btn-light btn-hover-primary btn-sm\" style=\"margin-right: 5px;\"\r\n              routerLink=\"{{parent}}/evidences/edit/{{value.id}}\"  *ngIf=\"authService.hasPermission('change_evidence')\">\r\n              <span [inlineSVG]=\"'./assets/media/svg/icons/Communication/Write.svg'\" cacheSVG=\"true\"\r\n                class=\"svg-icon svg-icon-md svg-icon-primary\">\r\n              </span>\r\n            </a>\r\n            <a title=\"{{ 'COMMON.DELETE' | translate }}\" class=\"btn btn-icon btn-light btn-hover-danger btn-sm\"\r\n              (click)=\"confirm(value.id, 'right')\" *ngIf=\"authService.hasPermission('delete_evidence')\">\r\n              <span [inlineSVG]=\"'./assets/media/svg/icons/General/Trash.svg'\" cacheSVG=\"true\"\r\n                class=\"svg-icon svg-icon-md svg-icon-danger\">\r\n              </span>\r\n            </a>\r\n          </td>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"emptymessage\">\r\n        <tr>\r\n          <td colspan=\"6\" class=\"text-center\">{{ 'COMMON.NO_ITEMS_FOUND' | translate }}</td>\r\n        </tr>\r\n      </ng-template>\r\n    </p-table>\r\n    <!-- end: Table -->\r\n  </div>\r\n</div>\r\n\r\n<p-confirmDialog header=\"{{ 'COMMON.CONFIRMATION' | translate }}\" icon=\"pi pi-exclamation-triangle\" [position]=\"confirmDialogPosition\"></p-confirmDialog>","export { ContentTypeService } from './content-type.service';","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { AbstractControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Observable, of, Subscription } from 'rxjs';\r\nimport { catchError, switchMap, tap } from 'rxjs/operators';\r\nimport { ToastService } from 'src/app/modules/toast/_services/toast.service';\r\nimport { AuthService } from 'src/app/modules/auth';\r\nimport { ContentTypeModel as Model } from '../../_models/content-type.model';\r\nimport { ContentTypeService as ModelsService } from '../../_services/content-type.service';\r\n\r\n@Component({\r\n  selector: 'app-content-type-edit',\r\n  templateUrl: './content-type-edit.component.html',\r\n  styleUrls: ['./content-type-edit.component.scss']\r\n})\r\nexport class ContentTypeEditComponent implements OnInit, OnDestroy {\r\n  public id: number;\r\n  public thismodel: Model;\r\n  public previous: Model;\r\n  public formGroup: FormGroup;\r\n  public requesting: boolean = false;\r\n\r\n  public tabs = {\r\n    BASIC_TAB: 0,\r\n  };\r\n\r\n  public app_label: AbstractControl;\r\n  public model: AbstractControl;\r\n\r\n  public activeTabId: number;\r\n  private subscriptions: Subscription[] = [];\r\n\r\n  public saveAndExit;\r\n  public optionsStatus: { key: string, value: string }[];\r\n\r\n  public companyId: number;\r\n  public parent: string;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private thismodelsService: ModelsService,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private toastService: ToastService,\r\n  ) {\r\n    this.activeTabId = this.tabs.BASIC_TAB; // 0 => Basic info | 1 => Profile\r\n    this.saveAndExit = false;\r\n    this.requesting = false;\r\n\r\n    this.formGroup = this.fb.group({\r\n      app_label: ['', Validators.compose([Validators.required])],\r\n      model: ['', Validators.compose([Validators.required])],\r\n\r\n    });\r\n    this.app_label = this.formGroup.controls['app_label'];\r\n    this.model = this.formGroup.controls['model'];\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.id = undefined;\r\n    this.thismodel = undefined;\r\n    this.previous = undefined;\r\n\r\n    this.route.parent.parent.parent.params.subscribe((params) => {\r\n      if (this.route.parent.parent.parent.parent.parent.snapshot.url.length > 0) {\r\n        this.companyId = params.id;\r\n        this.parent = '/' + this.route.parent.parent.parent.parent.parent.snapshot.url[0].path + '/edit/' + this.companyId;\r\n      }\r\n      this.get();\r\n    });\r\n  }\r\n\r\n  get() {\r\n    this.requesting = true;\r\n    const sb = this.route.paramMap.pipe(\r\n      switchMap(params => {\r\n        // get id from URL\r\n        this.id = Number(params.get('id'));\r\n        if (this.id || this.id > 0) {\r\n          return this.thismodelsService.getById(this.id);\r\n        }\r\n        return of({ 'content_type': new Model() });\r\n      }),\r\n      catchError((error) => {\r\n        this.requesting = false;\r\n        let messageError = [];\r\n        if (!Array.isArray(error.error)) {\r\n          messageError.push(error.error);\r\n        } else {\r\n          messageError = error.error;\r\n        }\r\n        Object.entries(messageError).forEach(\r\n          ([key, value]) => this.toastService.growl('error', key + ': ' + value)\r\n        );\r\n        return of({ 'content_type': new Model() });\r\n      }),\r\n    ).subscribe((response: any) => {\r\n      this.requesting = false;\r\n      if (response) {\r\n        this.thismodel = response.content_type;\r\n        this.previous = Object.assign({}, this.thismodel);\r\n        this.loadForm();\r\n      }\r\n    });\r\n    this.subscriptions.push(sb);\r\n  }\r\n\r\n  loadForm() {\r\n    if (this.thismodel.id) {\r\n      this.app_label.setValue(this.thismodel.app_label);\r\n      this.model.setValue(this.thismodel.model);\r\n    } \r\n    this.formGroup.markAllAsTouched();\r\n  }\r\n\r\n  reset() {\r\n    if (this.previous) {\r\n      this.thismodel = Object.assign({}, this.previous);\r\n      this.loadForm();\r\n    }\r\n  }\r\n\r\n  save(saveAndExit) {\r\n    this.saveAndExit = saveAndExit;\r\n    this.formGroup.markAllAsTouched();\r\n    if (this.formGroup.valid) {\r\n      const formValues = this.formGroup.value;\r\n      this.thismodel = Object.assign(this.thismodel, formValues);\r\n      if (this.id) {\r\n        this.edit();\r\n      } else {\r\n        this.create();\r\n      }\r\n    }\r\n  }\r\n\r\n  edit() {\r\n    this.requesting = true;\r\n    let thismodel = this.thismodel;\r\n\r\n    const sbUpdate = this.thismodelsService.patch(this.id, thismodel).pipe(\r\n      tap(() => {\r\n        this.toastService.growl('success', 'success');\r\n        if (this.saveAndExit) {\r\n          if(this.parent){\r\n            this.router.navigate([this.parent + '/contenttypes']);\r\n          } else {\r\n            this.router.navigate(['/contenttypes']);\r\n          }\r\n        }\r\n      }),\r\n      catchError((error) => {\r\n        this.requesting = false;\r\n        let messageError = [];\r\n        if (!Array.isArray(error.error)) {\r\n          messageError.push(error.error);\r\n        } else {\r\n          messageError = error.error;\r\n        }\r\n        Object.entries(messageError).forEach(\r\n          ([key, value]) => this.toastService.growl('error', key + ': ' + value)\r\n        );\r\n        return of(this.thismodel);\r\n      })\r\n    ).subscribe(response => {\r\n      this.requesting = false;\r\n      this.thismodel = response.content_type\r\n    });\r\n    this.subscriptions.push(sbUpdate);\r\n  }\r\n\r\n  create() {\r\n    this.requesting = true;\r\n    let thismodel = this.thismodel;\r\n\r\n    const sbCreate = this.thismodelsService.post(thismodel).pipe(\r\n      tap(() => {\r\n        this.toastService.growl('success', 'success');\r\n        if (this.saveAndExit) {\r\n          if(this.parent){\r\n            this.router.navigate([this.parent + '/contenttypes']);\r\n          } else {\r\n            this.router.navigate(['/contenttypes']);\r\n          }\r\n        } else {\r\n          this.formGroup.reset()\r\n        }\r\n      }),\r\n      catchError((error) => {\r\n        this.requesting = false;\r\n        let messageError = [];\r\n        if (!Array.isArray(error.error)) {\r\n          messageError.push(error.error);\r\n        } else {\r\n          messageError = error.error;\r\n        }\r\n        Object.entries(messageError).forEach(\r\n          ([key, value]) => this.toastService.growl('error', key + ': ' + value)\r\n        );\r\n        return of(this.thismodel);\r\n      })\r\n    ).subscribe(response => {\r\n      this.requesting = false;\r\n      this.thismodel = response.content_type as Model\r\n    });\r\n    this.subscriptions.push(sbCreate);\r\n  }\r\n\r\n  changeTab(tabId: number) {\r\n    this.activeTabId = tabId;\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscriptions.forEach(sb => sb.unsubscribe());\r\n  }\r\n\r\n  // helpers for View\r\n  isControlValid(controlName: string): boolean {\r\n    const control = this.formGroup.controls[controlName];\r\n    return control.valid && (control.dirty || control.touched);\r\n  }\r\n\r\n  isControlInvalid(controlName: string): boolean {\r\n    const control = this.formGroup.controls[controlName];\r\n    return control.invalid && (control.dirty || control.touched);\r\n  }\r\n\r\n  controlHasError(validation: string, controlName: string) {\r\n    const control = this.formGroup.controls[controlName];\r\n    return control.hasError(validation) && (control.dirty || control.touched);\r\n  }\r\n\r\n  isControlTouched(controlName: string): boolean {\r\n    const control = this.formGroup.controls[controlName];\r\n    return control.dirty || control.touched;\r\n  }\r\n\r\n  public getValidClass(valid) {\r\n    let stringClass = 'form-control form-control-lg form-control-solid';\r\n    if (valid) {\r\n      stringClass += ' is-valid';\r\n    } else {\r\n      stringClass += ' is-invalid';\r\n    }\r\n    return stringClass;\r\n  }\r\n}\r\n","<div class=\"card card-custom gutter-b\">\r\n  <ng-container *ngIf=\"requesting\">\r\n    <div class=\"progress progress-modal\">\r\n      <div class=\"progress-bar progress-bar-striped progress-bar-animated bg-primary\" role=\"progressbar\"\r\n        style=\"width: 100%\" aria-valuenow=\"100\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\r\n    </div>\r\n  </ng-container>\r\n\r\n  <div class=\"card-header\">\r\n    <div class=\"card-title\">\r\n      <h3 class=\"card-label\">\r\n        <ng-container *ngIf=\"thismodel\">\r\n          {{ (id ? 'COMMON.EDIT' : 'COMMON.NEW') | translate }}\r\n          <span *ngIf=\"thismodel && thismodel.id\">{{ 'COMPANY_CONTACT.COMPANY_CONTACT' | translate }} : {{ thismodel.id }}</span>\r\n        </ng-container>\r\n      </h3>\r\n    </div>\r\n    <div class=\"card-toolbar\">\r\n      <a type=\"button\" class=\"btn btn-light\" routerLink=\"{{parent}}/contenttypes\">\r\n        <i class=\"fa fa-arrow-left\"></i>{{ 'COMMON.BACK' | translate }}\r\n      </a>\r\n      <button class=\"btn btn-secondary ml-2\" (click)=\"reset()\">\r\n        <i class=\"fa fa-redo\"></i>{{ 'COMMON.RESET' | translate }}\r\n      </button>\r\n    </div>\r\n  </div>\r\n  <div class=\"card-body\">\r\n    <ul class=\"nav nav-tabs nav-tabs-line\" role=\"tablist\">\r\n      <li class=\"nav-item cursor-pointer\" (click)=\"changeTab(tabs.BASIC_TAB)\">\r\n        <a class=\"nav-link\" data-toggle=\"tab\" role=\"tab\" [attr.aria-selected]=\"activeTabId === tabs.BASIC_TAB\"\r\n          [class.active]=\"activeTabId === tabs.BASIC_TAB\">\r\n          {{ 'COMMON.BASIC_INFO' | translate }}\r\n        </a>\r\n      </li>\r\n      <!-- <li *ngIf=\"thismodel && thismodel.id\" class=\"nav-item cursor-pointer\" (click)=\"changeTab(tabs.PROFILE)\">\r\n        <a class=\"nav-link\" data-toggle=\"tab\" role=\"button\" [attr.aria-selected]=\"activeTabId === tabs.PROFILE\"\r\n          [class.active]=\"activeTabId === tabs.PROFILE\">Profile</a>\r\n      </li> -->\r\n    </ul>\r\n\r\n    <ng-container *ngIf=\"activeTabId === tabs.BASIC_TAB\">\r\n      <div class=\"mt-5\" *ngIf=\"thismodel\">\r\n        <form action=\"#\" class=\"form form-label-right\" [formGroup]=\"formGroup\">\r\n          <div class=\"form-group row\">\r\n            <div class=\"col-lg-6\">\r\n              <label>{{ 'COMMON.ENTER' | translate }} {{ 'CONTENT_TYPE.APP_LABEL' | translate }}</label>\r\n              <input type=\"text\" class=\"form-control form-control-lg form-control-solid\" autocomplete=\"off\"\r\n                name=\"app_label\" [class.is-invalid]=\"isControlInvalid('app_label')\"\r\n                [class.is-valid]=\"isControlValid('app_label')\" formControlName=\"app_label\" />\r\n              <div class=\"feedback\" *ngIf=\"!isControlTouched('app_label')\">{{ 'COMMON.PLEASE_ENTER' | translate }} <b>{{ 'CONTENT_TYPE.APP_LABEL' | translate }}</b></div>\r\n              <div class=\"valid-feedback\" *ngIf=\"isControlValid('app_label')\">{{ 'CONTENT_TYPE.APP_LABEL' | translate }}  {{ 'COMMON.WAS_ENTERED_CORRECT' | translate }}</div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"controlHasError('required', 'app_label')\">{{ 'CONTENT_TYPE.APP_LABEL' | translate }}  {{ 'COMMON.IS_REQUIRED' | translate }}</div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"controlHasError('minlength', 'app_label')\">{{ 'CONTENT_TYPE.APP_LABEL' | translate }} {{ 'COMMON.SHOULD_HAVE_LEAST' | translate }} 3</div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"controlHasError('maxLength', 'app_label')\">{{ 'CONTENT_TYPE.APP_LABEL' | translate }} {{ 'COMMON.SHOULD_HAVE_MAXIMUM' | translate }} 100</div>\r\n            </div>\r\n            <div class=\"col-lg-6\">\r\n              <label>{{ 'COMMON.ENTER' | translate }} {{ 'CONTENT_TYPE.MODEL' | translate }}</label>\r\n              <input type=\"text\" class=\"form-control form-control-lg form-control-solid\" autocomplete=\"off\"\r\n                name=\"model\" [class.is-invalid]=\"isControlInvalid('model')\"\r\n                [class.is-valid]=\"isControlValid('model')\" formControlName=\"model\" />\r\n              <div class=\"feedback\" *ngIf=\"!isControlTouched('model')\">{{ 'COMMON.PLEASE_ENTER' | translate }} <b>{{ 'CONTENT_TYPE.MODEL' | translate }}</b></div>\r\n              <div class=\"valid-feedback\" *ngIf=\"isControlValid('model')\">{{ 'CONTENT_TYPE.MODEL' | translate }}  {{ 'COMMON.WAS_ENTERED_CORRECT' | translate }}</div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"controlHasError('required', 'model')\">{{ 'CONTENT_TYPE.MODEL' | translate }}  {{ 'COMMON.IS_REQUIRED' | translate }}</div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"controlHasError('minlength', 'model')\">{{ 'CONTENT_TYPE.MODEL' | translate }} {{ 'COMMON.SHOULD_HAVE_LEAST' | translate }} 3</div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"controlHasError('maxLength', 'model')\">{{ 'CONTENT_TYPE.MODEL' | translate }} {{ 'COMMON.SHOULD_HAVE_MAXIMUM' | translate }} 100</div>\r\n            </div>\r\n          </div>\r\n          <div class=\"float-right\">\r\n            <a class=\"btn btn-default font-weight-bold mr-2\" routerLink=\"{{parent}}/contenttypes\">{{ 'COMMON.CANCEL' | translate }}</a>\r\n            <button type=\"submit\" class=\"btn btn-primary font-weight-bold mr-2\"\r\n              [disabled]=\"formGroup.invalid\" (click)=\"save(false)\">{{ 'COMMON.SAVE' | translate }}</button>\r\n            <button type=\"submit\" class=\"btn btn-primary font-weight-bold mr-2\"\r\n              [disabled]=\"formGroup.invalid\" (click)=\"save(true)\">{{ 'COMMON.SAVE_AND_EXIT' | translate }}</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </ng-container>\r\n  </div>\r\n</div>","// Spain\r\nexport const locale = {\r\n  lang: 'es',\r\n  data: {\r\n    TRANSLATOR: {\r\n      SELECT: 'Elige tu idioma',\r\n    },\r\n    AUTH: {\r\n      GENERAL: {\r\n        OR: 'O',\r\n        SUBMIT_BUTTON: 'Enviar',\r\n        NO_ACCOUNT: 'No tienes una cuenta?',\r\n        SIGNUP_BUTTON: 'Regístrate',\r\n        FORGOT_BUTTON: 'Se te olvidó tu contraseña',\r\n        SIGN_IN: 'Iniciar',\r\n        SIGN_OUT: 'Salir',\r\n        BACK_BUTTON: 'Espalda',\r\n        PRIVACY: 'Intimidad',\r\n        LEGAL: 'Legal',\r\n        TERMS: 'Términos',\r\n        CONTACT: 'Contacto',\r\n      },\r\n      LOGIN: {\r\n        TITLE: 'Crear una cuenta',\r\n        BUTTON: 'Registrarse',\r\n      },\r\n      FORGOT: {\r\n        TITLE: 'Contraseña olvidada?',\r\n        DESC: 'Ingrese su correo electrónico para restablecer su contraseña',\r\n        SUCCESS: 'Your account has been successfully reset.'\r\n      },\r\n      REGISTER: {\r\n        TITLE: 'Sign Up',\r\n        DESC: 'Enter your details to create your account',\r\n        SUCCESS: 'Your account has been successfuly registered.'\r\n      },\r\n      INPUT: {\r\n        EMAIL: 'Email',\r\n        FULLNAME: 'Fullname',\r\n        PASSWORD: 'Password',\r\n        CONFIRM_PASSWORD: 'Confirm Password',\r\n        USERNAME: 'Usuario'\r\n      },\r\n      VALIDATION: {\r\n        INVALID: '{{name}} is not valid',\r\n        REQUIRED: '{{name}} is required',\r\n        MIN_LENGTH: '{{name}} minimum length is {{min}}',\r\n        AGREEMENT_REQUIRED: 'Accepting terms & conditions are required',\r\n        NOT_FOUND: 'The requested {{name}} is not found',\r\n        INVALID_LOGIN: 'Datos de login incorrectos',\r\n        REQUIRED_FIELD: 'Required field',\r\n        MIN_LENGTH_FIELD: 'Minimum field length:',\r\n        MAX_LENGTH_FIELD: 'Maximum field length:',\r\n        INVALID_FIELD: 'Field is not valid',\r\n        USERNAME: 'Correo electrónico',\r\n        PASSWORD: 'Contraseña'\r\n      }\r\n    },\r\n    DASHBOARD: {\r\n      DASHBOARD: 'Tablero',\r\n    },\r\n    USER: {\r\n      USER: 'Usuario',\r\n      USERS: 'Usuarios',\r\n      ID: 'Id',\r\n      USERNAME: 'Username',\r\n      EMAIL: 'Email',\r\n      DATE_JOINED: 'Fecha Registro',\r\n      IS_ACTIVATE: 'Activo?' ,\r\n      STATUS: 'Status' ,\r\n      PASSWORD: 'Contraseña',\r\n      FIRST_NAME: 'Nombre',\r\n      LAST_NAME: 'Apellido',\r\n      PERMISSIONS: 'Permisos',\r\n      GROUPS: 'Grupos',\r\n      IS_STAFF: 'Staff?',\r\n      IS_SUPERUSER: 'Super Usuario?',\r\n    },\r\n    FUNCTIONARY: {\r\n      FUNCTIONARY: 'Funcionario',\r\n      FUNCTIONARYS: 'Funcionarios',\r\n      ID: 'Id',\r\n      NAME: 'Nombre',\r\n      LAST_NAME: 'Apellido',\r\n      IDENTIFICATION_NUMBER: 'Numero Documento',\r\n      PHONE: 'Celular',\r\n      MOBILE: 'Teléfono',\r\n      ADDRESS: 'Dirección',\r\n      INSTITUTIONAL_EMAIL: 'Email Institucional',\r\n      PERSONAL_EMAIL: 'Email Personal',\r\n      BIRTH_DATE: 'Fecha Nacimiento',\r\n      PROFESSION: 'Profesión',\r\n      ACTIVE: 'Activo',\r\n      USER: 'Usuario',\r\n    },\r\n    SPACE: {\r\n      SPACE: 'Espacio',\r\n      SPACES: 'Espacios',\r\n      ID: 'Id',\r\n      NAME: 'Nombre Espacio',\r\n      NUMBER_ROOM: 'Número Espacio',\r\n      DESCRIPTION: 'Descripción',\r\n      ACTIVE: 'Activo',\r\n      FUNCTIONARY: 'Encargado',\r\n      FUNCTIONARYS: 'Estudiantes',\r\n      ROOMS: 'Salas'\r\n    },\r\n    ROOM: {\r\n      ROOM: 'Sala',\r\n      ROOMS: 'Salas',\r\n      ID: 'Id',\r\n      NAME: 'Nombre Sala',\r\n      NUMBER_ROOM: 'Número Sala',\r\n      DESCRIPTION: 'Descripción',\r\n      ACTIVE: 'Activo',\r\n      FUNCTIONARY: 'Encargado',\r\n      SPACE: 'Espacio',\r\n      FOLDERS: 'Carpetas',\r\n    },\r\n    FOLDER: {\r\n      FOLDER: 'Carpeta',\r\n      FOLDERS: 'Carpetas',\r\n      ID: 'Id',\r\n      NAME: 'Nombre Carpeta',\r\n      EXPIRATION_DATE: 'Fecha Vencimiento',\r\n      GUIDE_FILE: 'Adjunto Guía',\r\n      DESCRIPTION: 'Descripción',\r\n      ACTIVE: 'Activo',\r\n      FUNCTIONARY: 'Encargado',\r\n      ROOM: 'Sala',\r\n    },\r\n    EVIDENCE: {\r\n      EVIDENCE: 'Evidencia',\r\n      EVIDENCES: 'Evidencias',\r\n      ID: 'Id',\r\n      OBSERVATION: 'Observación / Escrito',\r\n      EVIDENCE_LINK: 'Link Evidencia',\r\n      QUALIFICATION: 'Calificación',\r\n      RE_EXPIRATION_DATE: 'Plazo Máximo',\r\n      EVIDENCE_FILE: 'Archivo Evidencia',\r\n      ACTIVE: '¿Activo?',\r\n      FUNCTIONARY: 'Estudiante',\r\n      FOLDER: 'Carpeta',\r\n    },\r\n    PERMISSION: {\r\n      PERMISSION: 'Permiso',\r\n      PERMISSIONS: 'Permisos',\r\n      ID: 'Id',\r\n      NAME: 'Nombre',\r\n      CONTENT_TYPE: 'Tipo Contenido',\r\n      CODENAME: 'Nombre Clave',\r\n    },\r\n    CONTENT_TYPE: {\r\n      CONTENT_TYPE: 'Tipo Contenido Permiso',\r\n      CONTENT_TYPES: 'Tipos Contenido Permisos',\r\n      ID: 'Id',\r\n      APP_LABEL: 'Etiqueta de la Aplicación',\r\n      MODEL: 'Modelo',\r\n    },\r\n    GROUP: {\r\n      GROUP: 'Grupo',\r\n      GROUPS: 'Grupos',\r\n      ID: 'Id',\r\n      NAME: 'Nombre',\r\n      PERMISSIONS: 'Permisos'\r\n    },\r\n    COMMON: {\r\n      ID: 'ID',\r\n      SELECTED_RECORDS_COUNT: 'Selected records count: ',\r\n      ALL: 'Todo',\r\n      SUSPENDED: 'Suspendido',\r\n      ACTIVE: 'Activo',\r\n      ACTIVES: 'Activos',\r\n      INACTIVES: 'Inactivos',\r\n      FILTER: 'Filtro',\r\n      FILTERS: 'Filtros',\r\n      BY_STATUS: 'by Status',\r\n      BY_TYPE: 'by Type',\r\n      BUSINESS: 'Business',\r\n      INDIVIDUAL: 'Individual',\r\n      SEARCH: 'Buscar',\r\n      IN: 'en',\r\n      IN_ALL_FIELDS: 'in all fields',\r\n      NEW: 'Nuevo',\r\n      NEWS: 'Nuevos',\r\n      TOTAL: 'Total',\r\n      TRANSFER: 'Transferir',\r\n      EDIT: 'Editar',\r\n      DELETE: 'Eliminar',\r\n      ACTION: 'Acción',\r\n      NO_ITEMS_FOUND: 'Registros no encontrados',\r\n      BACK: 'Volver',\r\n      RESET: 'Resetear',\r\n      BASIC_INFO: 'Información Básica',\r\n      LIST: 'Listado',\r\n      CANCEL: 'Cancelar',\r\n      SAVE: 'Guardar',\r\n      SAVE_AND_EXIT: 'Guardar y Salir',\r\n      SAVE_AND_NEW: 'Guardar y Nuevo',\r\n      EXPORT: 'Exportar',\r\n      CONFIRMATION: 'Confirmación',\r\n      VERIFICATION: 'Verificación',\r\n      MESSAGE_CONFIRM_DELETE: '¿Estás seguro que deseas eliminar?',\r\n      MESSAGE_VERIFICATION_VOUCHER: '¿Estás seguro de verificar este comprobante?',\r\n      MESSAGE_FACTURE_VOUCHER_AND_PACKINGS: '¿Estás seguro de facturar este comprobante y sus envases?',\r\n      ENTER: 'Ingrese',\r\n      PLEASE_ENTER: 'Por favor ingrese',\r\n      IS_REQUIRED: 'es Requerido',\r\n      WAS_ENTERED_CORRECT: 'ingresado correctamente',\r\n      SHOULD_HAVE_LEAST: 'debería tener mínimo',\r\n      SHOULD_HAVE_MAXIMUM: 'debería tener máximo',\r\n      SHOWING: 'Mostrando',\r\n      SHOW: 'Mostar',\r\n      ASSIGNED_TO_ME: 'Asignados a mí',\r\n      FROM: 'de',\r\n      TO: 'a',\r\n      OF: 'de',\r\n      RECORDS: 'Registros',\r\n      TODAY: 'Hoy',\r\n      WELCOME_TO: 'Bienvenido a',\r\n      CHOOSE: 'Eligir',\r\n      HI: 'Hola',\r\n      CREATED_AT: 'Creado en',\r\n      YES: 'Si',\r\n      NO: 'No',\r\n      ASIGN: 'Asignar',\r\n      ADMINISTRATION: 'Administración',\r\n      TESTING: 'Prueba',\r\n      UPLOAD: 'Subir',\r\n      ADD_ALL: 'AGREGAR TODOS',\r\n      ADD_SELECTED: 'AGREGAR SELECCIONADOS',\r\n      ADD: 'Agregar'\r\n    },\r\n  }\r\n};\r\n\r\n\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";","import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\ntype Severities = 'success' | 'info' | 'warn' | 'error';\r\n\r\n@Injectable()\r\nexport class ToastService {\r\n  growlChange: Subject<Object> = new Subject<Object>();\r\n\r\n  growl(severity: Severities, summary: string, detail?: string, key?: string) {\r\n    this.growlChange.next({ severity, summary, detail, key });\r\n  }\r\n}\r\n"]}